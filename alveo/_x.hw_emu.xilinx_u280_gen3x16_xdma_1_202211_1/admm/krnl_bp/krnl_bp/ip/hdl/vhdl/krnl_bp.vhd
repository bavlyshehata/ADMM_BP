-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_bp is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 256;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 256;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    event_done : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    event_start : OUT STD_LOGIC;
    stall_start_ext : OUT STD_LOGIC;
    stall_done_ext : OUT STD_LOGIC;
    stall_start_str : OUT STD_LOGIC;
    stall_done_str : OUT STD_LOGIC;
    stall_start_int : OUT STD_LOGIC;
    stall_done_int : OUT STD_LOGIC );
end;


architecture behav of krnl_bp is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "krnl_bp_krnl_bp,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=7,HLS_SYN_DSP=0,HLS_SYN_FF=34379,HLS_SYN_LUT=38688,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state143 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state144 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state145 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state146 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state147 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state148 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state149 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state150 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state151 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state152 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state153 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state154 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state155 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state156 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state157 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state158 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state159 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state160 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state161 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state162 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state163 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state164 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state165 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state166 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state167 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state168 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state169 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state170 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state171 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state172 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state173 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state174 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state175 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state176 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state177 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state178 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state179 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state180 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state181 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state182 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state183 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state184 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state185 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state186 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state187 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state188 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state189 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state190 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state191 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state192 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state193 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state194 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state195 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state196 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state197 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state198 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state199 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state200 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state201 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state202 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state203 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state204 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state205 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state206 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state207 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state208 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state209 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state210 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state211 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state212 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state213 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state214 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state215 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state216 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state217 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state218 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state219 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state220 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state221 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state222 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state223 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state224 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state225 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state226 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state227 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state228 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state229 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state230 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state231 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state232 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state233 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state234 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state235 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state236 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state237 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state238 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state239 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state240 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state241 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state242 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state243 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state244 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state245 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state246 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state247 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state248 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state249 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state250 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state251 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state252 : STD_LOGIC_VECTOR (262 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state253 : STD_LOGIC_VECTOR (262 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state254 : STD_LOGIC_VECTOR (262 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state255 : STD_LOGIC_VECTOR (262 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state256 : STD_LOGIC_VECTOR (262 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state257 : STD_LOGIC_VECTOR (262 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state258 : STD_LOGIC_VECTOR (262 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state259 : STD_LOGIC_VECTOR (262 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state260 : STD_LOGIC_VECTOR (262 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state261 : STD_LOGIC_VECTOR (262 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state262 : STD_LOGIC_VECTOR (262 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state263 : STD_LOGIC_VECTOR (262 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_C1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000001";
    constant ap_const_lv32_C2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000010";
    constant ap_const_lv32_106 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000110";
    constant ap_const_lv32_A4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100100";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_A6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100110";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101100";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101110";
    constant ap_const_lv32_B6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110110";
    constant ap_const_lv32_B9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111001";
    constant ap_const_lv32_BA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_89 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001001";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv32_8B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001011";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv32_8D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001101";
    constant ap_const_lv32_8E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001110";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_91 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010001";
    constant ap_const_lv32_92 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010010";
    constant ap_const_lv32_93 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010011";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_86 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000110";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000010";
    constant ap_const_lv32_85 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000101";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_BB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111011";
    constant ap_const_lv32_BD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111101";
    constant ap_const_lv32_BE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111110";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011001";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv32_AD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101101";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_3C23D70A : STD_LOGIC_VECTOR (31 downto 0) := "00111100001000111101011100001010";
    constant ap_const_lv32_A5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100101";
    constant ap_const_lv32_A9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101001";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv64_3F3289502B575FFC : STD_LOGIC_VECTOR (63 downto 0) := "0011111100110010100010010101000000101011010101110101111111111100";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (262 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal mat_p : STD_LOGIC_VECTOR (63 downto 0);
    signal vec_q : STD_LOGIC_VECTOR (63 downto 0);
    signal out_r : STD_LOGIC_VECTOR (63 downto 0);
    signal rho : STD_LOGIC_VECTOR (31 downto 0);
    signal alpha : STD_LOGIC_VECTOR (31 downto 0);
    signal mat_p_bram_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mat_p_bram_ce0 : STD_LOGIC;
    signal mat_p_bram_we0 : STD_LOGIC;
    signal mat_p_bram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal vec_q_bram_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal vec_q_bram_ce0 : STD_LOGIC;
    signal vec_q_bram_we0 : STD_LOGIC;
    signal vec_q_bram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_bram_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_bram_ce0 : STD_LOGIC;
    signal x_bram_we0 : STD_LOGIC;
    signal x_bram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem1_blk_n_AR : STD_LOGIC;
    signal gmem1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal gmem2_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state194 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state194 : signal is "none";
    signal gmem2_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state195 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state195 : signal is "none";
    signal gmem2_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state263 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state263 : signal is "none";
    signal grp_fu_660_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_680 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state165 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state165 : signal is "none";
    signal ap_CS_fsm_state185 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state185 : signal is "none";
    signal grp_fu_665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_686 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state167 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state167 : signal is "none";
    signal grp_fu_631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_692 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state169 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state169 : signal is "none";
    signal ap_CS_fsm_state173 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state173 : signal is "none";
    signal out_r_read_reg_1102 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_1143 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln19_1_reg_1149 : STD_LOGIC_VECTOR (58 downto 0);
    signal gmem1_addr_read_reg_1165 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal sub1_fu_752_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub1_reg_1183 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal grp_fu_626_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_alpha_reg_1188 : STD_LOGIC_VECTOR (31 downto 0);
    signal norm_x_reg_1202 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln868_fu_851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln868_reg_1209 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_636_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul2_i_reg_1214 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_646_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv2_i_reg_1225 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state175 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state175 : signal is "none";
    signal grp_fu_649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv3_i_reg_1230 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_670_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_i_reg_1235 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state183 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state183 : signal is "none";
    signal grp_fu_675_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_i1_reg_1240 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_640_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal eps_pri_reg_1245 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_643_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal eps_dual_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1099_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_reg_1257 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state186 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state186 : signal is "none";
    signal icmp_ln1099_1_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_1_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_2_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_2_reg_1267 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_3_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_3_reg_1272 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_4_fu_960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_4_reg_1277 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_5_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_5_reg_1282 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_6_fu_972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_6_reg_1287 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_7_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1099_7_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_reg_1300 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_CS_fsm_state187 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state187 : signal is "none";
    signal or_cond41_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_ce0 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_we0 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_ce0 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_we0 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_u_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_u_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_z_copy_2_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_z_copy_2_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_z_old_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_z_old_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_int_blocking_n : STD_LOGIC;
    signal grp_replicate_stream_fu_423_ap_start : STD_LOGIC;
    signal grp_replicate_stream_fu_423_ap_done : STD_LOGIC;
    signal grp_replicate_stream_fu_423_ap_idle : STD_LOGIC;
    signal grp_replicate_stream_fu_423_ap_ready : STD_LOGIC;
    signal grp_replicate_stream_fu_423_krnl_bp_u_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_replicate_stream_fu_423_krnl_bp_u_stream_empty_n : STD_LOGIC;
    signal grp_replicate_stream_fu_423_krnl_bp_u_stream_read : STD_LOGIC;
    signal grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_full_n : STD_LOGIC;
    signal grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_write : STD_LOGIC;
    signal grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_full_n : STD_LOGIC;
    signal grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_write : STD_LOGIC;
    signal grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_full_n : STD_LOGIC;
    signal grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_write : STD_LOGIC;
    signal grp_replicate_stream_fu_423_ap_ext_blocking_n : STD_LOGIC;
    signal grp_replicate_stream_fu_423_ap_str_blocking_n : STD_LOGIC;
    signal grp_replicate_stream_fu_423_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_copy_2_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_u_copy_1_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_u_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_u_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_ce : STD_LOGIC;
    signal grp_mac_fu_459_ap_start : STD_LOGIC;
    signal grp_mac_fu_459_ap_done : STD_LOGIC;
    signal grp_mac_fu_459_ap_idle : STD_LOGIC;
    signal grp_mac_fu_459_ap_ready : STD_LOGIC;
    signal grp_mac_fu_459_mat_p_bram_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mac_fu_459_mat_p_bram_ce0 : STD_LOGIC;
    signal grp_mac_fu_459_z_u_stream_read : STD_LOGIC;
    signal grp_mac_fu_459_mac_res_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mac_fu_459_mac_res_stream_write : STD_LOGIC;
    signal grp_mac_fu_459_ap_ext_blocking_n : STD_LOGIC;
    signal grp_mac_fu_459_ap_str_blocking_n : STD_LOGIC;
    signal grp_mac_fu_459_ap_int_blocking_n : STD_LOGIC;
    signal grp_mac_fu_459_grp_fu_626_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mac_fu_459_grp_fu_626_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mac_fu_459_grp_fu_626_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mac_fu_459_grp_fu_626_p_ce : STD_LOGIC;
    signal grp_mac_fu_459_grp_fu_631_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mac_fu_459_grp_fu_631_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mac_fu_459_grp_fu_631_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_q_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_q_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_vec_q_bram_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_vec_q_bram_ce0 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_mac_res_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_q_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_x_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_x_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_z_old_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_hat_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_hat_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_hat_copy_3_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_ce0 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_we0 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_int_blocking_n : STD_LOGIC;
    signal grp_vec_add_fu_527_ap_start : STD_LOGIC;
    signal grp_vec_add_fu_527_ap_done : STD_LOGIC;
    signal grp_vec_add_fu_527_ap_idle : STD_LOGIC;
    signal grp_vec_add_fu_527_ap_ready : STD_LOGIC;
    signal grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_empty_n : STD_LOGIC;
    signal grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_read : STD_LOGIC;
    signal grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_empty_n : STD_LOGIC;
    signal grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_read : STD_LOGIC;
    signal grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_full_n : STD_LOGIC;
    signal grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_write : STD_LOGIC;
    signal grp_vec_add_fu_527_ap_ce : STD_LOGIC;
    signal grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n : STD_LOGIC;
    signal grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n : STD_LOGIC;
    signal grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n : STD_LOGIC;
    signal grp_vec_add_fu_527_ap_ext_blocking_n : STD_LOGIC;
    signal grp_vec_add_fu_527_ap_str_blocking_n : STD_LOGIC;
    signal grp_vec_add_fu_527_ap_int_blocking_n : STD_LOGIC;
    signal ap_block_state114 : BOOLEAN;
    signal ap_block_state115 : BOOLEAN;
    signal ap_block_state116 : BOOLEAN;
    signal ap_block_state117 : BOOLEAN;
    signal ap_block_state118 : BOOLEAN;
    signal ap_block_state119 : BOOLEAN;
    signal ap_block_state120 : BOOLEAN;
    signal ap_block_state121 : BOOLEAN;
    signal ap_block_state122 : BOOLEAN;
    signal ap_block_state123 : BOOLEAN;
    signal ap_block_state124 : BOOLEAN;
    signal ap_block_state125 : BOOLEAN;
    signal ap_block_state126 : BOOLEAN;
    signal ap_block_state127 : BOOLEAN;
    signal ap_block_state128 : BOOLEAN;
    signal ap_block_state129 : BOOLEAN;
    signal ap_block_state136 : BOOLEAN;
    signal ap_block_state137 : BOOLEAN;
    signal ap_block_state138 : BOOLEAN;
    signal ap_block_state139 : BOOLEAN;
    signal ap_block_state140 : BOOLEAN;
    signal ap_block_state141 : BOOLEAN;
    signal ap_block_state142 : BOOLEAN;
    signal ap_block_state143 : BOOLEAN;
    signal ap_block_state144 : BOOLEAN;
    signal ap_block_state145 : BOOLEAN;
    signal ap_block_state146 : BOOLEAN;
    signal ap_block_state147 : BOOLEAN;
    signal ap_block_state148 : BOOLEAN;
    signal ap_block_state149 : BOOLEAN;
    signal ap_block_state150 : BOOLEAN;
    signal ap_block_state151 : BOOLEAN;
    signal ap_CS_fsm_state114 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state114 : signal is "none";
    signal ap_CS_fsm_state115 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state115 : signal is "none";
    signal ap_CS_fsm_state116 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state116 : signal is "none";
    signal ap_CS_fsm_state117 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state117 : signal is "none";
    signal ap_CS_fsm_state118 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state118 : signal is "none";
    signal ap_CS_fsm_state119 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state119 : signal is "none";
    signal ap_CS_fsm_state120 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state120 : signal is "none";
    signal ap_CS_fsm_state121 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state121 : signal is "none";
    signal ap_CS_fsm_state122 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state122 : signal is "none";
    signal ap_CS_fsm_state123 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state123 : signal is "none";
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal ap_CS_fsm_state125 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state125 : signal is "none";
    signal ap_CS_fsm_state126 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state126 : signal is "none";
    signal ap_CS_fsm_state127 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state127 : signal is "none";
    signal ap_CS_fsm_state128 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state128 : signal is "none";
    signal ap_CS_fsm_state129 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state129 : signal is "none";
    signal ap_CS_fsm_state136 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state136 : signal is "none";
    signal ap_CS_fsm_state137 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state137 : signal is "none";
    signal ap_CS_fsm_state138 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state138 : signal is "none";
    signal ap_CS_fsm_state139 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state139 : signal is "none";
    signal ap_CS_fsm_state140 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state140 : signal is "none";
    signal ap_CS_fsm_state141 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state141 : signal is "none";
    signal ap_CS_fsm_state142 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state142 : signal is "none";
    signal ap_CS_fsm_state143 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state143 : signal is "none";
    signal ap_CS_fsm_state144 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state144 : signal is "none";
    signal ap_CS_fsm_state145 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state145 : signal is "none";
    signal ap_CS_fsm_state146 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state146 : signal is "none";
    signal ap_CS_fsm_state147 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state147 : signal is "none";
    signal ap_CS_fsm_state148 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state148 : signal is "none";
    signal ap_CS_fsm_state149 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state149 : signal is "none";
    signal ap_CS_fsm_state150 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state150 : signal is "none";
    signal ap_CS_fsm_state151 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state151 : signal is "none";
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_x_hat_u_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_z_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_z_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_copy_2_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_z_copy_1_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_z_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_z_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_r_norm_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_r_norm_1_out_ap_vld : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_s_norm_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_s_norm_1_out_ap_vld : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_x_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_x_1_out_ap_vld : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_z_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_z_1_out_ap_vld : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_u_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_u_out_ap_vld : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_x_bram_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_x_bram_ce0 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_640_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_640_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_646_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_646_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_ce : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_u_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_z_old_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_z_copy_2_stream_read : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_int_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_start : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_done : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_idle : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_ready : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_shiftreg_out : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_shiftreg_out_ap_vld : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_x_bram_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_x_bram_ce0 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_ext_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_str_blocking_n : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_int_blocking_n : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARVALID : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RREADY : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal gmem1_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem2_AWVALID : STD_LOGIC;
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_WVALID : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal gmem2_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal gmem2_BREADY : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (262 downto 0);
    signal ap_NS_fsm_state73 : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal u_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal u_stream_full_n : STD_LOGIC;
    signal u_stream_write : STD_LOGIC;
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal z_copy_2_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal z_copy_2_stream_full_n : STD_LOGIC;
    signal z_copy_2_stream_write : STD_LOGIC;
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal z_old_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal z_old_stream_full_n : STD_LOGIC;
    signal z_old_stream_write : STD_LOGIC;
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal grp_replicate_stream_fu_423_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal ap_CS_fsm_state132 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state132 : signal is "none";
    signal u_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal u_stream_empty_n : STD_LOGIC;
    signal u_stream_read : STD_LOGIC;
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal x_hat_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal x_hat_stream_empty_n : STD_LOGIC;
    signal x_hat_stream_read : STD_LOGIC;
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal z_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal z_stream_empty_n : STD_LOGIC;
    signal z_stream_read : STD_LOGIC;
    signal ap_CS_fsm_state133 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state133 : signal is "none";
    signal u_copy_1_stream_full_n : STD_LOGIC;
    signal u_copy_1_stream_write : STD_LOGIC;
    signal x_hat_copy_1_stream_full_n : STD_LOGIC;
    signal x_hat_copy_1_stream_write : STD_LOGIC;
    signal u_copy_2_stream_full_n : STD_LOGIC;
    signal u_copy_2_stream_write : STD_LOGIC;
    signal x_hat_copy_2_stream_full_n : STD_LOGIC;
    signal x_hat_copy_2_stream_write : STD_LOGIC;
    signal z_copy_1_stream_full_n : STD_LOGIC;
    signal z_copy_1_stream_write : STD_LOGIC;
    signal u_copy_3_stream_full_n : STD_LOGIC;
    signal u_copy_3_stream_write : STD_LOGIC;
    signal x_hat_copy_3_stream_full_n : STD_LOGIC;
    signal x_hat_copy_3_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal z_u_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal z_u_stream_empty_n : STD_LOGIC;
    signal z_u_stream_read : STD_LOGIC;
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal z_u_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal z_u_stream_full_n : STD_LOGIC;
    signal z_u_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal z_copy_2_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal z_copy_2_stream_empty_n : STD_LOGIC;
    signal z_copy_2_stream_read : STD_LOGIC;
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal u_copy_1_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal u_copy_1_stream_empty_n : STD_LOGIC;
    signal u_copy_1_stream_read : STD_LOGIC;
    signal grp_mac_fu_459_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal mac_res_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal mac_res_stream_full_n : STD_LOGIC;
    signal mac_res_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal mac_res_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mac_res_stream_empty_n : STD_LOGIC;
    signal mac_res_stream_read : STD_LOGIC;
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal q_stream_full_n : STD_LOGIC;
    signal q_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal q_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal q_stream_empty_n : STD_LOGIC;
    signal q_stream_read : STD_LOGIC;
    signal x_stream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal x_stream_full_n : STD_LOGIC;
    signal x_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal x_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal x_stream_empty_n : STD_LOGIC;
    signal x_stream_read : STD_LOGIC;
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state108 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state108 : signal is "none";
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal z_old_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal z_old_stream_empty_n : STD_LOGIC;
    signal z_old_stream_read : STD_LOGIC;
    signal x_hat_stream_full_n : STD_LOGIC;
    signal x_hat_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state112 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state112 : signal is "none";
    signal x_hat_copy_3_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal x_hat_copy_3_stream_empty_n : STD_LOGIC;
    signal x_hat_copy_3_stream_read : STD_LOGIC;
    signal ap_CS_fsm_state113 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state113 : signal is "none";
    signal grp_vec_add_fu_527_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm_state114 : STD_LOGIC;
    signal ap_CS_fsm_state135 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state135 : signal is "none";
    signal ap_NS_fsm_state136 : STD_LOGIC;
    signal x_hat_copy_1_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal x_hat_copy_1_stream_empty_n : STD_LOGIC;
    signal x_hat_copy_1_stream_read : STD_LOGIC;
    signal x_hat_z_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal x_hat_z_stream_empty_n : STD_LOGIC;
    signal x_hat_z_stream_read : STD_LOGIC;
    signal u_copy_2_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal u_copy_2_stream_empty_n : STD_LOGIC;
    signal u_copy_2_stream_read : STD_LOGIC;
    signal u_copy_3_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal u_copy_3_stream_empty_n : STD_LOGIC;
    signal u_copy_3_stream_read : STD_LOGIC;
    signal x_hat_u_stream_full_n : STD_LOGIC;
    signal x_hat_u_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state130 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state130 : signal is "none";
    signal ap_CS_fsm_state131 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state131 : signal is "none";
    signal x_hat_u_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal x_hat_u_stream_empty_n : STD_LOGIC;
    signal x_hat_u_stream_read : STD_LOGIC;
    signal z_stream_full_n : STD_LOGIC;
    signal z_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state134 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state134 : signal is "none";
    signal x_hat_copy_2_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal x_hat_copy_2_stream_empty_n : STD_LOGIC;
    signal x_hat_copy_2_stream_read : STD_LOGIC;
    signal z_copy_1_stream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal z_copy_1_stream_empty_n : STD_LOGIC;
    signal z_copy_1_stream_read : STD_LOGIC;
    signal x_hat_z_stream_full_n : STD_LOGIC;
    signal x_hat_z_stream_write : STD_LOGIC;
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state152 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state152 : signal is "none";
    signal ap_CS_fsm_state153 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state153 : signal is "none";
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state188 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state188 : signal is "none";
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state190 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state190 : signal is "none";
    signal ap_CS_fsm_state191 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state191 : signal is "none";
    signal grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state193 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state193 : signal is "none";
    signal grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_start_reg : STD_LOGIC := '0';
    signal sext_ln19_fu_723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln19_1_fu_733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1127_fu_1081_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state194_on_subcall_done : BOOLEAN;
    signal i_8_fu_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_13_fu_987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state154 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state154 : signal is "none";
    signal ap_CS_fsm_state156 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state156 : signal is "none";
    signal ap_CS_fsm_state174 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state174 : signal is "none";
    signal ap_block_state74_on_subcall_done : BOOLEAN;
    signal grp_fu_626_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_626_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal grp_fu_631_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_631_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state166 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state166 : signal is "none";
    signal ap_CS_fsm_state170 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state170 : signal is "none";
    signal grp_fu_636_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_640_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state184 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state184 : signal is "none";
    signal grp_fu_646_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_652_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state168 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state168 : signal is "none";
    signal grp_fu_656_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_656_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_660_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_665_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_670_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state176 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state176 : signal is "none";
    signal sub1_to_int_fu_743_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub1_neg_fu_746_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln224_fu_768_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln224_1_fu_785_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_771_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln224_fu_781_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln224_1_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln224_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_789_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln224_1_fu_799_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln224_3_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln224_2_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln224_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln224_1_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln224_1_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln1099_fu_866_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln1099_1_fu_884_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_870_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1099_fu_880_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_24_fu_887_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1099_1_fu_897_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln1099_2_fu_925_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln1099_3_fu_943_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_929_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1099_2_fu_939_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_27_fu_946_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1099_3_fu_956_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln1099_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1099_1_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1099_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1099_2_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1099_3_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1099_2_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1099_3_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1099_1_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1099_4_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1045_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln967_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1099_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_626_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_626_ce : STD_LOGIC;
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_fu_631_ce : STD_LOGIC;
    signal grp_fu_636_ce : STD_LOGIC;
    signal grp_fu_640_ce : STD_LOGIC;
    signal grp_fu_646_ce : STD_LOGIC;
    signal grp_fu_652_ce : STD_LOGIC;
    signal grp_fu_652_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_656_ce : STD_LOGIC;
    signal grp_fu_656_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_670_ce : STD_LOGIC;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal ap_ST_fsm_state89_blk : STD_LOGIC;
    signal ap_ST_fsm_state90_blk : STD_LOGIC;
    signal ap_ST_fsm_state91_blk : STD_LOGIC;
    signal ap_ST_fsm_state92_blk : STD_LOGIC;
    signal ap_ST_fsm_state93_blk : STD_LOGIC;
    signal ap_ST_fsm_state94_blk : STD_LOGIC;
    signal ap_ST_fsm_state95_blk : STD_LOGIC;
    signal ap_ST_fsm_state96_blk : STD_LOGIC;
    signal ap_ST_fsm_state97_blk : STD_LOGIC;
    signal ap_ST_fsm_state98_blk : STD_LOGIC;
    signal ap_ST_fsm_state99_blk : STD_LOGIC;
    signal ap_ST_fsm_state100_blk : STD_LOGIC;
    signal ap_ST_fsm_state101_blk : STD_LOGIC;
    signal ap_ST_fsm_state102_blk : STD_LOGIC;
    signal ap_ST_fsm_state103_blk : STD_LOGIC;
    signal ap_ST_fsm_state104_blk : STD_LOGIC;
    signal ap_ST_fsm_state105_blk : STD_LOGIC;
    signal ap_ST_fsm_state106_blk : STD_LOGIC;
    signal ap_ST_fsm_state107_blk : STD_LOGIC;
    signal ap_ST_fsm_state108_blk : STD_LOGIC;
    signal ap_ST_fsm_state109_blk : STD_LOGIC;
    signal ap_ST_fsm_state110_blk : STD_LOGIC;
    signal ap_ST_fsm_state111_blk : STD_LOGIC;
    signal ap_ST_fsm_state112_blk : STD_LOGIC;
    signal ap_ST_fsm_state113_blk : STD_LOGIC;
    signal ap_ST_fsm_state114_blk : STD_LOGIC;
    signal ap_ST_fsm_state115_blk : STD_LOGIC;
    signal ap_ST_fsm_state116_blk : STD_LOGIC;
    signal ap_ST_fsm_state117_blk : STD_LOGIC;
    signal ap_ST_fsm_state118_blk : STD_LOGIC;
    signal ap_ST_fsm_state119_blk : STD_LOGIC;
    signal ap_ST_fsm_state120_blk : STD_LOGIC;
    signal ap_ST_fsm_state121_blk : STD_LOGIC;
    signal ap_ST_fsm_state122_blk : STD_LOGIC;
    signal ap_ST_fsm_state123_blk : STD_LOGIC;
    signal ap_ST_fsm_state124_blk : STD_LOGIC;
    signal ap_ST_fsm_state125_blk : STD_LOGIC;
    signal ap_ST_fsm_state126_blk : STD_LOGIC;
    signal ap_ST_fsm_state127_blk : STD_LOGIC;
    signal ap_ST_fsm_state128_blk : STD_LOGIC;
    signal ap_ST_fsm_state129_blk : STD_LOGIC;
    signal ap_ST_fsm_state130_blk : STD_LOGIC;
    signal ap_ST_fsm_state131_blk : STD_LOGIC;
    signal ap_ST_fsm_state132_blk : STD_LOGIC;
    signal ap_ST_fsm_state133_blk : STD_LOGIC;
    signal ap_ST_fsm_state134_blk : STD_LOGIC;
    signal ap_ST_fsm_state135_blk : STD_LOGIC;
    signal ap_ST_fsm_state136_blk : STD_LOGIC;
    signal ap_ST_fsm_state137_blk : STD_LOGIC;
    signal ap_ST_fsm_state138_blk : STD_LOGIC;
    signal ap_ST_fsm_state139_blk : STD_LOGIC;
    signal ap_ST_fsm_state140_blk : STD_LOGIC;
    signal ap_ST_fsm_state141_blk : STD_LOGIC;
    signal ap_ST_fsm_state142_blk : STD_LOGIC;
    signal ap_ST_fsm_state143_blk : STD_LOGIC;
    signal ap_ST_fsm_state144_blk : STD_LOGIC;
    signal ap_ST_fsm_state145_blk : STD_LOGIC;
    signal ap_ST_fsm_state146_blk : STD_LOGIC;
    signal ap_ST_fsm_state147_blk : STD_LOGIC;
    signal ap_ST_fsm_state148_blk : STD_LOGIC;
    signal ap_ST_fsm_state149_blk : STD_LOGIC;
    signal ap_ST_fsm_state150_blk : STD_LOGIC;
    signal ap_ST_fsm_state151_blk : STD_LOGIC;
    signal ap_ST_fsm_state152_blk : STD_LOGIC;
    signal ap_ST_fsm_state153_blk : STD_LOGIC;
    signal ap_ST_fsm_state154_blk : STD_LOGIC;
    signal ap_ST_fsm_state155_blk : STD_LOGIC;
    signal ap_ST_fsm_state156_blk : STD_LOGIC;
    signal ap_ST_fsm_state157_blk : STD_LOGIC;
    signal ap_ST_fsm_state158_blk : STD_LOGIC;
    signal ap_ST_fsm_state159_blk : STD_LOGIC;
    signal ap_ST_fsm_state160_blk : STD_LOGIC;
    signal ap_ST_fsm_state161_blk : STD_LOGIC;
    signal ap_ST_fsm_state162_blk : STD_LOGIC;
    signal ap_ST_fsm_state163_blk : STD_LOGIC;
    signal ap_ST_fsm_state164_blk : STD_LOGIC;
    signal ap_ST_fsm_state165_blk : STD_LOGIC;
    signal ap_ST_fsm_state166_blk : STD_LOGIC;
    signal ap_ST_fsm_state167_blk : STD_LOGIC;
    signal ap_ST_fsm_state168_blk : STD_LOGIC;
    signal ap_ST_fsm_state169_blk : STD_LOGIC;
    signal ap_ST_fsm_state170_blk : STD_LOGIC;
    signal ap_ST_fsm_state171_blk : STD_LOGIC;
    signal ap_ST_fsm_state172_blk : STD_LOGIC;
    signal ap_ST_fsm_state173_blk : STD_LOGIC;
    signal ap_ST_fsm_state174_blk : STD_LOGIC;
    signal ap_ST_fsm_state175_blk : STD_LOGIC;
    signal ap_ST_fsm_state176_blk : STD_LOGIC;
    signal ap_ST_fsm_state177_blk : STD_LOGIC;
    signal ap_ST_fsm_state178_blk : STD_LOGIC;
    signal ap_ST_fsm_state179_blk : STD_LOGIC;
    signal ap_ST_fsm_state180_blk : STD_LOGIC;
    signal ap_ST_fsm_state181_blk : STD_LOGIC;
    signal ap_ST_fsm_state182_blk : STD_LOGIC;
    signal ap_ST_fsm_state183_blk : STD_LOGIC;
    signal ap_ST_fsm_state184_blk : STD_LOGIC;
    signal ap_ST_fsm_state185_blk : STD_LOGIC;
    signal ap_ST_fsm_state186_blk : STD_LOGIC;
    signal ap_ST_fsm_state187_blk : STD_LOGIC;
    signal ap_ST_fsm_state188_blk : STD_LOGIC;
    signal ap_ST_fsm_state189_blk : STD_LOGIC;
    signal ap_ST_fsm_state190_blk : STD_LOGIC;
    signal ap_ST_fsm_state191_blk : STD_LOGIC;
    signal ap_ST_fsm_state192_blk : STD_LOGIC;
    signal ap_ST_fsm_state193_blk : STD_LOGIC;
    signal ap_ST_fsm_state194_blk : STD_LOGIC;
    signal ap_ST_fsm_state195_blk : STD_LOGIC;
    signal ap_ST_fsm_state196_blk : STD_LOGIC;
    signal ap_ST_fsm_state197_blk : STD_LOGIC;
    signal ap_ST_fsm_state198_blk : STD_LOGIC;
    signal ap_ST_fsm_state199_blk : STD_LOGIC;
    signal ap_ST_fsm_state200_blk : STD_LOGIC;
    signal ap_ST_fsm_state201_blk : STD_LOGIC;
    signal ap_ST_fsm_state202_blk : STD_LOGIC;
    signal ap_ST_fsm_state203_blk : STD_LOGIC;
    signal ap_ST_fsm_state204_blk : STD_LOGIC;
    signal ap_ST_fsm_state205_blk : STD_LOGIC;
    signal ap_ST_fsm_state206_blk : STD_LOGIC;
    signal ap_ST_fsm_state207_blk : STD_LOGIC;
    signal ap_ST_fsm_state208_blk : STD_LOGIC;
    signal ap_ST_fsm_state209_blk : STD_LOGIC;
    signal ap_ST_fsm_state210_blk : STD_LOGIC;
    signal ap_ST_fsm_state211_blk : STD_LOGIC;
    signal ap_ST_fsm_state212_blk : STD_LOGIC;
    signal ap_ST_fsm_state213_blk : STD_LOGIC;
    signal ap_ST_fsm_state214_blk : STD_LOGIC;
    signal ap_ST_fsm_state215_blk : STD_LOGIC;
    signal ap_ST_fsm_state216_blk : STD_LOGIC;
    signal ap_ST_fsm_state217_blk : STD_LOGIC;
    signal ap_ST_fsm_state218_blk : STD_LOGIC;
    signal ap_ST_fsm_state219_blk : STD_LOGIC;
    signal ap_ST_fsm_state220_blk : STD_LOGIC;
    signal ap_ST_fsm_state221_blk : STD_LOGIC;
    signal ap_ST_fsm_state222_blk : STD_LOGIC;
    signal ap_ST_fsm_state223_blk : STD_LOGIC;
    signal ap_ST_fsm_state224_blk : STD_LOGIC;
    signal ap_ST_fsm_state225_blk : STD_LOGIC;
    signal ap_ST_fsm_state226_blk : STD_LOGIC;
    signal ap_ST_fsm_state227_blk : STD_LOGIC;
    signal ap_ST_fsm_state228_blk : STD_LOGIC;
    signal ap_ST_fsm_state229_blk : STD_LOGIC;
    signal ap_ST_fsm_state230_blk : STD_LOGIC;
    signal ap_ST_fsm_state231_blk : STD_LOGIC;
    signal ap_ST_fsm_state232_blk : STD_LOGIC;
    signal ap_ST_fsm_state233_blk : STD_LOGIC;
    signal ap_ST_fsm_state234_blk : STD_LOGIC;
    signal ap_ST_fsm_state235_blk : STD_LOGIC;
    signal ap_ST_fsm_state236_blk : STD_LOGIC;
    signal ap_ST_fsm_state237_blk : STD_LOGIC;
    signal ap_ST_fsm_state238_blk : STD_LOGIC;
    signal ap_ST_fsm_state239_blk : STD_LOGIC;
    signal ap_ST_fsm_state240_blk : STD_LOGIC;
    signal ap_ST_fsm_state241_blk : STD_LOGIC;
    signal ap_ST_fsm_state242_blk : STD_LOGIC;
    signal ap_ST_fsm_state243_blk : STD_LOGIC;
    signal ap_ST_fsm_state244_blk : STD_LOGIC;
    signal ap_ST_fsm_state245_blk : STD_LOGIC;
    signal ap_ST_fsm_state246_blk : STD_LOGIC;
    signal ap_ST_fsm_state247_blk : STD_LOGIC;
    signal ap_ST_fsm_state248_blk : STD_LOGIC;
    signal ap_ST_fsm_state249_blk : STD_LOGIC;
    signal ap_ST_fsm_state250_blk : STD_LOGIC;
    signal ap_ST_fsm_state251_blk : STD_LOGIC;
    signal ap_ST_fsm_state252_blk : STD_LOGIC;
    signal ap_ST_fsm_state253_blk : STD_LOGIC;
    signal ap_ST_fsm_state254_blk : STD_LOGIC;
    signal ap_ST_fsm_state255_blk : STD_LOGIC;
    signal ap_ST_fsm_state256_blk : STD_LOGIC;
    signal ap_ST_fsm_state257_blk : STD_LOGIC;
    signal ap_ST_fsm_state258_blk : STD_LOGIC;
    signal ap_ST_fsm_state259_blk : STD_LOGIC;
    signal ap_ST_fsm_state260_blk : STD_LOGIC;
    signal ap_ST_fsm_state261_blk : STD_LOGIC;
    signal ap_ST_fsm_state262_blk : STD_LOGIC;
    signal ap_ST_fsm_state263_blk : STD_LOGIC;
    signal ap_ext_blocking_cur_n : STD_LOGIC;
    signal ap_ext_blocking_sub_n : STD_LOGIC;
    signal ap_wait_0 : STD_LOGIC;
    signal ap_sub_ext_blocking_0 : STD_LOGIC;
    signal ap_wait_1 : STD_LOGIC;
    signal ap_sub_ext_blocking_1 : STD_LOGIC;
    signal ap_wait_2 : STD_LOGIC;
    signal ap_sub_ext_blocking_2 : STD_LOGIC;
    signal ap_wait_3 : STD_LOGIC;
    signal ap_sub_ext_blocking_3 : STD_LOGIC;
    signal ap_wait_4 : STD_LOGIC;
    signal ap_sub_ext_blocking_4 : STD_LOGIC;
    signal ap_wait_5 : STD_LOGIC;
    signal ap_sub_ext_blocking_5 : STD_LOGIC;
    signal ap_wait_6 : STD_LOGIC;
    signal ap_sub_ext_blocking_6 : STD_LOGIC;
    signal ap_wait_7 : STD_LOGIC;
    signal ap_sub_ext_blocking_7 : STD_LOGIC;
    signal ap_wait_8 : STD_LOGIC;
    signal ap_sub_ext_blocking_8 : STD_LOGIC;
    signal ap_wait_9 : STD_LOGIC;
    signal ap_sub_ext_blocking_9 : STD_LOGIC;
    signal ap_wait_10 : STD_LOGIC;
    signal ap_sub_ext_blocking_10 : STD_LOGIC;
    signal ap_wait_11 : STD_LOGIC;
    signal ap_sub_ext_blocking_11 : STD_LOGIC;
    signal ap_wait_12 : STD_LOGIC;
    signal ap_sub_ext_blocking_12 : STD_LOGIC;
    signal ap_wait_13 : STD_LOGIC;
    signal ap_sub_ext_blocking_13 : STD_LOGIC;
    signal ap_wait_14 : STD_LOGIC;
    signal ap_sub_ext_blocking_14 : STD_LOGIC;
    signal ap_wait_15 : STD_LOGIC;
    signal ap_sub_ext_blocking_15 : STD_LOGIC;
    signal ap_wait_16 : STD_LOGIC;
    signal ap_sub_ext_blocking_16 : STD_LOGIC;
    signal ap_wait_17 : STD_LOGIC;
    signal ap_sub_ext_blocking_17 : STD_LOGIC;
    signal ap_wait_18 : STD_LOGIC;
    signal ap_sub_ext_blocking_18 : STD_LOGIC;
    signal ap_wait_19 : STD_LOGIC;
    signal ap_sub_ext_blocking_19 : STD_LOGIC;
    signal ap_wait_20 : STD_LOGIC;
    signal ap_sub_ext_blocking_20 : STD_LOGIC;
    signal ap_wait_21 : STD_LOGIC;
    signal ap_sub_ext_blocking_21 : STD_LOGIC;
    signal ap_wait_22 : STD_LOGIC;
    signal ap_sub_ext_blocking_22 : STD_LOGIC;
    signal ap_wait_23 : STD_LOGIC;
    signal ap_sub_ext_blocking_23 : STD_LOGIC;
    signal ap_str_blocking_sub_n : STD_LOGIC;
    signal ap_sub_str_blocking_0 : STD_LOGIC;
    signal ap_sub_str_blocking_1 : STD_LOGIC;
    signal ap_sub_str_blocking_2 : STD_LOGIC;
    signal ap_sub_str_blocking_3 : STD_LOGIC;
    signal ap_sub_str_blocking_4 : STD_LOGIC;
    signal ap_sub_str_blocking_5 : STD_LOGIC;
    signal ap_sub_str_blocking_6 : STD_LOGIC;
    signal ap_sub_str_blocking_7 : STD_LOGIC;
    signal ap_sub_str_blocking_8 : STD_LOGIC;
    signal ap_sub_str_blocking_9 : STD_LOGIC;
    signal ap_sub_str_blocking_10 : STD_LOGIC;
    signal ap_sub_str_blocking_11 : STD_LOGIC;
    signal ap_sub_str_blocking_12 : STD_LOGIC;
    signal ap_sub_str_blocking_13 : STD_LOGIC;
    signal ap_sub_str_blocking_14 : STD_LOGIC;
    signal ap_sub_str_blocking_15 : STD_LOGIC;
    signal ap_sub_str_blocking_16 : STD_LOGIC;
    signal ap_sub_str_blocking_17 : STD_LOGIC;
    signal ap_sub_str_blocking_18 : STD_LOGIC;
    signal ap_sub_str_blocking_19 : STD_LOGIC;
    signal ap_sub_str_blocking_20 : STD_LOGIC;
    signal ap_sub_str_blocking_21 : STD_LOGIC;
    signal ap_sub_str_blocking_22 : STD_LOGIC;
    signal ap_sub_str_blocking_23 : STD_LOGIC;
    signal ap_int_blocking_sub_n : STD_LOGIC;
    signal ap_sub_int_blocking_0 : STD_LOGIC;
    signal ap_sub_int_blocking_1 : STD_LOGIC;
    signal ap_sub_int_blocking_2 : STD_LOGIC;
    signal ap_sub_int_blocking_3 : STD_LOGIC;
    signal ap_sub_int_blocking_4 : STD_LOGIC;
    signal ap_sub_int_blocking_5 : STD_LOGIC;
    signal ap_sub_int_blocking_6 : STD_LOGIC;
    signal ap_sub_int_blocking_7 : STD_LOGIC;
    signal ap_sub_int_blocking_8 : STD_LOGIC;
    signal ap_sub_int_blocking_9 : STD_LOGIC;
    signal ap_sub_int_blocking_10 : STD_LOGIC;
    signal ap_sub_int_blocking_11 : STD_LOGIC;
    signal ap_sub_int_blocking_12 : STD_LOGIC;
    signal ap_sub_int_blocking_13 : STD_LOGIC;
    signal ap_sub_int_blocking_14 : STD_LOGIC;
    signal ap_sub_int_blocking_15 : STD_LOGIC;
    signal ap_sub_int_blocking_16 : STD_LOGIC;
    signal ap_sub_int_blocking_17 : STD_LOGIC;
    signal ap_sub_int_blocking_18 : STD_LOGIC;
    signal ap_sub_int_blocking_19 : STD_LOGIC;
    signal ap_sub_int_blocking_20 : STD_LOGIC;
    signal ap_sub_int_blocking_21 : STD_LOGIC;
    signal ap_sub_int_blocking_22 : STD_LOGIC;
    signal ap_sub_int_blocking_23 : STD_LOGIC;
    signal ap_ext_blocking_n : STD_LOGIC;
    signal ap_str_blocking_n : STD_LOGIC;
    signal ap_int_blocking_n : STD_LOGIC;
    signal ap_ext_blocking_n_reg : STD_LOGIC;
    signal ap_str_blocking_n_reg : STD_LOGIC;
    signal ap_int_blocking_n_reg : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component krnl_bp_krnl_bp_Pipeline_l_load_input IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln19 : IN STD_LOGIC_VECTOR (57 downto 0);
        mat_p_bram_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        mat_p_bram_ce0 : OUT STD_LOGIC;
        mat_p_bram_we0 : OUT STD_LOGIC;
        mat_p_bram_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_l_load_input1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gmem1_load : IN STD_LOGIC_VECTOR (255 downto 0);
        vec_q_bram_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        vec_q_bram_ce0 : OUT STD_LOGIC;
        vec_q_bram_we0 : OUT STD_LOGIC;
        vec_q_bram_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_677_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        u_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        u_stream_full_n : IN STD_LOGIC;
        u_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_677_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z_copy_2_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        z_copy_2_stream_full_n : IN STD_LOGIC;
        z_copy_2_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_677_13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z_old_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        z_old_stream_full_n : IN STD_LOGIC;
        z_old_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_replicate_stream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        krnl_bp_u_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        krnl_bp_u_stream_empty_n : IN STD_LOGIC;
        krnl_bp_u_stream_read : OUT STD_LOGIC;
        krnl_bp_u_copy_1_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        krnl_bp_u_copy_1_stream_full_n : IN STD_LOGIC;
        krnl_bp_u_copy_1_stream_write : OUT STD_LOGIC;
        krnl_bp_u_copy_2_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        krnl_bp_u_copy_2_stream_full_n : IN STD_LOGIC;
        krnl_bp_u_copy_2_stream_write : OUT STD_LOGIC;
        krnl_bp_u_copy_3_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        krnl_bp_u_copy_3_stream_full_n : IN STD_LOGIC;
        krnl_bp_u_copy_3_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_980_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z_u_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        z_u_stream_empty_n : IN STD_LOGIC;
        z_u_stream_read : OUT STD_LOGIC;
        z_u_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        z_u_stream_full_n : IN STD_LOGIC;
        z_u_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_l_vec_sub IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z_copy_2_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        z_copy_2_stream_empty_n : IN STD_LOGIC;
        z_copy_2_stream_read : OUT STD_LOGIC;
        u_copy_1_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        u_copy_1_stream_empty_n : IN STD_LOGIC;
        u_copy_1_stream_read : OUT STD_LOGIC;
        z_u_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        z_u_stream_full_n : IN STD_LOGIC;
        z_u_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC;
        grp_fu_626_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_626_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_ce : OUT STD_LOGIC );
    end component;


    component krnl_bp_mac IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mat_p_bram_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        mat_p_bram_ce0 : OUT STD_LOGIC;
        mat_p_bram_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_u_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        z_u_stream_empty_n : IN STD_LOGIC;
        z_u_stream_read : OUT STD_LOGIC;
        mac_res_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mac_res_stream_full_n : IN STD_LOGIC;
        mac_res_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC;
        grp_fu_626_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_626_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_ce : OUT STD_LOGIC;
        grp_fu_631_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_ce : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_1001_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mac_res_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mac_res_stream_empty_n : IN STD_LOGIC;
        mac_res_stream_read : OUT STD_LOGIC;
        mac_res_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mac_res_stream_full_n : IN STD_LOGIC;
        mac_res_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_367_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mac_res_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mac_res_stream_empty_n : IN STD_LOGIC;
        mac_res_stream_read : OUT STD_LOGIC;
        mac_res_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mac_res_stream_full_n : IN STD_LOGIC;
        mac_res_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_380_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        q_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        q_stream_full_n : IN STD_LOGIC;
        q_stream_write : OUT STD_LOGIC;
        vec_q_bram_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        vec_q_bram_ce0 : OUT STD_LOGIC;
        vec_q_bram_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_386_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mac_res_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mac_res_stream_empty_n : IN STD_LOGIC;
        mac_res_stream_read : OUT STD_LOGIC;
        q_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        q_stream_empty_n : IN STD_LOGIC;
        q_stream_read : OUT STD_LOGIC;
        x_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        x_stream_full_n : IN STD_LOGIC;
        x_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC;
        grp_fu_626_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_626_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_ce : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_514_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        x_stream_empty_n : IN STD_LOGIC;
        x_stream_read : OUT STD_LOGIC;
        x_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        x_stream_full_n : IN STD_LOGIC;
        x_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_526_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        x_stream_empty_n : IN STD_LOGIC;
        x_stream_read : OUT STD_LOGIC;
        z_old_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        z_old_stream_empty_n : IN STD_LOGIC;
        z_old_stream_read : OUT STD_LOGIC;
        x_hat_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        x_hat_stream_full_n : IN STD_LOGIC;
        x_hat_stream_write : OUT STD_LOGIC;
        alpha : IN STD_LOGIC_VECTOR (31 downto 0);
        reg_alpha : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC;
        grp_fu_631_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_ce : OUT STD_LOGIC;
        grp_fu_636_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_636_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_636_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_636_p_ce : OUT STD_LOGIC;
        grp_fu_626_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_626_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_ce : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_l_write_bram IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_hat_copy_3_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        x_hat_copy_3_stream_empty_n : IN STD_LOGIC;
        x_hat_copy_3_stream_read : OUT STD_LOGIC;
        x_bram_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        x_bram_ce0 : OUT STD_LOGIC;
        x_bram_we0 : OUT STD_LOGIC;
        x_bram_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_vec_add IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        krnl_bp_x_hat_copy_1_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        krnl_bp_x_hat_copy_1_stream_empty_n : IN STD_LOGIC;
        krnl_bp_x_hat_copy_1_stream_read : OUT STD_LOGIC;
        krnl_bp_u_copy_2_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        krnl_bp_u_copy_2_stream_empty_n : IN STD_LOGIC;
        krnl_bp_u_copy_2_stream_read : OUT STD_LOGIC;
        krnl_bp_x_hat_u_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        krnl_bp_x_hat_u_stream_full_n : IN STD_LOGIC;
        krnl_bp_x_hat_u_stream_write : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        krnl_bp_x_hat_copy_1_stream_blk_n : OUT STD_LOGIC;
        krnl_bp_u_copy_2_stream_blk_n : OUT STD_LOGIC;
        krnl_bp_x_hat_u_stream_blk_n : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_l_shrinkage IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_hat_u_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        x_hat_u_stream_empty_n : IN STD_LOGIC;
        x_hat_u_stream_read : OUT STD_LOGIC;
        z_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        z_stream_full_n : IN STD_LOGIC;
        z_stream_write : OUT STD_LOGIC;
        rho : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC;
        grp_fu_626_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_626_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_ce : OUT STD_LOGIC;
        grp_fu_652_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_652_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_652_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_652_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_652_p_ce : OUT STD_LOGIC;
        grp_fu_656_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_656_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_656_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_656_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_656_p_ce : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_l_vec_sub4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_hat_copy_2_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        x_hat_copy_2_stream_empty_n : IN STD_LOGIC;
        x_hat_copy_2_stream_read : OUT STD_LOGIC;
        z_copy_1_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        z_copy_1_stream_empty_n : IN STD_LOGIC;
        z_copy_1_stream_read : OUT STD_LOGIC;
        x_hat_z_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        x_hat_z_stream_full_n : IN STD_LOGIC;
        x_hat_z_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC;
        grp_fu_626_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_626_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_ce : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_1045_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub1 : IN STD_LOGIC_VECTOR (31 downto 0);
        r_norm_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        r_norm_1_out_ap_vld : OUT STD_LOGIC;
        s_norm_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        s_norm_1_out_ap_vld : OUT STD_LOGIC;
        norm_x_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        norm_x_1_out_ap_vld : OUT STD_LOGIC;
        norm_z_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        norm_z_1_out_ap_vld : OUT STD_LOGIC;
        norm_u_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        norm_u_out_ap_vld : OUT STD_LOGIC;
        z_old_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        z_old_stream_empty_n : IN STD_LOGIC;
        z_old_stream_read : OUT STD_LOGIC;
        z_old_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        z_old_stream_full_n : IN STD_LOGIC;
        z_old_stream_write : OUT STD_LOGIC;
        u_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        u_stream_empty_n : IN STD_LOGIC;
        u_stream_read : OUT STD_LOGIC;
        u_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        u_stream_full_n : IN STD_LOGIC;
        u_stream_write : OUT STD_LOGIC;
        x_bram_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        x_bram_ce0 : OUT STD_LOGIC;
        x_bram_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_copy_2_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        z_copy_2_stream_empty_n : IN STD_LOGIC;
        z_copy_2_stream_read : OUT STD_LOGIC;
        z_copy_2_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        z_copy_2_stream_full_n : IN STD_LOGIC;
        z_copy_2_stream_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC;
        grp_fu_626_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_626_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_626_p_ce : OUT STD_LOGIC;
        grp_fu_631_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_ce : OUT STD_LOGIC;
        grp_fu_640_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_640_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_640_p_ce : OUT STD_LOGIC;
        grp_fu_646_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_646_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_646_p_ce : OUT STD_LOGIC;
        grp_fu_670_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_670_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_670_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_670_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_670_p_ce : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_843_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        u_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        u_stream_empty_n : IN STD_LOGIC;
        u_stream_read : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_843_15 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z_old_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        z_old_stream_empty_n : IN STD_LOGIC;
        z_old_stream_read : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_843_16 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z_copy_2_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        z_copy_2_stream_empty_n : IN STD_LOGIC;
        z_copy_2_stream_read : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_krnl_bp_Pipeline_l_write_mem IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        shiftreg_out : OUT STD_LOGIC_VECTOR (255 downto 0);
        shiftreg_out_ap_vld : OUT STD_LOGIC;
        x_bram_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        x_bram_ce0 : OUT STD_LOGIC;
        x_bram_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component krnl_bp_faddfsub_32ns_32ns_32_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component krnl_bp_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component krnl_bp_fptrunc_64ns_32_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component krnl_bp_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component krnl_bp_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component krnl_bp_fsqrt_32ns_32ns_32_12_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component krnl_bp_dadd_64ns_64ns_64_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component krnl_bp_mat_p_bram_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component krnl_bp_vec_q_bram_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component krnl_bp_fifo_w32_d256_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component krnl_bp_fifo_w32_d36_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component krnl_bp_fifo_w32_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component krnl_bp_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        mat_p : OUT STD_LOGIC_VECTOR (63 downto 0);
        vec_q : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        rho : OUT STD_LOGIC_VECTOR (31 downto 0);
        alpha : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        event_start : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component krnl_bp_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component krnl_bp_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (255 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (31 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component krnl_bp_gmem2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (255 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (31 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    mat_p_bram_U : component krnl_bp_mat_p_bram_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mat_p_bram_address0,
        ce0 => mat_p_bram_ce0,
        we0 => mat_p_bram_we0,
        d0 => grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_d0,
        q0 => mat_p_bram_q0);

    vec_q_bram_U : component krnl_bp_vec_q_bram_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => vec_q_bram_address0,
        ce0 => vec_q_bram_ce0,
        we0 => vec_q_bram_we0,
        d0 => grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_d0,
        q0 => vec_q_bram_q0);

    x_bram_U : component krnl_bp_vec_q_bram_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => x_bram_address0,
        ce0 => x_bram_ce0,
        we0 => x_bram_we0,
        d0 => grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_d0,
        q0 => x_bram_q0);

    grp_krnl_bp_Pipeline_l_load_input_fu_389 : component krnl_bp_krnl_bp_Pipeline_l_load_input
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_start,
        ap_done => grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_ready,
        m_axi_gmem0_AWVALID => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        sext_ln19 => trunc_ln_reg_1143,
        mat_p_bram_address0 => grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_address0,
        mat_p_bram_ce0 => grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_ce0,
        mat_p_bram_we0 => grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_we0,
        mat_p_bram_d0 => grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_d0,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_l_load_input1_fu_398 : component krnl_bp_krnl_bp_Pipeline_l_load_input1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_start,
        ap_done => grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_ready,
        gmem1_load => gmem1_addr_read_reg_1165,
        vec_q_bram_address0 => grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_address0,
        vec_q_bram_ce0 => grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_ce0,
        vec_q_bram_we0 => grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_we0,
        vec_q_bram_d0 => grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_d0,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_677_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_ready,
        u_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_u_stream_din,
        u_stream_full_n => u_stream_full_n,
        u_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_u_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_677_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_ready,
        z_copy_2_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_z_copy_2_stream_din,
        z_copy_2_stream_full_n => z_copy_2_stream_full_n,
        z_copy_2_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_z_copy_2_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_677_13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_ready,
        z_old_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_z_old_stream_din,
        z_old_stream_full_n => z_old_stream_full_n,
        z_old_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_z_old_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_int_blocking_n);

    grp_replicate_stream_fu_423 : component krnl_bp_replicate_stream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_replicate_stream_fu_423_ap_start,
        ap_done => grp_replicate_stream_fu_423_ap_done,
        ap_idle => grp_replicate_stream_fu_423_ap_idle,
        ap_ready => grp_replicate_stream_fu_423_ap_ready,
        krnl_bp_u_stream_dout => grp_replicate_stream_fu_423_krnl_bp_u_stream_dout,
        krnl_bp_u_stream_empty_n => grp_replicate_stream_fu_423_krnl_bp_u_stream_empty_n,
        krnl_bp_u_stream_read => grp_replicate_stream_fu_423_krnl_bp_u_stream_read,
        krnl_bp_u_copy_1_stream_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_din,
        krnl_bp_u_copy_1_stream_full_n => grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_full_n,
        krnl_bp_u_copy_1_stream_write => grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_write,
        krnl_bp_u_copy_2_stream_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_din,
        krnl_bp_u_copy_2_stream_full_n => grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_full_n,
        krnl_bp_u_copy_2_stream_write => grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_write,
        krnl_bp_u_copy_3_stream_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_din,
        krnl_bp_u_copy_3_stream_full_n => grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_full_n,
        krnl_bp_u_copy_3_stream_write => grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_write,
        ap_ext_blocking_n => grp_replicate_stream_fu_423_ap_ext_blocking_n,
        ap_str_blocking_n => grp_replicate_stream_fu_423_ap_str_blocking_n,
        ap_int_blocking_n => grp_replicate_stream_fu_423_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_980_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_ready,
        z_u_stream_dout => z_u_stream_dout,
        z_u_stream_empty_n => z_u_stream_empty_n,
        z_u_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_read,
        z_u_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_din,
        z_u_stream_full_n => z_u_stream_full_n,
        z_u_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_l_vec_sub_fu_449 : component krnl_bp_krnl_bp_Pipeline_l_vec_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_start,
        ap_done => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_ready,
        z_copy_2_stream_dout => z_copy_2_stream_dout,
        z_copy_2_stream_empty_n => z_copy_2_stream_empty_n,
        z_copy_2_stream_read => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_copy_2_stream_read,
        u_copy_1_stream_dout => u_copy_1_stream_dout,
        u_copy_1_stream_empty_n => u_copy_1_stream_empty_n,
        u_copy_1_stream_read => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_u_copy_1_stream_read,
        z_u_stream_din => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_u_stream_din,
        z_u_stream_full_n => z_u_stream_full_n,
        z_u_stream_write => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_u_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_int_blocking_n,
        grp_fu_626_p_din0 => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_din0,
        grp_fu_626_p_din1 => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_din1,
        grp_fu_626_p_opcode => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_opcode,
        grp_fu_626_p_dout0 => grp_fu_626_p2,
        grp_fu_626_p_ce => grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_ce);

    grp_mac_fu_459 : component krnl_bp_mac
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mac_fu_459_ap_start,
        ap_done => grp_mac_fu_459_ap_done,
        ap_idle => grp_mac_fu_459_ap_idle,
        ap_ready => grp_mac_fu_459_ap_ready,
        mat_p_bram_address0 => grp_mac_fu_459_mat_p_bram_address0,
        mat_p_bram_ce0 => grp_mac_fu_459_mat_p_bram_ce0,
        mat_p_bram_q0 => mat_p_bram_q0,
        z_u_stream_dout => z_u_stream_dout,
        z_u_stream_empty_n => z_u_stream_empty_n,
        z_u_stream_read => grp_mac_fu_459_z_u_stream_read,
        mac_res_stream_din => grp_mac_fu_459_mac_res_stream_din,
        mac_res_stream_full_n => mac_res_stream_full_n,
        mac_res_stream_write => grp_mac_fu_459_mac_res_stream_write,
        ap_ext_blocking_n => grp_mac_fu_459_ap_ext_blocking_n,
        ap_str_blocking_n => grp_mac_fu_459_ap_str_blocking_n,
        ap_int_blocking_n => grp_mac_fu_459_ap_int_blocking_n,
        grp_fu_626_p_din0 => grp_mac_fu_459_grp_fu_626_p_din0,
        grp_fu_626_p_din1 => grp_mac_fu_459_grp_fu_626_p_din1,
        grp_fu_626_p_opcode => grp_mac_fu_459_grp_fu_626_p_opcode,
        grp_fu_626_p_dout0 => grp_fu_626_p2,
        grp_fu_626_p_ce => grp_mac_fu_459_grp_fu_626_p_ce,
        grp_fu_631_p_din0 => grp_mac_fu_459_grp_fu_631_p_din0,
        grp_fu_631_p_din1 => grp_mac_fu_459_grp_fu_631_p_din1,
        grp_fu_631_p_dout0 => grp_fu_631_p2,
        grp_fu_631_p_ce => grp_mac_fu_459_grp_fu_631_p_ce);

    grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_1001_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_ready,
        mac_res_stream_dout => mac_res_stream_dout,
        mac_res_stream_empty_n => mac_res_stream_empty_n,
        mac_res_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_read,
        mac_res_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_din,
        mac_res_stream_full_n => mac_res_stream_full_n,
        mac_res_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_367_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_ready,
        mac_res_stream_dout => mac_res_stream_dout,
        mac_res_stream_empty_n => mac_res_stream_empty_n,
        mac_res_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_read,
        mac_res_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_din,
        mac_res_stream_full_n => mac_res_stream_full_n,
        mac_res_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_380_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_ready,
        q_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_q_stream_din,
        q_stream_full_n => q_stream_full_n,
        q_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_q_stream_write,
        vec_q_bram_address0 => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_vec_q_bram_address0,
        vec_q_bram_ce0 => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_vec_q_bram_ce0,
        vec_q_bram_q0 => vec_q_bram_q0,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_386_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_ready,
        mac_res_stream_dout => mac_res_stream_dout,
        mac_res_stream_empty_n => mac_res_stream_empty_n,
        mac_res_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_mac_res_stream_read,
        q_stream_dout => q_stream_dout,
        q_stream_empty_n => q_stream_empty_n,
        q_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_q_stream_read,
        x_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_x_stream_din,
        x_stream_full_n => x_stream_full_n,
        x_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_x_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_int_blocking_n,
        grp_fu_626_p_din0 => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_din0,
        grp_fu_626_p_din1 => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_din1,
        grp_fu_626_p_opcode => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_opcode,
        grp_fu_626_p_dout0 => grp_fu_626_p2,
        grp_fu_626_p_ce => grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_ce);

    grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_514_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_ready,
        x_stream_dout => x_stream_dout,
        x_stream_empty_n => x_stream_empty_n,
        x_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_read,
        x_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_din,
        x_stream_full_n => x_stream_full_n,
        x_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_526_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_ready,
        x_stream_dout => x_stream_dout,
        x_stream_empty_n => x_stream_empty_n,
        x_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_stream_read,
        z_old_stream_dout => z_old_stream_dout,
        z_old_stream_empty_n => z_old_stream_empty_n,
        z_old_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_z_old_stream_read,
        x_hat_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_hat_stream_din,
        x_hat_stream_full_n => x_hat_stream_full_n,
        x_hat_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_hat_stream_write,
        alpha => alpha,
        reg_alpha => reg_alpha_reg_1188,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_int_blocking_n,
        grp_fu_631_p_din0 => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_din0,
        grp_fu_631_p_din1 => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_din1,
        grp_fu_631_p_dout0 => grp_fu_631_p2,
        grp_fu_631_p_ce => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_ce,
        grp_fu_636_p_din0 => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_din0,
        grp_fu_636_p_din1 => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_din1,
        grp_fu_636_p_dout0 => grp_fu_636_p2,
        grp_fu_636_p_ce => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_ce,
        grp_fu_626_p_din0 => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_din0,
        grp_fu_626_p_din1 => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_din1,
        grp_fu_626_p_opcode => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_opcode,
        grp_fu_626_p_dout0 => grp_fu_626_p2,
        grp_fu_626_p_ce => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_ce);

    grp_krnl_bp_Pipeline_l_write_bram_fu_519 : component krnl_bp_krnl_bp_Pipeline_l_write_bram
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_start,
        ap_done => grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_ready,
        x_hat_copy_3_stream_dout => x_hat_copy_3_stream_dout,
        x_hat_copy_3_stream_empty_n => x_hat_copy_3_stream_empty_n,
        x_hat_copy_3_stream_read => grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_hat_copy_3_stream_read,
        x_bram_address0 => grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_address0,
        x_bram_ce0 => grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_ce0,
        x_bram_we0 => grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_we0,
        x_bram_d0 => grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_d0,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_int_blocking_n);

    grp_vec_add_fu_527 : component krnl_bp_vec_add
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_vec_add_fu_527_ap_start,
        ap_done => grp_vec_add_fu_527_ap_done,
        ap_idle => grp_vec_add_fu_527_ap_idle,
        ap_ready => grp_vec_add_fu_527_ap_ready,
        krnl_bp_x_hat_copy_1_stream_dout => grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_dout,
        krnl_bp_x_hat_copy_1_stream_empty_n => grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_empty_n,
        krnl_bp_x_hat_copy_1_stream_read => grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_read,
        krnl_bp_u_copy_2_stream_dout => grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_dout,
        krnl_bp_u_copy_2_stream_empty_n => grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_empty_n,
        krnl_bp_u_copy_2_stream_read => grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_read,
        krnl_bp_x_hat_u_stream_din => grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_din,
        krnl_bp_x_hat_u_stream_full_n => grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_full_n,
        krnl_bp_x_hat_u_stream_write => grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_write,
        ap_ce => grp_vec_add_fu_527_ap_ce,
        krnl_bp_x_hat_copy_1_stream_blk_n => grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n,
        krnl_bp_u_copy_2_stream_blk_n => grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n,
        krnl_bp_x_hat_u_stream_blk_n => grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n,
        ap_ext_blocking_n => grp_vec_add_fu_527_ap_ext_blocking_n,
        ap_str_blocking_n => grp_vec_add_fu_527_ap_str_blocking_n,
        ap_int_blocking_n => grp_vec_add_fu_527_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_l_shrinkage_fu_540 : component krnl_bp_krnl_bp_Pipeline_l_shrinkage
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_start,
        ap_done => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_ready,
        x_hat_u_stream_dout => x_hat_u_stream_dout,
        x_hat_u_stream_empty_n => x_hat_u_stream_empty_n,
        x_hat_u_stream_read => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_x_hat_u_stream_read,
        z_stream_din => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_z_stream_din,
        z_stream_full_n => z_stream_full_n,
        z_stream_write => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_z_stream_write,
        rho => rho,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_int_blocking_n,
        grp_fu_626_p_din0 => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_din0,
        grp_fu_626_p_din1 => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_din1,
        grp_fu_626_p_opcode => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_opcode,
        grp_fu_626_p_dout0 => grp_fu_626_p2,
        grp_fu_626_p_ce => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_ce,
        grp_fu_652_p_din0 => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_din0,
        grp_fu_652_p_din1 => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_din1,
        grp_fu_652_p_opcode => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_opcode,
        grp_fu_652_p_dout0 => grp_fu_652_p2,
        grp_fu_652_p_ce => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_ce,
        grp_fu_656_p_din0 => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_din0,
        grp_fu_656_p_din1 => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_din1,
        grp_fu_656_p_opcode => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_opcode,
        grp_fu_656_p_dout0 => grp_fu_656_p2,
        grp_fu_656_p_ce => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_ce);

    grp_krnl_bp_Pipeline_l_vec_sub4_fu_549 : component krnl_bp_krnl_bp_Pipeline_l_vec_sub4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_start,
        ap_done => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_ready,
        x_hat_copy_2_stream_dout => x_hat_copy_2_stream_dout,
        x_hat_copy_2_stream_empty_n => x_hat_copy_2_stream_empty_n,
        x_hat_copy_2_stream_read => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_copy_2_stream_read,
        z_copy_1_stream_dout => z_copy_1_stream_dout,
        z_copy_1_stream_empty_n => z_copy_1_stream_empty_n,
        z_copy_1_stream_read => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_z_copy_1_stream_read,
        x_hat_z_stream_din => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_z_stream_din,
        x_hat_z_stream_full_n => x_hat_z_stream_full_n,
        x_hat_z_stream_write => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_z_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_int_blocking_n,
        grp_fu_626_p_din0 => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_din0,
        grp_fu_626_p_din1 => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_din1,
        grp_fu_626_p_opcode => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_opcode,
        grp_fu_626_p_dout0 => grp_fu_626_p2,
        grp_fu_626_p_ce => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_ce);

    grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_1045_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_ready,
        sub1 => sub1_reg_1183,
        r_norm_1_out => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_r_norm_1_out,
        r_norm_1_out_ap_vld => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_r_norm_1_out_ap_vld,
        s_norm_1_out => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_s_norm_1_out,
        s_norm_1_out_ap_vld => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_s_norm_1_out_ap_vld,
        norm_x_1_out => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_x_1_out,
        norm_x_1_out_ap_vld => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_x_1_out_ap_vld,
        norm_z_1_out => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_z_1_out,
        norm_z_1_out_ap_vld => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_z_1_out_ap_vld,
        norm_u_out => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_u_out,
        norm_u_out_ap_vld => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_u_out_ap_vld,
        z_old_stream_dout => z_old_stream_dout,
        z_old_stream_empty_n => z_old_stream_empty_n,
        z_old_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_read,
        z_old_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_din,
        z_old_stream_full_n => z_old_stream_full_n,
        z_old_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_write,
        u_stream_dout => u_stream_dout,
        u_stream_empty_n => u_stream_empty_n,
        u_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_read,
        u_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_din,
        u_stream_full_n => u_stream_full_n,
        u_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_write,
        x_bram_address0 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_x_bram_address0,
        x_bram_ce0 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_x_bram_ce0,
        x_bram_q0 => x_bram_q0,
        z_copy_2_stream_dout => z_copy_2_stream_dout,
        z_copy_2_stream_empty_n => z_copy_2_stream_empty_n,
        z_copy_2_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_read,
        z_copy_2_stream_din => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_din,
        z_copy_2_stream_full_n => z_copy_2_stream_full_n,
        z_copy_2_stream_write => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_write,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_int_blocking_n,
        grp_fu_626_p_din0 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_din0,
        grp_fu_626_p_din1 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_din1,
        grp_fu_626_p_opcode => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_opcode,
        grp_fu_626_p_dout0 => grp_fu_626_p2,
        grp_fu_626_p_ce => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_ce,
        grp_fu_631_p_din0 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_din0,
        grp_fu_631_p_din1 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_din1,
        grp_fu_631_p_dout0 => grp_fu_631_p2,
        grp_fu_631_p_ce => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_ce,
        grp_fu_640_p_din0 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_640_p_din0,
        grp_fu_640_p_dout0 => grp_fu_640_p1,
        grp_fu_640_p_ce => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_640_p_ce,
        grp_fu_646_p_din0 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_646_p_din0,
        grp_fu_646_p_dout0 => grp_fu_646_p1,
        grp_fu_646_p_ce => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_646_p_ce,
        grp_fu_670_p_din0 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_din0,
        grp_fu_670_p_din1 => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_din1,
        grp_fu_670_p_opcode => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_opcode,
        grp_fu_670_p_dout0 => grp_fu_670_p2,
        grp_fu_670_p_ce => grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_ce);

    grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_843_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_ready,
        u_stream_dout => u_stream_dout,
        u_stream_empty_n => u_stream_empty_n,
        u_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_u_stream_read,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_843_15
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_ready,
        z_old_stream_dout => z_old_stream_dout,
        z_old_stream_empty_n => z_old_stream_empty_n,
        z_old_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_z_old_stream_read,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613 : component krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_843_16
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_start,
        ap_done => grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_ready,
        z_copy_2_stream_dout => z_copy_2_stream_dout,
        z_copy_2_stream_empty_n => z_copy_2_stream_empty_n,
        z_copy_2_stream_read => grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_z_copy_2_stream_read,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_int_blocking_n);

    grp_krnl_bp_Pipeline_l_write_mem_fu_619 : component krnl_bp_krnl_bp_Pipeline_l_write_mem
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_start,
        ap_done => grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_done,
        ap_idle => grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_idle,
        ap_ready => grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_ready,
        shiftreg_out => grp_krnl_bp_Pipeline_l_write_mem_fu_619_shiftreg_out,
        shiftreg_out_ap_vld => grp_krnl_bp_Pipeline_l_write_mem_fu_619_shiftreg_out_ap_vld,
        x_bram_address0 => grp_krnl_bp_Pipeline_l_write_mem_fu_619_x_bram_address0,
        x_bram_ce0 => grp_krnl_bp_Pipeline_l_write_mem_fu_619_x_bram_ce0,
        x_bram_q0 => x_bram_q0,
        ap_ext_blocking_n => grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_ext_blocking_n,
        ap_str_blocking_n => grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_str_blocking_n,
        ap_int_blocking_n => grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_int_blocking_n);

    control_s_axi_U : component krnl_bp_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        mat_p => mat_p,
        vec_q => vec_q,
        out_r => out_r,
        rho => rho,
        alpha => alpha,
        ap_start => ap_start,
        interrupt => interrupt,
        event_start => event_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component krnl_bp_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 69,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 512,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => gmem0_ARADDR,
        I_ARLEN => gmem0_ARLEN,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RFIFONUM => gmem0_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem0_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => gmem0_BVALID,
        I_BREADY => ap_const_logic_0);

    gmem1_m_axi_U : component krnl_bp_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 69,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 256,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem1_ARVALID,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => sext_ln19_1_fu_733_p1,
        I_ARLEN => ap_const_lv32_1,
        I_RVALID => gmem1_RVALID,
        I_RREADY => gmem1_RREADY,
        I_RDATA => gmem1_RDATA,
        I_RFIFONUM => gmem1_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem1_WREADY,
        I_WDATA => ap_const_lv256_lc_1,
        I_WSTRB => ap_const_lv32_0,
        I_BVALID => gmem1_BVALID,
        I_BREADY => ap_const_logic_0);

    gmem2_m_axi_U : component krnl_bp_gmem2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 69,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 256,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem2_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARLEN => ap_const_lv32_0,
        I_RVALID => gmem2_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem2_RDATA,
        I_RFIFONUM => gmem2_RFIFONUM,
        I_AWVALID => gmem2_AWVALID,
        I_AWREADY => gmem2_AWREADY,
        I_AWADDR => sext_ln1127_fu_1081_p1,
        I_AWLEN => ap_const_lv32_1,
        I_WVALID => gmem2_WVALID,
        I_WREADY => gmem2_WREADY,
        I_WDATA => grp_krnl_bp_Pipeline_l_write_mem_fu_619_shiftreg_out,
        I_WSTRB => ap_const_lv32_FFFFFFFF,
        I_BVALID => gmem2_BVALID,
        I_BREADY => gmem2_BREADY);

    faddfsub_32ns_32ns_32_7_full_dsp_1_U134 : component krnl_bp_faddfsub_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_626_p0,
        din1 => grp_fu_626_p1,
        opcode => grp_fu_626_opcode,
        ce => grp_fu_626_ce,
        dout => grp_fu_626_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U135 : component krnl_bp_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_631_p0,
        din1 => grp_fu_631_p1,
        ce => grp_fu_631_ce,
        dout => grp_fu_631_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U136 : component krnl_bp_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_636_p0,
        din1 => grp_fu_636_p1,
        ce => grp_fu_636_ce,
        dout => grp_fu_636_p2);

    fptrunc_64ns_32_2_no_dsp_1_U137 : component krnl_bp_fptrunc_64ns_32_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_640_p0,
        ce => grp_fu_640_ce,
        dout => grp_fu_640_p1);

    fptrunc_64ns_32_2_no_dsp_1_U138 : component krnl_bp_fptrunc_64ns_32_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => add_i1_reg_1240,
        ce => ap_const_logic_1,
        dout => grp_fu_643_p1);

    fpext_32ns_64_2_no_dsp_1_U139 : component krnl_bp_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_646_p0,
        ce => grp_fu_646_ce,
        dout => grp_fu_646_p1);

    fpext_32ns_64_2_no_dsp_1_U140 : component krnl_bp_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mul2_i_reg_1214,
        ce => ap_const_logic_1,
        dout => grp_fu_649_p1);

    fcmp_32ns_32ns_1_2_no_dsp_1_U141 : component krnl_bp_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_652_p0,
        din1 => grp_fu_652_p1,
        ce => grp_fu_652_ce,
        opcode => grp_fu_652_opcode,
        dout => grp_fu_652_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U142 : component krnl_bp_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_656_p0,
        din1 => grp_fu_656_p1,
        ce => grp_fu_656_ce,
        opcode => grp_fu_656_opcode,
        dout => grp_fu_656_p2);

    fsqrt_32ns_32ns_32_12_no_dsp_1_U143 : component krnl_bp_fsqrt_32ns_32ns_32_12_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_const_lv32_0,
        din1 => grp_fu_660_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_660_p2);

    fsqrt_32ns_32ns_32_12_no_dsp_1_U144 : component krnl_bp_fsqrt_32ns_32ns_32_12_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_const_lv32_0,
        din1 => grp_fu_665_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_665_p2);

    dadd_64ns_64ns_64_8_full_dsp_1_U145 : component krnl_bp_dadd_64ns_64ns_64_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_670_p0,
        din1 => grp_fu_670_p1,
        ce => grp_fu_670_ce,
        dout => grp_fu_670_p2);

    dadd_64ns_64ns_64_8_full_dsp_1_U146 : component krnl_bp_dadd_64ns_64ns_64_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => conv3_i_reg_1230,
        din1 => ap_const_lv64_3F3289502B575FFC,
        ce => ap_const_logic_1,
        dout => grp_fu_675_p2);

    mac_res_stream_fifo_U : component krnl_bp_fifo_w32_d256_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => mac_res_stream_din,
        if_full_n => mac_res_stream_full_n,
        if_write => mac_res_stream_write,
        if_dout => mac_res_stream_dout,
        if_empty_n => mac_res_stream_empty_n,
        if_read => mac_res_stream_read);

    q_stream_fifo_U : component krnl_bp_fifo_w32_d36_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_q_stream_din,
        if_full_n => q_stream_full_n,
        if_write => q_stream_write,
        if_dout => q_stream_dout,
        if_empty_n => q_stream_empty_n,
        if_read => q_stream_read);

    u_copy_1_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_din,
        if_full_n => u_copy_1_stream_full_n,
        if_write => u_copy_1_stream_write,
        if_dout => u_copy_1_stream_dout,
        if_empty_n => u_copy_1_stream_empty_n,
        if_read => u_copy_1_stream_read);

    u_copy_2_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_din,
        if_full_n => u_copy_2_stream_full_n,
        if_write => u_copy_2_stream_write,
        if_dout => u_copy_2_stream_dout,
        if_empty_n => u_copy_2_stream_empty_n,
        if_read => u_copy_2_stream_read);

    u_copy_3_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_din,
        if_full_n => u_copy_3_stream_full_n,
        if_write => u_copy_3_stream_write,
        if_dout => u_copy_3_stream_dout,
        if_empty_n => u_copy_3_stream_empty_n,
        if_read => u_copy_3_stream_read);

    u_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => u_stream_din,
        if_full_n => u_stream_full_n,
        if_write => u_stream_write,
        if_dout => u_stream_dout,
        if_empty_n => u_stream_empty_n,
        if_read => u_stream_read);

    x_hat_copy_1_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_din,
        if_full_n => x_hat_copy_1_stream_full_n,
        if_write => x_hat_copy_1_stream_write,
        if_dout => x_hat_copy_1_stream_dout,
        if_empty_n => x_hat_copy_1_stream_empty_n,
        if_read => x_hat_copy_1_stream_read);

    x_hat_copy_2_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_din,
        if_full_n => x_hat_copy_2_stream_full_n,
        if_write => x_hat_copy_2_stream_write,
        if_dout => x_hat_copy_2_stream_dout,
        if_empty_n => x_hat_copy_2_stream_empty_n,
        if_read => x_hat_copy_2_stream_read);

    x_hat_copy_3_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_din,
        if_full_n => x_hat_copy_3_stream_full_n,
        if_write => x_hat_copy_3_stream_write,
        if_dout => x_hat_copy_3_stream_dout,
        if_empty_n => x_hat_copy_3_stream_empty_n,
        if_read => x_hat_copy_3_stream_read);

    x_hat_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_hat_stream_din,
        if_full_n => x_hat_stream_full_n,
        if_write => x_hat_stream_write,
        if_dout => x_hat_stream_dout,
        if_empty_n => x_hat_stream_empty_n,
        if_read => x_hat_stream_read);

    x_hat_u_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_din,
        if_full_n => x_hat_u_stream_full_n,
        if_write => x_hat_u_stream_write,
        if_dout => x_hat_u_stream_dout,
        if_empty_n => x_hat_u_stream_empty_n,
        if_read => x_hat_u_stream_read);

    x_hat_z_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_z_stream_din,
        if_full_n => x_hat_z_stream_full_n,
        if_write => x_hat_z_stream_write,
        if_dout => x_hat_z_stream_dout,
        if_empty_n => x_hat_z_stream_empty_n,
        if_read => x_hat_z_stream_read);

    x_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => x_stream_din,
        if_full_n => x_stream_full_n,
        if_write => x_stream_write,
        if_dout => x_stream_dout,
        if_empty_n => x_stream_empty_n,
        if_read => x_stream_read);

    z_copy_1_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_din,
        if_full_n => z_copy_1_stream_full_n,
        if_write => z_copy_1_stream_write,
        if_dout => z_copy_1_stream_dout,
        if_empty_n => z_copy_1_stream_empty_n,
        if_read => z_copy_1_stream_read);

    z_copy_2_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => z_copy_2_stream_din,
        if_full_n => z_copy_2_stream_full_n,
        if_write => z_copy_2_stream_write,
        if_dout => z_copy_2_stream_dout,
        if_empty_n => z_copy_2_stream_empty_n,
        if_read => z_copy_2_stream_read);

    z_old_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => z_old_stream_din,
        if_full_n => z_old_stream_full_n,
        if_write => z_old_stream_write,
        if_dout => z_old_stream_dout,
        if_empty_n => z_old_stream_empty_n,
        if_read => z_old_stream_read);

    z_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_krnl_bp_Pipeline_l_shrinkage_fu_540_z_stream_din,
        if_full_n => z_stream_full_n,
        if_write => z_stream_write,
        if_dout => z_stream_dout,
        if_empty_n => z_stream_empty_n,
        if_read => z_stream_read);

    z_u_stream_fifo_U : component krnl_bp_fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => z_u_stream_din,
        if_full_n => z_u_stream_full_n,
        if_write => z_u_stream_write,
        if_dout => z_u_stream_dout,
        if_empty_n => z_u_stream_empty_n,
        if_read => z_u_stream_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state263) and (gmem2_BVALID = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state190)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state193)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_start_reg <= ap_const_logic_0;
            else
                if (((or_cond41_fu_1061_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state187))) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (ap_const_logic_1 = ap_NS_fsm_state73))) then 
                    grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
                    grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
                    grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state134)) then 
                    grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                    grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state112)) then 
                    grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state193)) then 
                    grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_ready = ap_const_logic_1)) then 
                    grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mac_fu_459_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mac_fu_459_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
                    grp_mac_fu_459_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mac_fu_459_ap_ready = ap_const_logic_1)) then 
                    grp_mac_fu_459_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_replicate_stream_fu_423_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_replicate_stream_fu_423_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
                    grp_replicate_stream_fu_423_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_replicate_stream_fu_423_ap_ready = ap_const_logic_1)) then 
                    grp_replicate_stream_fu_423_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_vec_add_fu_527_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_vec_add_fu_527_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state136) and (ap_const_logic_1 = ap_CS_fsm_state135)) or ((ap_const_logic_1 = ap_NS_fsm_state114) and (ap_const_logic_1 = ap_CS_fsm_state113)))) then 
                    grp_vec_add_fu_527_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_vec_add_fu_527_ap_ready = ap_const_logic_1)) then 
                    grp_vec_add_fu_527_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_ext_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ext_blocking_n_reg <= ap_ext_blocking_n;
        end if;
    end process;

    ap_int_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_int_blocking_n_reg <= ap_int_blocking_n;
        end if;
    end process;

    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    ap_str_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_str_blocking_n_reg <= ap_str_blocking_n;
        end if;
    end process;

    i_8_fu_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_8_fu_296 <= ap_const_lv32_0;
            elsif (((or_cond41_fu_1061_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state187))) then 
                i_8_fu_296 <= i_13_fu_987_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state183)) then
                add_i1_reg_1240 <= grp_fu_675_p2;
                add_i_reg_1235 <= grp_fu_670_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state175)) then
                conv2_i_reg_1225 <= grp_fu_646_p1;
                conv3_i_reg_1230 <= grp_fu_649_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state185)) then
                eps_dual_reg_1251 <= grp_fu_643_p1;
                eps_pri_reg_1245 <= grp_fu_640_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                gmem1_addr_read_reg_1165 <= gmem1_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state186)) then
                icmp_ln1099_1_reg_1262 <= icmp_ln1099_1_fu_907_p2;
                icmp_ln1099_2_reg_1267 <= icmp_ln1099_2_fu_913_p2;
                icmp_ln1099_3_reg_1272 <= icmp_ln1099_3_fu_919_p2;
                icmp_ln1099_4_reg_1277 <= icmp_ln1099_4_fu_960_p2;
                icmp_ln1099_5_reg_1282 <= icmp_ln1099_5_fu_966_p2;
                icmp_ln1099_6_reg_1287 <= icmp_ln1099_6_fu_972_p2;
                icmp_ln1099_7_reg_1292 <= icmp_ln1099_7_fu_978_p2;
                icmp_ln1099_reg_1257 <= icmp_ln1099_fu_901_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state173)) then
                mul2_i_reg_1214 <= grp_fu_636_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state167)) then
                norm_x_reg_1202 <= grp_fu_660_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                out_r_read_reg_1102 <= out_r;
                trunc_ln19_1_reg_1149 <= vec_q(63 downto 5);
                trunc_ln_reg_1143 <= mat_p(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state185) or (ap_const_logic_1 = ap_CS_fsm_state165))) then
                reg_680 <= grp_fu_660_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state185))) then
                reg_686 <= grp_fu_665_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state169))) then
                reg_692 <= grp_fu_631_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then
                reg_alpha_reg_1188 <= grp_fu_626_p2;
                sub1_reg_1183 <= sub1_fu_752_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state169)) then
                select_ln868_reg_1209 <= select_ln868_fu_851_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond41_fu_1061_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state187))) then
                trunc_ln1_reg_1300 <= out_r_read_reg_1102(63 downto 5);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state72, ap_CS_fsm_state194, ap_CS_fsm_state195, ap_CS_fsm_state263, ap_CS_fsm_state74, ap_CS_fsm_state187, or_cond41_fu_1061_p2, grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_done, grp_replicate_stream_fu_423_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_done, grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_done, grp_mac_fu_459_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_done, grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_done, grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n, ap_CS_fsm_state114, ap_CS_fsm_state115, ap_CS_fsm_state116, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state119, ap_CS_fsm_state120, ap_CS_fsm_state121, ap_CS_fsm_state122, ap_CS_fsm_state123, ap_CS_fsm_state124, ap_CS_fsm_state125, ap_CS_fsm_state126, ap_CS_fsm_state127, ap_CS_fsm_state128, ap_CS_fsm_state129, ap_CS_fsm_state136, ap_CS_fsm_state137, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state142, ap_CS_fsm_state143, ap_CS_fsm_state144, ap_CS_fsm_state145, ap_CS_fsm_state146, ap_CS_fsm_state147, ap_CS_fsm_state148, ap_CS_fsm_state149, ap_CS_fsm_state150, ap_CS_fsm_state151, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_done, grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_done, gmem1_RVALID, gmem2_AWREADY, gmem2_WREADY, gmem2_BVALID, ap_CS_fsm_state76, ap_CS_fsm_state79, ap_CS_fsm_state82, ap_CS_fsm_state85, ap_CS_fsm_state111, ap_CS_fsm_state133, ap_CS_fsm_state87, ap_CS_fsm_state90, ap_CS_fsm_state92, ap_CS_fsm_state94, ap_CS_fsm_state97, ap_CS_fsm_state100, ap_CS_fsm_state103, ap_CS_fsm_state106, ap_CS_fsm_state109, ap_CS_fsm_state113, ap_CS_fsm_state135, ap_CS_fsm_state131, ap_CS_fsm_state153, ap_CS_fsm_state188, ap_CS_fsm_state191, ap_block_state2_io, ap_block_state194_on_subcall_done, ap_block_state74_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (gmem1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                if (((ap_const_boolean_0 = ap_block_state74_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state79))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                if (((grp_replicate_stream_fu_423_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                else
                    ap_NS_fsm <= ap_ST_fsm_state85;
                end if;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state87))) then
                    ap_NS_fsm <= ap_ST_fsm_state88;
                else
                    ap_NS_fsm <= ap_ST_fsm_state87;
                end if;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                if (((grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                if (((grp_mac_fu_459_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state92))) then
                    ap_NS_fsm <= ap_ST_fsm_state93;
                else
                    ap_NS_fsm <= ap_ST_fsm_state92;
                end if;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state94))) then
                    ap_NS_fsm <= ap_ST_fsm_state95;
                else
                    ap_NS_fsm <= ap_ST_fsm_state94;
                end if;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state97))) then
                    ap_NS_fsm <= ap_ST_fsm_state98;
                else
                    ap_NS_fsm <= ap_ST_fsm_state97;
                end if;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state100))) then
                    ap_NS_fsm <= ap_ST_fsm_state101;
                else
                    ap_NS_fsm <= ap_ST_fsm_state100;
                end if;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state103))) then
                    ap_NS_fsm <= ap_ST_fsm_state104;
                else
                    ap_NS_fsm <= ap_ST_fsm_state103;
                end if;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state106))) then
                    ap_NS_fsm <= ap_ST_fsm_state107;
                else
                    ap_NS_fsm <= ap_ST_fsm_state106;
                end if;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                if (((grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state109))) then
                    ap_NS_fsm <= ap_ST_fsm_state110;
                else
                    ap_NS_fsm <= ap_ST_fsm_state109;
                end if;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                if (((grp_replicate_stream_fu_423_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state111))) then
                    ap_NS_fsm <= ap_ST_fsm_state112;
                else
                    ap_NS_fsm <= ap_ST_fsm_state111;
                end if;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                if (((grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state113))) then
                    ap_NS_fsm <= ap_ST_fsm_state114;
                else
                    ap_NS_fsm <= ap_ST_fsm_state113;
                end if;
            when ap_ST_fsm_state114 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state114))) then
                    ap_NS_fsm <= ap_ST_fsm_state115;
                else
                    ap_NS_fsm <= ap_ST_fsm_state114;
                end if;
            when ap_ST_fsm_state115 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state115))) then
                    ap_NS_fsm <= ap_ST_fsm_state116;
                else
                    ap_NS_fsm <= ap_ST_fsm_state115;
                end if;
            when ap_ST_fsm_state116 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state116))) then
                    ap_NS_fsm <= ap_ST_fsm_state117;
                else
                    ap_NS_fsm <= ap_ST_fsm_state116;
                end if;
            when ap_ST_fsm_state117 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state117))) then
                    ap_NS_fsm <= ap_ST_fsm_state118;
                else
                    ap_NS_fsm <= ap_ST_fsm_state117;
                end if;
            when ap_ST_fsm_state118 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state118))) then
                    ap_NS_fsm <= ap_ST_fsm_state119;
                else
                    ap_NS_fsm <= ap_ST_fsm_state118;
                end if;
            when ap_ST_fsm_state119 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state119))) then
                    ap_NS_fsm <= ap_ST_fsm_state120;
                else
                    ap_NS_fsm <= ap_ST_fsm_state119;
                end if;
            when ap_ST_fsm_state120 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state120))) then
                    ap_NS_fsm <= ap_ST_fsm_state121;
                else
                    ap_NS_fsm <= ap_ST_fsm_state120;
                end if;
            when ap_ST_fsm_state121 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state121))) then
                    ap_NS_fsm <= ap_ST_fsm_state122;
                else
                    ap_NS_fsm <= ap_ST_fsm_state121;
                end if;
            when ap_ST_fsm_state122 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state122))) then
                    ap_NS_fsm <= ap_ST_fsm_state123;
                else
                    ap_NS_fsm <= ap_ST_fsm_state122;
                end if;
            when ap_ST_fsm_state123 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state123))) then
                    ap_NS_fsm <= ap_ST_fsm_state124;
                else
                    ap_NS_fsm <= ap_ST_fsm_state123;
                end if;
            when ap_ST_fsm_state124 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state124))) then
                    ap_NS_fsm <= ap_ST_fsm_state125;
                else
                    ap_NS_fsm <= ap_ST_fsm_state124;
                end if;
            when ap_ST_fsm_state125 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state125))) then
                    ap_NS_fsm <= ap_ST_fsm_state126;
                else
                    ap_NS_fsm <= ap_ST_fsm_state125;
                end if;
            when ap_ST_fsm_state126 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state126))) then
                    ap_NS_fsm <= ap_ST_fsm_state127;
                else
                    ap_NS_fsm <= ap_ST_fsm_state126;
                end if;
            when ap_ST_fsm_state127 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state127))) then
                    ap_NS_fsm <= ap_ST_fsm_state128;
                else
                    ap_NS_fsm <= ap_ST_fsm_state127;
                end if;
            when ap_ST_fsm_state128 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state128))) then
                    ap_NS_fsm <= ap_ST_fsm_state129;
                else
                    ap_NS_fsm <= ap_ST_fsm_state128;
                end if;
            when ap_ST_fsm_state129 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state129))) then
                    ap_NS_fsm <= ap_ST_fsm_state130;
                else
                    ap_NS_fsm <= ap_ST_fsm_state129;
                end if;
            when ap_ST_fsm_state130 => 
                ap_NS_fsm <= ap_ST_fsm_state131;
            when ap_ST_fsm_state131 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state131) and (grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state132;
                else
                    ap_NS_fsm <= ap_ST_fsm_state131;
                end if;
            when ap_ST_fsm_state132 => 
                ap_NS_fsm <= ap_ST_fsm_state133;
            when ap_ST_fsm_state133 => 
                if (((grp_replicate_stream_fu_423_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state133))) then
                    ap_NS_fsm <= ap_ST_fsm_state134;
                else
                    ap_NS_fsm <= ap_ST_fsm_state133;
                end if;
            when ap_ST_fsm_state134 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state135 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state135) and (grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state136;
                else
                    ap_NS_fsm <= ap_ST_fsm_state135;
                end if;
            when ap_ST_fsm_state136 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state136))) then
                    ap_NS_fsm <= ap_ST_fsm_state137;
                else
                    ap_NS_fsm <= ap_ST_fsm_state136;
                end if;
            when ap_ST_fsm_state137 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state137))) then
                    ap_NS_fsm <= ap_ST_fsm_state138;
                else
                    ap_NS_fsm <= ap_ST_fsm_state137;
                end if;
            when ap_ST_fsm_state138 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state138))) then
                    ap_NS_fsm <= ap_ST_fsm_state139;
                else
                    ap_NS_fsm <= ap_ST_fsm_state138;
                end if;
            when ap_ST_fsm_state139 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state139))) then
                    ap_NS_fsm <= ap_ST_fsm_state140;
                else
                    ap_NS_fsm <= ap_ST_fsm_state139;
                end if;
            when ap_ST_fsm_state140 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state140))) then
                    ap_NS_fsm <= ap_ST_fsm_state141;
                else
                    ap_NS_fsm <= ap_ST_fsm_state140;
                end if;
            when ap_ST_fsm_state141 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state141))) then
                    ap_NS_fsm <= ap_ST_fsm_state142;
                else
                    ap_NS_fsm <= ap_ST_fsm_state141;
                end if;
            when ap_ST_fsm_state142 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state142))) then
                    ap_NS_fsm <= ap_ST_fsm_state143;
                else
                    ap_NS_fsm <= ap_ST_fsm_state142;
                end if;
            when ap_ST_fsm_state143 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state143))) then
                    ap_NS_fsm <= ap_ST_fsm_state144;
                else
                    ap_NS_fsm <= ap_ST_fsm_state143;
                end if;
            when ap_ST_fsm_state144 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state144))) then
                    ap_NS_fsm <= ap_ST_fsm_state145;
                else
                    ap_NS_fsm <= ap_ST_fsm_state144;
                end if;
            when ap_ST_fsm_state145 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state145))) then
                    ap_NS_fsm <= ap_ST_fsm_state146;
                else
                    ap_NS_fsm <= ap_ST_fsm_state145;
                end if;
            when ap_ST_fsm_state146 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state146))) then
                    ap_NS_fsm <= ap_ST_fsm_state147;
                else
                    ap_NS_fsm <= ap_ST_fsm_state146;
                end if;
            when ap_ST_fsm_state147 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state147))) then
                    ap_NS_fsm <= ap_ST_fsm_state148;
                else
                    ap_NS_fsm <= ap_ST_fsm_state147;
                end if;
            when ap_ST_fsm_state148 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then
                    ap_NS_fsm <= ap_ST_fsm_state149;
                else
                    ap_NS_fsm <= ap_ST_fsm_state148;
                end if;
            when ap_ST_fsm_state149 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state149))) then
                    ap_NS_fsm <= ap_ST_fsm_state150;
                else
                    ap_NS_fsm <= ap_ST_fsm_state149;
                end if;
            when ap_ST_fsm_state150 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state150))) then
                    ap_NS_fsm <= ap_ST_fsm_state151;
                else
                    ap_NS_fsm <= ap_ST_fsm_state150;
                end if;
            when ap_ST_fsm_state151 => 
                if ((not(((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state151))) then
                    ap_NS_fsm <= ap_ST_fsm_state152;
                else
                    ap_NS_fsm <= ap_ST_fsm_state151;
                end if;
            when ap_ST_fsm_state152 => 
                ap_NS_fsm <= ap_ST_fsm_state153;
            when ap_ST_fsm_state153 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state153) and (grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state154;
                else
                    ap_NS_fsm <= ap_ST_fsm_state153;
                end if;
            when ap_ST_fsm_state154 => 
                ap_NS_fsm <= ap_ST_fsm_state155;
            when ap_ST_fsm_state155 => 
                ap_NS_fsm <= ap_ST_fsm_state156;
            when ap_ST_fsm_state156 => 
                ap_NS_fsm <= ap_ST_fsm_state157;
            when ap_ST_fsm_state157 => 
                ap_NS_fsm <= ap_ST_fsm_state158;
            when ap_ST_fsm_state158 => 
                ap_NS_fsm <= ap_ST_fsm_state159;
            when ap_ST_fsm_state159 => 
                ap_NS_fsm <= ap_ST_fsm_state160;
            when ap_ST_fsm_state160 => 
                ap_NS_fsm <= ap_ST_fsm_state161;
            when ap_ST_fsm_state161 => 
                ap_NS_fsm <= ap_ST_fsm_state162;
            when ap_ST_fsm_state162 => 
                ap_NS_fsm <= ap_ST_fsm_state163;
            when ap_ST_fsm_state163 => 
                ap_NS_fsm <= ap_ST_fsm_state164;
            when ap_ST_fsm_state164 => 
                ap_NS_fsm <= ap_ST_fsm_state165;
            when ap_ST_fsm_state165 => 
                ap_NS_fsm <= ap_ST_fsm_state166;
            when ap_ST_fsm_state166 => 
                ap_NS_fsm <= ap_ST_fsm_state167;
            when ap_ST_fsm_state167 => 
                ap_NS_fsm <= ap_ST_fsm_state168;
            when ap_ST_fsm_state168 => 
                ap_NS_fsm <= ap_ST_fsm_state169;
            when ap_ST_fsm_state169 => 
                ap_NS_fsm <= ap_ST_fsm_state170;
            when ap_ST_fsm_state170 => 
                ap_NS_fsm <= ap_ST_fsm_state171;
            when ap_ST_fsm_state171 => 
                ap_NS_fsm <= ap_ST_fsm_state172;
            when ap_ST_fsm_state172 => 
                ap_NS_fsm <= ap_ST_fsm_state173;
            when ap_ST_fsm_state173 => 
                ap_NS_fsm <= ap_ST_fsm_state174;
            when ap_ST_fsm_state174 => 
                ap_NS_fsm <= ap_ST_fsm_state175;
            when ap_ST_fsm_state175 => 
                ap_NS_fsm <= ap_ST_fsm_state176;
            when ap_ST_fsm_state176 => 
                ap_NS_fsm <= ap_ST_fsm_state177;
            when ap_ST_fsm_state177 => 
                ap_NS_fsm <= ap_ST_fsm_state178;
            when ap_ST_fsm_state178 => 
                ap_NS_fsm <= ap_ST_fsm_state179;
            when ap_ST_fsm_state179 => 
                ap_NS_fsm <= ap_ST_fsm_state180;
            when ap_ST_fsm_state180 => 
                ap_NS_fsm <= ap_ST_fsm_state181;
            when ap_ST_fsm_state181 => 
                ap_NS_fsm <= ap_ST_fsm_state182;
            when ap_ST_fsm_state182 => 
                ap_NS_fsm <= ap_ST_fsm_state183;
            when ap_ST_fsm_state183 => 
                ap_NS_fsm <= ap_ST_fsm_state184;
            when ap_ST_fsm_state184 => 
                ap_NS_fsm <= ap_ST_fsm_state185;
            when ap_ST_fsm_state185 => 
                ap_NS_fsm <= ap_ST_fsm_state186;
            when ap_ST_fsm_state186 => 
                ap_NS_fsm <= ap_ST_fsm_state187;
            when ap_ST_fsm_state187 => 
                if (((or_cond41_fu_1061_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state187))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state188;
                end if;
            when ap_ST_fsm_state188 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state188) and (grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state189;
                else
                    ap_NS_fsm <= ap_ST_fsm_state188;
                end if;
            when ap_ST_fsm_state189 => 
                ap_NS_fsm <= ap_ST_fsm_state190;
            when ap_ST_fsm_state190 => 
                ap_NS_fsm <= ap_ST_fsm_state191;
            when ap_ST_fsm_state191 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state191) and (grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state192;
                else
                    ap_NS_fsm <= ap_ST_fsm_state191;
                end if;
            when ap_ST_fsm_state192 => 
                ap_NS_fsm <= ap_ST_fsm_state193;
            when ap_ST_fsm_state193 => 
                ap_NS_fsm <= ap_ST_fsm_state194;
            when ap_ST_fsm_state194 => 
                if ((not(((ap_const_boolean_1 = ap_block_state194_on_subcall_done) or (gmem2_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state194))) then
                    ap_NS_fsm <= ap_ST_fsm_state195;
                else
                    ap_NS_fsm <= ap_ST_fsm_state194;
                end if;
            when ap_ST_fsm_state195 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state195) and (gmem2_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state196;
                else
                    ap_NS_fsm <= ap_ST_fsm_state195;
                end if;
            when ap_ST_fsm_state196 => 
                ap_NS_fsm <= ap_ST_fsm_state197;
            when ap_ST_fsm_state197 => 
                ap_NS_fsm <= ap_ST_fsm_state198;
            when ap_ST_fsm_state198 => 
                ap_NS_fsm <= ap_ST_fsm_state199;
            when ap_ST_fsm_state199 => 
                ap_NS_fsm <= ap_ST_fsm_state200;
            when ap_ST_fsm_state200 => 
                ap_NS_fsm <= ap_ST_fsm_state201;
            when ap_ST_fsm_state201 => 
                ap_NS_fsm <= ap_ST_fsm_state202;
            when ap_ST_fsm_state202 => 
                ap_NS_fsm <= ap_ST_fsm_state203;
            when ap_ST_fsm_state203 => 
                ap_NS_fsm <= ap_ST_fsm_state204;
            when ap_ST_fsm_state204 => 
                ap_NS_fsm <= ap_ST_fsm_state205;
            when ap_ST_fsm_state205 => 
                ap_NS_fsm <= ap_ST_fsm_state206;
            when ap_ST_fsm_state206 => 
                ap_NS_fsm <= ap_ST_fsm_state207;
            when ap_ST_fsm_state207 => 
                ap_NS_fsm <= ap_ST_fsm_state208;
            when ap_ST_fsm_state208 => 
                ap_NS_fsm <= ap_ST_fsm_state209;
            when ap_ST_fsm_state209 => 
                ap_NS_fsm <= ap_ST_fsm_state210;
            when ap_ST_fsm_state210 => 
                ap_NS_fsm <= ap_ST_fsm_state211;
            when ap_ST_fsm_state211 => 
                ap_NS_fsm <= ap_ST_fsm_state212;
            when ap_ST_fsm_state212 => 
                ap_NS_fsm <= ap_ST_fsm_state213;
            when ap_ST_fsm_state213 => 
                ap_NS_fsm <= ap_ST_fsm_state214;
            when ap_ST_fsm_state214 => 
                ap_NS_fsm <= ap_ST_fsm_state215;
            when ap_ST_fsm_state215 => 
                ap_NS_fsm <= ap_ST_fsm_state216;
            when ap_ST_fsm_state216 => 
                ap_NS_fsm <= ap_ST_fsm_state217;
            when ap_ST_fsm_state217 => 
                ap_NS_fsm <= ap_ST_fsm_state218;
            when ap_ST_fsm_state218 => 
                ap_NS_fsm <= ap_ST_fsm_state219;
            when ap_ST_fsm_state219 => 
                ap_NS_fsm <= ap_ST_fsm_state220;
            when ap_ST_fsm_state220 => 
                ap_NS_fsm <= ap_ST_fsm_state221;
            when ap_ST_fsm_state221 => 
                ap_NS_fsm <= ap_ST_fsm_state222;
            when ap_ST_fsm_state222 => 
                ap_NS_fsm <= ap_ST_fsm_state223;
            when ap_ST_fsm_state223 => 
                ap_NS_fsm <= ap_ST_fsm_state224;
            when ap_ST_fsm_state224 => 
                ap_NS_fsm <= ap_ST_fsm_state225;
            when ap_ST_fsm_state225 => 
                ap_NS_fsm <= ap_ST_fsm_state226;
            when ap_ST_fsm_state226 => 
                ap_NS_fsm <= ap_ST_fsm_state227;
            when ap_ST_fsm_state227 => 
                ap_NS_fsm <= ap_ST_fsm_state228;
            when ap_ST_fsm_state228 => 
                ap_NS_fsm <= ap_ST_fsm_state229;
            when ap_ST_fsm_state229 => 
                ap_NS_fsm <= ap_ST_fsm_state230;
            when ap_ST_fsm_state230 => 
                ap_NS_fsm <= ap_ST_fsm_state231;
            when ap_ST_fsm_state231 => 
                ap_NS_fsm <= ap_ST_fsm_state232;
            when ap_ST_fsm_state232 => 
                ap_NS_fsm <= ap_ST_fsm_state233;
            when ap_ST_fsm_state233 => 
                ap_NS_fsm <= ap_ST_fsm_state234;
            when ap_ST_fsm_state234 => 
                ap_NS_fsm <= ap_ST_fsm_state235;
            when ap_ST_fsm_state235 => 
                ap_NS_fsm <= ap_ST_fsm_state236;
            when ap_ST_fsm_state236 => 
                ap_NS_fsm <= ap_ST_fsm_state237;
            when ap_ST_fsm_state237 => 
                ap_NS_fsm <= ap_ST_fsm_state238;
            when ap_ST_fsm_state238 => 
                ap_NS_fsm <= ap_ST_fsm_state239;
            when ap_ST_fsm_state239 => 
                ap_NS_fsm <= ap_ST_fsm_state240;
            when ap_ST_fsm_state240 => 
                ap_NS_fsm <= ap_ST_fsm_state241;
            when ap_ST_fsm_state241 => 
                ap_NS_fsm <= ap_ST_fsm_state242;
            when ap_ST_fsm_state242 => 
                ap_NS_fsm <= ap_ST_fsm_state243;
            when ap_ST_fsm_state243 => 
                ap_NS_fsm <= ap_ST_fsm_state244;
            when ap_ST_fsm_state244 => 
                ap_NS_fsm <= ap_ST_fsm_state245;
            when ap_ST_fsm_state245 => 
                ap_NS_fsm <= ap_ST_fsm_state246;
            when ap_ST_fsm_state246 => 
                ap_NS_fsm <= ap_ST_fsm_state247;
            when ap_ST_fsm_state247 => 
                ap_NS_fsm <= ap_ST_fsm_state248;
            when ap_ST_fsm_state248 => 
                ap_NS_fsm <= ap_ST_fsm_state249;
            when ap_ST_fsm_state249 => 
                ap_NS_fsm <= ap_ST_fsm_state250;
            when ap_ST_fsm_state250 => 
                ap_NS_fsm <= ap_ST_fsm_state251;
            when ap_ST_fsm_state251 => 
                ap_NS_fsm <= ap_ST_fsm_state252;
            when ap_ST_fsm_state252 => 
                ap_NS_fsm <= ap_ST_fsm_state253;
            when ap_ST_fsm_state253 => 
                ap_NS_fsm <= ap_ST_fsm_state254;
            when ap_ST_fsm_state254 => 
                ap_NS_fsm <= ap_ST_fsm_state255;
            when ap_ST_fsm_state255 => 
                ap_NS_fsm <= ap_ST_fsm_state256;
            when ap_ST_fsm_state256 => 
                ap_NS_fsm <= ap_ST_fsm_state257;
            when ap_ST_fsm_state257 => 
                ap_NS_fsm <= ap_ST_fsm_state258;
            when ap_ST_fsm_state258 => 
                ap_NS_fsm <= ap_ST_fsm_state259;
            when ap_ST_fsm_state259 => 
                ap_NS_fsm <= ap_ST_fsm_state260;
            when ap_ST_fsm_state260 => 
                ap_NS_fsm <= ap_ST_fsm_state261;
            when ap_ST_fsm_state261 => 
                ap_NS_fsm <= ap_ST_fsm_state262;
            when ap_ST_fsm_state262 => 
                ap_NS_fsm <= ap_ST_fsm_state263;
            when ap_ST_fsm_state263 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state263) and (gmem2_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state263;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    and_ln1099_1_fu_1007_p2 <= (grp_fu_652_p2 and and_ln1099_fu_1001_p2);
    and_ln1099_2_fu_1021_p2 <= (or_ln1099_3_fu_1017_p2 and or_ln1099_2_fu_1013_p2);
    and_ln1099_3_fu_1027_p2 <= (grp_fu_656_p2 and and_ln1099_2_fu_1021_p2);
    and_ln1099_4_fu_1033_p2 <= (and_ln1099_3_fu_1027_p2 and and_ln1099_1_fu_1007_p2);
    and_ln1099_fu_1001_p2 <= (or_ln1099_fu_993_p2 and or_ln1099_1_fu_997_p2);
    and_ln224_1_fu_845_p2 <= (grp_fu_652_p2 and and_ln224_fu_839_p2);
    and_ln224_fu_839_p2 <= (or_ln224_fu_815_p2 and or_ln224_1_fu_833_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state103 <= ap_CS_fsm(102);
    ap_CS_fsm_state105 <= ap_CS_fsm(104);
    ap_CS_fsm_state106 <= ap_CS_fsm(105);
    ap_CS_fsm_state108 <= ap_CS_fsm(107);
    ap_CS_fsm_state109 <= ap_CS_fsm(108);
    ap_CS_fsm_state110 <= ap_CS_fsm(109);
    ap_CS_fsm_state111 <= ap_CS_fsm(110);
    ap_CS_fsm_state112 <= ap_CS_fsm(111);
    ap_CS_fsm_state113 <= ap_CS_fsm(112);
    ap_CS_fsm_state114 <= ap_CS_fsm(113);
    ap_CS_fsm_state115 <= ap_CS_fsm(114);
    ap_CS_fsm_state116 <= ap_CS_fsm(115);
    ap_CS_fsm_state117 <= ap_CS_fsm(116);
    ap_CS_fsm_state118 <= ap_CS_fsm(117);
    ap_CS_fsm_state119 <= ap_CS_fsm(118);
    ap_CS_fsm_state120 <= ap_CS_fsm(119);
    ap_CS_fsm_state121 <= ap_CS_fsm(120);
    ap_CS_fsm_state122 <= ap_CS_fsm(121);
    ap_CS_fsm_state123 <= ap_CS_fsm(122);
    ap_CS_fsm_state124 <= ap_CS_fsm(123);
    ap_CS_fsm_state125 <= ap_CS_fsm(124);
    ap_CS_fsm_state126 <= ap_CS_fsm(125);
    ap_CS_fsm_state127 <= ap_CS_fsm(126);
    ap_CS_fsm_state128 <= ap_CS_fsm(127);
    ap_CS_fsm_state129 <= ap_CS_fsm(128);
    ap_CS_fsm_state130 <= ap_CS_fsm(129);
    ap_CS_fsm_state131 <= ap_CS_fsm(130);
    ap_CS_fsm_state132 <= ap_CS_fsm(131);
    ap_CS_fsm_state133 <= ap_CS_fsm(132);
    ap_CS_fsm_state134 <= ap_CS_fsm(133);
    ap_CS_fsm_state135 <= ap_CS_fsm(134);
    ap_CS_fsm_state136 <= ap_CS_fsm(135);
    ap_CS_fsm_state137 <= ap_CS_fsm(136);
    ap_CS_fsm_state138 <= ap_CS_fsm(137);
    ap_CS_fsm_state139 <= ap_CS_fsm(138);
    ap_CS_fsm_state140 <= ap_CS_fsm(139);
    ap_CS_fsm_state141 <= ap_CS_fsm(140);
    ap_CS_fsm_state142 <= ap_CS_fsm(141);
    ap_CS_fsm_state143 <= ap_CS_fsm(142);
    ap_CS_fsm_state144 <= ap_CS_fsm(143);
    ap_CS_fsm_state145 <= ap_CS_fsm(144);
    ap_CS_fsm_state146 <= ap_CS_fsm(145);
    ap_CS_fsm_state147 <= ap_CS_fsm(146);
    ap_CS_fsm_state148 <= ap_CS_fsm(147);
    ap_CS_fsm_state149 <= ap_CS_fsm(148);
    ap_CS_fsm_state150 <= ap_CS_fsm(149);
    ap_CS_fsm_state151 <= ap_CS_fsm(150);
    ap_CS_fsm_state152 <= ap_CS_fsm(151);
    ap_CS_fsm_state153 <= ap_CS_fsm(152);
    ap_CS_fsm_state154 <= ap_CS_fsm(153);
    ap_CS_fsm_state156 <= ap_CS_fsm(155);
    ap_CS_fsm_state165 <= ap_CS_fsm(164);
    ap_CS_fsm_state166 <= ap_CS_fsm(165);
    ap_CS_fsm_state167 <= ap_CS_fsm(166);
    ap_CS_fsm_state168 <= ap_CS_fsm(167);
    ap_CS_fsm_state169 <= ap_CS_fsm(168);
    ap_CS_fsm_state170 <= ap_CS_fsm(169);
    ap_CS_fsm_state173 <= ap_CS_fsm(172);
    ap_CS_fsm_state174 <= ap_CS_fsm(173);
    ap_CS_fsm_state175 <= ap_CS_fsm(174);
    ap_CS_fsm_state176 <= ap_CS_fsm(175);
    ap_CS_fsm_state183 <= ap_CS_fsm(182);
    ap_CS_fsm_state184 <= ap_CS_fsm(183);
    ap_CS_fsm_state185 <= ap_CS_fsm(184);
    ap_CS_fsm_state186 <= ap_CS_fsm(185);
    ap_CS_fsm_state187 <= ap_CS_fsm(186);
    ap_CS_fsm_state188 <= ap_CS_fsm(187);
    ap_CS_fsm_state190 <= ap_CS_fsm(189);
    ap_CS_fsm_state191 <= ap_CS_fsm(190);
    ap_CS_fsm_state193 <= ap_CS_fsm(192);
    ap_CS_fsm_state194 <= ap_CS_fsm(193);
    ap_CS_fsm_state195 <= ap_CS_fsm(194);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state263 <= ap_CS_fsm(262);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);
    ap_NS_fsm_state114 <= ap_NS_fsm(113);
    ap_NS_fsm_state136 <= ap_NS_fsm(135);
    ap_NS_fsm_state73 <= ap_NS_fsm(72);

    ap_ST_fsm_state100_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state100_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state100_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state101_blk <= ap_const_logic_0;
    ap_ST_fsm_state102_blk <= ap_const_logic_0;

    ap_ST_fsm_state103_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state103_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state103_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state104_blk <= ap_const_logic_0;
    ap_ST_fsm_state105_blk <= ap_const_logic_0;

    ap_ST_fsm_state106_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state106_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state106_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state107_blk <= ap_const_logic_0;
    ap_ST_fsm_state108_blk <= ap_const_logic_0;

    ap_ST_fsm_state109_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state109_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state109_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state110_blk <= ap_const_logic_0;

    ap_ST_fsm_state111_blk_assign_proc : process(grp_replicate_stream_fu_423_ap_done)
    begin
        if ((grp_replicate_stream_fu_423_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state111_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state111_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state112_blk <= ap_const_logic_0;

    ap_ST_fsm_state113_blk_assign_proc : process(grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state113_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state113_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state114_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state114_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state114_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state115_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state115_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state115_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state116_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state116_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state116_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state117_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state117_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state117_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state118_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state118_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state118_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state119_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state119_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state119_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state120_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state120_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state120_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state121_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state121_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state121_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state122_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state122_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state122_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state123_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state123_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state123_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state124_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state124_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state124_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state125_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state125_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state125_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state126_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state126_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state126_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state127_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state127_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state127_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state128_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state128_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state128_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state129_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state129_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state129_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state130_blk <= ap_const_logic_0;

    ap_ST_fsm_state131_blk_assign_proc : process(grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state131_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state131_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state132_blk <= ap_const_logic_0;

    ap_ST_fsm_state133_blk_assign_proc : process(grp_replicate_stream_fu_423_ap_done)
    begin
        if ((grp_replicate_stream_fu_423_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state133_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state133_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state134_blk <= ap_const_logic_0;

    ap_ST_fsm_state135_blk_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state135_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state135_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state136_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state136_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state136_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state137_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state137_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state137_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state138_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state138_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state138_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state139_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state139_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state139_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state140_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state140_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state140_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state141_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state141_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state141_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state142_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state142_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state142_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state143_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state143_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state143_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state144_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state144_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state144_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state145_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state145_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state145_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state146_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state146_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state146_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state147_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state147_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state147_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state148_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state148_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state148_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state149_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state149_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state149_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state150_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state150_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state150_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state151_blk_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
        if (((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0))) then 
            ap_ST_fsm_state151_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state151_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state152_blk <= ap_const_logic_0;

    ap_ST_fsm_state153_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state153_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state153_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state154_blk <= ap_const_logic_0;
    ap_ST_fsm_state155_blk <= ap_const_logic_0;
    ap_ST_fsm_state156_blk <= ap_const_logic_0;
    ap_ST_fsm_state157_blk <= ap_const_logic_0;
    ap_ST_fsm_state158_blk <= ap_const_logic_0;
    ap_ST_fsm_state159_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state160_blk <= ap_const_logic_0;
    ap_ST_fsm_state161_blk <= ap_const_logic_0;
    ap_ST_fsm_state162_blk <= ap_const_logic_0;
    ap_ST_fsm_state163_blk <= ap_const_logic_0;
    ap_ST_fsm_state164_blk <= ap_const_logic_0;
    ap_ST_fsm_state165_blk <= ap_const_logic_0;
    ap_ST_fsm_state166_blk <= ap_const_logic_0;
    ap_ST_fsm_state167_blk <= ap_const_logic_0;
    ap_ST_fsm_state168_blk <= ap_const_logic_0;
    ap_ST_fsm_state169_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state170_blk <= ap_const_logic_0;
    ap_ST_fsm_state171_blk <= ap_const_logic_0;
    ap_ST_fsm_state172_blk <= ap_const_logic_0;
    ap_ST_fsm_state173_blk <= ap_const_logic_0;
    ap_ST_fsm_state174_blk <= ap_const_logic_0;
    ap_ST_fsm_state175_blk <= ap_const_logic_0;
    ap_ST_fsm_state176_blk <= ap_const_logic_0;
    ap_ST_fsm_state177_blk <= ap_const_logic_0;
    ap_ST_fsm_state178_blk <= ap_const_logic_0;
    ap_ST_fsm_state179_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state180_blk <= ap_const_logic_0;
    ap_ST_fsm_state181_blk <= ap_const_logic_0;
    ap_ST_fsm_state182_blk <= ap_const_logic_0;
    ap_ST_fsm_state183_blk <= ap_const_logic_0;
    ap_ST_fsm_state184_blk <= ap_const_logic_0;
    ap_ST_fsm_state185_blk <= ap_const_logic_0;
    ap_ST_fsm_state186_blk <= ap_const_logic_0;
    ap_ST_fsm_state187_blk <= ap_const_logic_0;

    ap_ST_fsm_state188_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state188_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state188_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state189_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state190_blk <= ap_const_logic_0;

    ap_ST_fsm_state191_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state191_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state191_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state192_blk <= ap_const_logic_0;
    ap_ST_fsm_state193_blk <= ap_const_logic_0;

    ap_ST_fsm_state194_blk_assign_proc : process(gmem2_AWREADY, ap_block_state194_on_subcall_done)
    begin
        if (((ap_const_boolean_1 = ap_block_state194_on_subcall_done) or (gmem2_AWREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state194_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state194_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state195_blk_assign_proc : process(gmem2_WREADY)
    begin
        if ((gmem2_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state195_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state195_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state196_blk <= ap_const_logic_0;
    ap_ST_fsm_state197_blk <= ap_const_logic_0;
    ap_ST_fsm_state198_blk <= ap_const_logic_0;
    ap_ST_fsm_state199_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state200_blk <= ap_const_logic_0;
    ap_ST_fsm_state201_blk <= ap_const_logic_0;
    ap_ST_fsm_state202_blk <= ap_const_logic_0;
    ap_ST_fsm_state203_blk <= ap_const_logic_0;
    ap_ST_fsm_state204_blk <= ap_const_logic_0;
    ap_ST_fsm_state205_blk <= ap_const_logic_0;
    ap_ST_fsm_state206_blk <= ap_const_logic_0;
    ap_ST_fsm_state207_blk <= ap_const_logic_0;
    ap_ST_fsm_state208_blk <= ap_const_logic_0;
    ap_ST_fsm_state209_blk <= ap_const_logic_0;
    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state210_blk <= ap_const_logic_0;
    ap_ST_fsm_state211_blk <= ap_const_logic_0;
    ap_ST_fsm_state212_blk <= ap_const_logic_0;
    ap_ST_fsm_state213_blk <= ap_const_logic_0;
    ap_ST_fsm_state214_blk <= ap_const_logic_0;
    ap_ST_fsm_state215_blk <= ap_const_logic_0;
    ap_ST_fsm_state216_blk <= ap_const_logic_0;
    ap_ST_fsm_state217_blk <= ap_const_logic_0;
    ap_ST_fsm_state218_blk <= ap_const_logic_0;
    ap_ST_fsm_state219_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state220_blk <= ap_const_logic_0;
    ap_ST_fsm_state221_blk <= ap_const_logic_0;
    ap_ST_fsm_state222_blk <= ap_const_logic_0;
    ap_ST_fsm_state223_blk <= ap_const_logic_0;
    ap_ST_fsm_state224_blk <= ap_const_logic_0;
    ap_ST_fsm_state225_blk <= ap_const_logic_0;
    ap_ST_fsm_state226_blk <= ap_const_logic_0;
    ap_ST_fsm_state227_blk <= ap_const_logic_0;
    ap_ST_fsm_state228_blk <= ap_const_logic_0;
    ap_ST_fsm_state229_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state230_blk <= ap_const_logic_0;
    ap_ST_fsm_state231_blk <= ap_const_logic_0;
    ap_ST_fsm_state232_blk <= ap_const_logic_0;
    ap_ST_fsm_state233_blk <= ap_const_logic_0;
    ap_ST_fsm_state234_blk <= ap_const_logic_0;
    ap_ST_fsm_state235_blk <= ap_const_logic_0;
    ap_ST_fsm_state236_blk <= ap_const_logic_0;
    ap_ST_fsm_state237_blk <= ap_const_logic_0;
    ap_ST_fsm_state238_blk <= ap_const_logic_0;
    ap_ST_fsm_state239_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state240_blk <= ap_const_logic_0;
    ap_ST_fsm_state241_blk <= ap_const_logic_0;
    ap_ST_fsm_state242_blk <= ap_const_logic_0;
    ap_ST_fsm_state243_blk <= ap_const_logic_0;
    ap_ST_fsm_state244_blk <= ap_const_logic_0;
    ap_ST_fsm_state245_blk <= ap_const_logic_0;
    ap_ST_fsm_state246_blk <= ap_const_logic_0;
    ap_ST_fsm_state247_blk <= ap_const_logic_0;
    ap_ST_fsm_state248_blk <= ap_const_logic_0;
    ap_ST_fsm_state249_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state250_blk <= ap_const_logic_0;
    ap_ST_fsm_state251_blk <= ap_const_logic_0;
    ap_ST_fsm_state252_blk <= ap_const_logic_0;
    ap_ST_fsm_state253_blk <= ap_const_logic_0;
    ap_ST_fsm_state254_blk <= ap_const_logic_0;
    ap_ST_fsm_state255_blk <= ap_const_logic_0;
    ap_ST_fsm_state256_blk <= ap_const_logic_0;
    ap_ST_fsm_state257_blk <= ap_const_logic_0;
    ap_ST_fsm_state258_blk <= ap_const_logic_0;
    ap_ST_fsm_state259_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state260_blk <= ap_const_logic_0;
    ap_ST_fsm_state261_blk <= ap_const_logic_0;
    ap_ST_fsm_state262_blk <= ap_const_logic_0;

    ap_ST_fsm_state263_blk_assign_proc : process(gmem2_BVALID)
    begin
        if ((gmem2_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state263_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state263_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_io)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;

    ap_ST_fsm_state72_blk_assign_proc : process(gmem1_RVALID)
    begin
        if ((gmem1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state72_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state72_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state73_blk <= ap_const_logic_0;

    ap_ST_fsm_state74_blk_assign_proc : process(ap_block_state74_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state74_on_subcall_done)) then 
            ap_ST_fsm_state74_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state74_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state75_blk <= ap_const_logic_0;

    ap_ST_fsm_state76_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state76_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state76_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;

    ap_ST_fsm_state79_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state79_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state79_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;

    ap_ST_fsm_state82_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state82_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state82_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;

    ap_ST_fsm_state85_blk_assign_proc : process(grp_replicate_stream_fu_423_ap_done)
    begin
        if ((grp_replicate_stream_fu_423_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state85_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state85_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state86_blk <= ap_const_logic_0;

    ap_ST_fsm_state87_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state87_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state87_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state88_blk <= ap_const_logic_0;
    ap_ST_fsm_state89_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state90_blk_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state90_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state90_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state91_blk <= ap_const_logic_0;

    ap_ST_fsm_state92_blk_assign_proc : process(grp_mac_fu_459_ap_done)
    begin
        if ((grp_mac_fu_459_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state92_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state92_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state93_blk <= ap_const_logic_0;

    ap_ST_fsm_state94_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state94_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state94_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state95_blk <= ap_const_logic_0;
    ap_ST_fsm_state96_blk <= ap_const_logic_0;

    ap_ST_fsm_state97_blk_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_done)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state97_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state97_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state98_blk <= ap_const_logic_0;
    ap_ST_fsm_state99_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state114_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state114 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state115_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state115 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state116_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state116 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state117_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state117 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state118_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state118 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state119_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state119 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state120_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state120 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state121_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state121 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state122_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state122 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state123_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state123 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state124_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state124 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state125_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state125 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state126_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state126 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state127_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state127 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state128_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state128 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state129_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state129 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state136_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state136 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state137_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state137 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state138_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state138 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state139_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state139 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state140_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state140 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state141_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state141 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state142_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state142 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state143_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state143 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state144_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state144 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state145_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state145 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state146_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state146 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state147_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state147 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state148_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state148 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state149_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state149 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state150_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state150 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state151_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n, grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n)
    begin
                ap_block_state151 <= ((grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_blk_n = ap_const_logic_0) or (grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_blk_n = ap_const_logic_0));
    end process;


    ap_block_state194_on_subcall_done_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_done, grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_done)
    begin
                ap_block_state194_on_subcall_done <= ((grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_done = ap_const_logic_0) or (grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_done = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(gmem0_ARREADY, gmem1_ARREADY)
    begin
                ap_block_state2_io <= ((gmem1_ARREADY = ap_const_logic_0) or (gmem0_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state74_on_subcall_done_assign_proc : process(grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_done, grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_done)
    begin
                ap_block_state74_on_subcall_done <= ((grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_done = ap_const_logic_0) or (grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state263, gmem2_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state263) and (gmem2_BVALID = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_ext_blocking_cur_n <= (gmem2_blk_n_W and gmem2_blk_n_B and gmem2_blk_n_AW and gmem1_blk_n_R and gmem1_blk_n_AR and gmem0_blk_n_AR);
    ap_ext_blocking_n <= (ap_ext_blocking_sub_n and ap_ext_blocking_cur_n);

    ap_ext_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_ext_blocking_0, ap_wait_1, ap_sub_ext_blocking_1, ap_wait_2, ap_sub_ext_blocking_2, ap_wait_3, ap_sub_ext_blocking_3, ap_wait_4, ap_sub_ext_blocking_4, ap_wait_5, ap_sub_ext_blocking_5, ap_wait_6, ap_sub_ext_blocking_6, ap_wait_7, ap_sub_ext_blocking_7, ap_wait_8, ap_sub_ext_blocking_8, ap_wait_9, ap_sub_ext_blocking_9, ap_wait_10, ap_sub_ext_blocking_10, ap_wait_11, ap_sub_ext_blocking_11, ap_wait_12, ap_sub_ext_blocking_12, ap_wait_13, ap_sub_ext_blocking_13, ap_wait_14, ap_sub_ext_blocking_14, ap_wait_15, ap_sub_ext_blocking_15, ap_wait_16, ap_sub_ext_blocking_16, ap_wait_17, ap_sub_ext_blocking_17, ap_wait_18, ap_sub_ext_blocking_18, ap_wait_19, ap_sub_ext_blocking_19, ap_wait_20, ap_sub_ext_blocking_20, ap_wait_21, ap_sub_ext_blocking_21, ap_wait_22, ap_sub_ext_blocking_22, ap_wait_23, ap_sub_ext_blocking_23)
    begin
        if ((((ap_wait_23 and ap_sub_ext_blocking_23) = ap_const_logic_1) and ((ap_wait_22 and ap_sub_ext_blocking_22) = ap_const_logic_1) and ((ap_wait_21 and ap_sub_ext_blocking_21) = ap_const_logic_1) and ((ap_wait_20 and ap_sub_ext_blocking_20) = ap_const_logic_1) and ((ap_wait_19 and ap_sub_ext_blocking_19) = ap_const_logic_1) and ((ap_wait_18 and ap_sub_ext_blocking_18) = ap_const_logic_1) and ((ap_wait_17 and ap_sub_ext_blocking_17) = ap_const_logic_1) and ((ap_wait_16 and ap_sub_ext_blocking_16) = ap_const_logic_1) and ((ap_wait_15 and ap_sub_ext_blocking_15) = ap_const_logic_1) and ((ap_wait_14 and ap_sub_ext_blocking_14) = ap_const_logic_1) and ((ap_wait_13 and ap_sub_ext_blocking_13) = ap_const_logic_1) and ((ap_wait_12 and ap_sub_ext_blocking_12) = ap_const_logic_1) and ((ap_wait_11 and ap_sub_ext_blocking_11) = ap_const_logic_1) and ((ap_wait_10 and ap_sub_ext_blocking_10) = ap_const_logic_1) and ((ap_wait_9 and ap_sub_ext_blocking_9) = ap_const_logic_1) and ((ap_wait_8 and ap_sub_ext_blocking_8) = ap_const_logic_1) and ((ap_wait_7 and ap_sub_ext_blocking_7) = ap_const_logic_1) and ((ap_wait_6 and ap_sub_ext_blocking_6) = ap_const_logic_1) and ((ap_wait_5 and ap_sub_ext_blocking_5) = ap_const_logic_1) and ((ap_wait_4 and ap_sub_ext_blocking_4) = ap_const_logic_1) and ((ap_wait_3 and ap_sub_ext_blocking_3) = ap_const_logic_1) and ((ap_wait_2 and ap_sub_ext_blocking_2) = ap_const_logic_1) and ((ap_wait_1 and ap_sub_ext_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_ext_blocking_0) = ap_const_logic_1))) then 
            ap_ext_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_ext_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_n <= (ap_int_blocking_sub_n and ap_const_logic_1);

    ap_int_blocking_sub_n_assign_proc : process(ap_wait_0, ap_wait_1, ap_wait_2, ap_wait_3, ap_wait_4, ap_wait_5, ap_wait_6, ap_wait_7, ap_wait_8, ap_wait_9, ap_wait_10, ap_wait_11, ap_wait_12, ap_wait_13, ap_wait_14, ap_wait_15, ap_wait_16, ap_wait_17, ap_wait_18, ap_wait_19, ap_wait_20, ap_wait_21, ap_wait_22, ap_wait_23, ap_sub_int_blocking_0, ap_sub_int_blocking_1, ap_sub_int_blocking_2, ap_sub_int_blocking_3, ap_sub_int_blocking_4, ap_sub_int_blocking_5, ap_sub_int_blocking_6, ap_sub_int_blocking_7, ap_sub_int_blocking_8, ap_sub_int_blocking_9, ap_sub_int_blocking_10, ap_sub_int_blocking_11, ap_sub_int_blocking_12, ap_sub_int_blocking_13, ap_sub_int_blocking_14, ap_sub_int_blocking_15, ap_sub_int_blocking_16, ap_sub_int_blocking_17, ap_sub_int_blocking_18, ap_sub_int_blocking_19, ap_sub_int_blocking_20, ap_sub_int_blocking_21, ap_sub_int_blocking_22, ap_sub_int_blocking_23)
    begin
        if ((((ap_wait_23 and ap_sub_int_blocking_23) = ap_const_logic_1) and ((ap_wait_22 and ap_sub_int_blocking_22) = ap_const_logic_1) and ((ap_wait_21 and ap_sub_int_blocking_21) = ap_const_logic_1) and ((ap_wait_20 and ap_sub_int_blocking_20) = ap_const_logic_1) and ((ap_wait_19 and ap_sub_int_blocking_19) = ap_const_logic_1) and ((ap_wait_18 and ap_sub_int_blocking_18) = ap_const_logic_1) and ((ap_wait_17 and ap_sub_int_blocking_17) = ap_const_logic_1) and ((ap_wait_16 and ap_sub_int_blocking_16) = ap_const_logic_1) and ((ap_wait_15 and ap_sub_int_blocking_15) = ap_const_logic_1) and ((ap_wait_14 and ap_sub_int_blocking_14) = ap_const_logic_1) and ((ap_wait_13 and ap_sub_int_blocking_13) = ap_const_logic_1) and ((ap_wait_12 and ap_sub_int_blocking_12) = ap_const_logic_1) and ((ap_wait_11 and ap_sub_int_blocking_11) = ap_const_logic_1) and ((ap_wait_10 and ap_sub_int_blocking_10) = ap_const_logic_1) and ((ap_wait_9 and ap_sub_int_blocking_9) = ap_const_logic_1) and ((ap_wait_8 and ap_sub_int_blocking_8) = ap_const_logic_1) and ((ap_wait_7 and ap_sub_int_blocking_7) = ap_const_logic_1) and ((ap_wait_6 and ap_sub_int_blocking_6) = ap_const_logic_1) and ((ap_wait_5 and ap_sub_int_blocking_5) = ap_const_logic_1) and ((ap_wait_4 and ap_sub_int_blocking_4) = ap_const_logic_1) and ((ap_wait_3 and ap_sub_int_blocking_3) = ap_const_logic_1) and ((ap_wait_2 and ap_sub_int_blocking_2) = ap_const_logic_1) and ((ap_wait_1 and ap_sub_int_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_int_blocking_0) = ap_const_logic_1))) then 
            ap_int_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_int_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state263, gmem2_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state263) and (gmem2_BVALID = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_str_blocking_sub_n and ap_const_logic_1);

    ap_str_blocking_sub_n_assign_proc : process(ap_wait_0, ap_wait_1, ap_wait_2, ap_wait_3, ap_wait_4, ap_wait_5, ap_wait_6, ap_wait_7, ap_wait_8, ap_wait_9, ap_wait_10, ap_wait_11, ap_wait_12, ap_wait_13, ap_wait_14, ap_wait_15, ap_wait_16, ap_wait_17, ap_wait_18, ap_wait_19, ap_wait_20, ap_wait_21, ap_wait_22, ap_wait_23, ap_sub_str_blocking_0, ap_sub_str_blocking_1, ap_sub_str_blocking_2, ap_sub_str_blocking_3, ap_sub_str_blocking_4, ap_sub_str_blocking_5, ap_sub_str_blocking_6, ap_sub_str_blocking_7, ap_sub_str_blocking_8, ap_sub_str_blocking_9, ap_sub_str_blocking_10, ap_sub_str_blocking_11, ap_sub_str_blocking_12, ap_sub_str_blocking_13, ap_sub_str_blocking_14, ap_sub_str_blocking_15, ap_sub_str_blocking_16, ap_sub_str_blocking_17, ap_sub_str_blocking_18, ap_sub_str_blocking_19, ap_sub_str_blocking_20, ap_sub_str_blocking_21, ap_sub_str_blocking_22, ap_sub_str_blocking_23)
    begin
        if ((((ap_wait_23 and ap_sub_str_blocking_23) = ap_const_logic_1) and ((ap_wait_22 and ap_sub_str_blocking_22) = ap_const_logic_1) and ((ap_wait_21 and ap_sub_str_blocking_21) = ap_const_logic_1) and ((ap_wait_20 and ap_sub_str_blocking_20) = ap_const_logic_1) and ((ap_wait_19 and ap_sub_str_blocking_19) = ap_const_logic_1) and ((ap_wait_18 and ap_sub_str_blocking_18) = ap_const_logic_1) and ((ap_wait_17 and ap_sub_str_blocking_17) = ap_const_logic_1) and ((ap_wait_16 and ap_sub_str_blocking_16) = ap_const_logic_1) and ((ap_wait_15 and ap_sub_str_blocking_15) = ap_const_logic_1) and ((ap_wait_14 and ap_sub_str_blocking_14) = ap_const_logic_1) and ((ap_wait_13 and ap_sub_str_blocking_13) = ap_const_logic_1) and ((ap_wait_12 and ap_sub_str_blocking_12) = ap_const_logic_1) and ((ap_wait_11 and ap_sub_str_blocking_11) = ap_const_logic_1) and ((ap_wait_10 and ap_sub_str_blocking_10) = ap_const_logic_1) and ((ap_wait_9 and ap_sub_str_blocking_9) = ap_const_logic_1) and ((ap_wait_8 and ap_sub_str_blocking_8) = ap_const_logic_1) and ((ap_wait_7 and ap_sub_str_blocking_7) = ap_const_logic_1) and ((ap_wait_6 and ap_sub_str_blocking_6) = ap_const_logic_1) and ((ap_wait_5 and ap_sub_str_blocking_5) = ap_const_logic_1) and ((ap_wait_4 and ap_sub_str_blocking_4) = ap_const_logic_1) and ((ap_wait_3 and ap_sub_str_blocking_3) = ap_const_logic_1) and ((ap_wait_2 and ap_sub_str_blocking_2) = ap_const_logic_1) and ((ap_wait_1 and ap_sub_str_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_str_blocking_0) = ap_const_logic_1))) then 
            ap_str_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_str_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sub_ext_blocking_0_assign_proc : process(grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_1_assign_proc : process(grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_10_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_10 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_11_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_11 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_12_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_12 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_13_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_13 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_14_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_14 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_15_assign_proc : process(grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_15 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_16_assign_proc : process(grp_vec_add_fu_527_ap_ext_blocking_n)
    begin
        if ((grp_vec_add_fu_527_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_16 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_17_assign_proc : process(grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_17 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_18_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_18 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_19_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_19 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_2_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_2 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_20_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_20 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_21_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_21 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_22_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_22 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_23_assign_proc : process(grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_23 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_3_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_3 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_4_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_4 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_5_assign_proc : process(grp_replicate_stream_fu_423_ap_ext_blocking_n)
    begin
        if ((grp_replicate_stream_fu_423_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_5 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_6_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_6 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_7_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_7 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_8_assign_proc : process(grp_mac_fu_459_ap_ext_blocking_n)
    begin
        if ((grp_mac_fu_459_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_8 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_9_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_ext_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_9 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_0_assign_proc : process(grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_1_assign_proc : process(grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_10_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_10 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_11_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_11 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_12_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_12 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_13_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_13 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_14_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_14 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_15_assign_proc : process(grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_15 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_16_assign_proc : process(grp_vec_add_fu_527_ap_int_blocking_n)
    begin
        if ((grp_vec_add_fu_527_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_16 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_17_assign_proc : process(grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_17 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_18_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_18 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_19_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_19 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_2_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_2 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_20_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_20 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_21_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_21 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_22_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_22 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_23_assign_proc : process(grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_23 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_3_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_3 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_4_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_4 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_5_assign_proc : process(grp_replicate_stream_fu_423_ap_int_blocking_n)
    begin
        if ((grp_replicate_stream_fu_423_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_5 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_6_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_6 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_7_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_7 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_8_assign_proc : process(grp_mac_fu_459_ap_int_blocking_n)
    begin
        if ((grp_mac_fu_459_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_8 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_9_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_int_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_9 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_0_assign_proc : process(grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_1_assign_proc : process(grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_10_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_10 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_11_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_11 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_12_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_12 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_13_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_13 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_14_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_14 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_15_assign_proc : process(grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_15 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_16_assign_proc : process(grp_vec_add_fu_527_ap_str_blocking_n)
    begin
        if ((grp_vec_add_fu_527_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_16 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_17_assign_proc : process(grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_17 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_18_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_18 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_19_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_19 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_2_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_2 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_20_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_20 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_21_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_21 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_22_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_22 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_23_assign_proc : process(grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_23 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_3_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_3 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_4_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_4 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_5_assign_proc : process(grp_replicate_stream_fu_423_ap_str_blocking_n)
    begin
        if ((grp_replicate_stream_fu_423_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_5 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_6_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_6 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_7_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_7 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_8_assign_proc : process(grp_mac_fu_459_ap_str_blocking_n)
    begin
        if ((grp_mac_fu_459_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_8 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_9_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_str_blocking_n)
    begin
        if ((grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_9 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state74 = ap_CS_fsm)) then 
            ap_wait_0 <= ap_const_logic_1;
        else 
            ap_wait_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_1_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state74 = ap_CS_fsm)) then 
            ap_wait_1 <= ap_const_logic_1;
        else 
            ap_wait_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_10_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state97 = ap_CS_fsm)) then 
            ap_wait_10 <= ap_const_logic_1;
        else 
            ap_wait_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_11_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state100 = ap_CS_fsm)) then 
            ap_wait_11 <= ap_const_logic_1;
        else 
            ap_wait_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_12_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state103 = ap_CS_fsm)) then 
            ap_wait_12 <= ap_const_logic_1;
        else 
            ap_wait_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_13_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state106 = ap_CS_fsm)) then 
            ap_wait_13 <= ap_const_logic_1;
        else 
            ap_wait_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_14_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state109 = ap_CS_fsm)) then 
            ap_wait_14 <= ap_const_logic_1;
        else 
            ap_wait_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_15_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state113 = ap_CS_fsm)) then 
            ap_wait_15 <= ap_const_logic_1;
        else 
            ap_wait_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_16_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state129 = ap_CS_fsm)) then 
            ap_wait_16 <= ap_const_logic_1;
        else 
            ap_wait_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_17_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state131 = ap_CS_fsm)) then 
            ap_wait_17 <= ap_const_logic_1;
        else 
            ap_wait_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_18_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state135 = ap_CS_fsm)) then 
            ap_wait_18 <= ap_const_logic_1;
        else 
            ap_wait_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_19_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state153 = ap_CS_fsm)) then 
            ap_wait_19 <= ap_const_logic_1;
        else 
            ap_wait_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_2_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state76 = ap_CS_fsm)) then 
            ap_wait_2 <= ap_const_logic_1;
        else 
            ap_wait_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_20_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state188 = ap_CS_fsm)) then 
            ap_wait_20 <= ap_const_logic_1;
        else 
            ap_wait_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_21_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state191 = ap_CS_fsm)) then 
            ap_wait_21 <= ap_const_logic_1;
        else 
            ap_wait_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_22_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state194 = ap_CS_fsm)) then 
            ap_wait_22 <= ap_const_logic_1;
        else 
            ap_wait_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_23_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state194 = ap_CS_fsm)) then 
            ap_wait_23 <= ap_const_logic_1;
        else 
            ap_wait_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_3_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state79 = ap_CS_fsm)) then 
            ap_wait_3 <= ap_const_logic_1;
        else 
            ap_wait_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_4_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state82 = ap_CS_fsm)) then 
            ap_wait_4 <= ap_const_logic_1;
        else 
            ap_wait_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_5_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state85 = ap_CS_fsm)) then 
            ap_wait_5 <= ap_const_logic_1;
        else 
            ap_wait_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_6_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state87 = ap_CS_fsm)) then 
            ap_wait_6 <= ap_const_logic_1;
        else 
            ap_wait_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_7_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state90 = ap_CS_fsm)) then 
            ap_wait_7 <= ap_const_logic_1;
        else 
            ap_wait_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_8_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state92 = ap_CS_fsm)) then 
            ap_wait_8 <= ap_const_logic_1;
        else 
            ap_wait_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_9_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state94 = ap_CS_fsm)) then 
            ap_wait_9 <= ap_const_logic_1;
        else 
            ap_wait_9 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln1099_1_fu_884_p1 <= eps_pri_reg_1245;
    bitcast_ln1099_2_fu_925_p1 <= reg_686;
    bitcast_ln1099_3_fu_943_p1 <= eps_dual_reg_1251;
    bitcast_ln1099_fu_866_p1 <= reg_680;
    bitcast_ln224_1_fu_785_p1 <= reg_686;
    bitcast_ln224_fu_768_p1 <= norm_x_reg_1202;
    event_done <= ap_done;

    gmem0_ARADDR_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARADDR, ap_CS_fsm_state73, sext_ln19_fu_723_p1, ap_block_state2_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_ARADDR <= sext_ln19_fu_723_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            gmem0_ARADDR <= grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARADDR;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARLEN_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARLEN, ap_CS_fsm_state73, ap_block_state2_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_ARLEN <= ap_const_lv32_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            gmem0_ARLEN <= grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARLEN;
        else 
            gmem0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARVALID, ap_CS_fsm_state73, ap_block_state2_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            gmem0_ARVALID <= grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_RREADY, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            gmem0_RREADY <= grp_krnl_bp_Pipeline_l_load_input_fu_389_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(m_axi_gmem0_ARREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_ARVALID <= ap_const_logic_1;
        else 
            gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_RREADY_assign_proc : process(ap_CS_fsm_state72, gmem1_RVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) and (gmem1_RVALID = ap_const_logic_1))) then 
            gmem1_RREADY <= ap_const_logic_1;
        else 
            gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_blk_n_AR_assign_proc : process(m_axi_gmem1_ARREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gmem1_blk_n_AR <= m_axi_gmem1_ARREADY;
        else 
            gmem1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_R_assign_proc : process(m_axi_gmem1_RVALID, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            gmem1_blk_n_R <= m_axi_gmem1_RVALID;
        else 
            gmem1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_AWVALID_assign_proc : process(ap_CS_fsm_state194, gmem2_AWREADY, ap_block_state194_on_subcall_done)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state194_on_subcall_done) or (gmem2_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state194))) then 
            gmem2_AWVALID <= ap_const_logic_1;
        else 
            gmem2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_BREADY_assign_proc : process(ap_CS_fsm_state263, gmem2_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state263) and (gmem2_BVALID = ap_const_logic_1))) then 
            gmem2_BREADY <= ap_const_logic_1;
        else 
            gmem2_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_WVALID_assign_proc : process(ap_CS_fsm_state195, gmem2_WREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state195) and (gmem2_WREADY = ap_const_logic_1))) then 
            gmem2_WVALID <= ap_const_logic_1;
        else 
            gmem2_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_blk_n_AW_assign_proc : process(m_axi_gmem2_AWREADY, ap_CS_fsm_state194)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state194)) then 
            gmem2_blk_n_AW <= m_axi_gmem2_AWREADY;
        else 
            gmem2_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_B_assign_proc : process(m_axi_gmem2_BVALID, ap_CS_fsm_state263)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state263)) then 
            gmem2_blk_n_B <= m_axi_gmem2_BVALID;
        else 
            gmem2_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_W_assign_proc : process(m_axi_gmem2_WREADY, ap_CS_fsm_state195)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state195)) then 
            gmem2_blk_n_W <= m_axi_gmem2_WREADY;
        else 
            gmem2_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_626_ce_assign_proc : process(ap_CS_fsm_state83, grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_done, grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_done, grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_ce, grp_mac_fu_459_grp_fu_626_p_ce, grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_ce, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_ce, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_ce, grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_ce, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_ce, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state90, ap_CS_fsm_state92, ap_CS_fsm_state103, ap_CS_fsm_state109, ap_CS_fsm_state135, ap_CS_fsm_state131, ap_CS_fsm_state153, ap_CS_fsm_state77, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_626_ce <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
            grp_fu_626_ce <= grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_626_ce <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_626_ce <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_fu_626_ce <= grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_fu_626_ce <= grp_mac_fu_459_grp_fu_626_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            grp_fu_626_ce <= grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state78) or ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82)) or ((grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state79)))) then 
            grp_fu_626_ce <= ap_const_logic_1;
        else 
            grp_fu_626_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_626_opcode_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_opcode, grp_mac_fu_459_grp_fu_626_p_opcode, grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_opcode, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_opcode, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_opcode, grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_opcode, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_opcode, ap_CS_fsm_state90, ap_CS_fsm_state92, ap_CS_fsm_state103, ap_CS_fsm_state109, ap_CS_fsm_state135, ap_CS_fsm_state131, ap_CS_fsm_state153, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_626_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
            grp_fu_626_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_626_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_626_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_fu_626_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_fu_626_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_mac_fu_459_grp_fu_626_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            grp_fu_626_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_626_opcode <= ap_const_lv2_1;
        else 
            grp_fu_626_opcode <= "XX";
        end if; 
    end process;


    grp_fu_626_p0_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_din0, grp_mac_fu_459_grp_fu_626_p_din0, grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_din0, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_din0, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_din0, grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_din0, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_din0, ap_CS_fsm_state90, ap_CS_fsm_state92, ap_CS_fsm_state103, ap_CS_fsm_state109, ap_CS_fsm_state135, ap_CS_fsm_state131, ap_CS_fsm_state153, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_626_p0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
            grp_fu_626_p0 <= grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_626_p0 <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_626_p0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_fu_626_p0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_fu_626_p0 <= grp_mac_fu_459_grp_fu_626_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            grp_fu_626_p0 <= grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_626_p0 <= ap_const_lv32_3F800000;
        else 
            grp_fu_626_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_626_p1_assign_proc : process(alpha, grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_din1, grp_mac_fu_459_grp_fu_626_p_din1, grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_din1, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_din1, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_din1, grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_din1, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_din1, ap_CS_fsm_state90, ap_CS_fsm_state92, ap_CS_fsm_state103, ap_CS_fsm_state109, ap_CS_fsm_state135, ap_CS_fsm_state131, ap_CS_fsm_state153, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_626_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_626_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
            grp_fu_626_p1 <= grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_grp_fu_626_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_626_p1 <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_626_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_626_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_626_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_fu_626_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_grp_fu_626_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_fu_626_p1 <= grp_mac_fu_459_grp_fu_626_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            grp_fu_626_p1 <= grp_krnl_bp_Pipeline_l_vec_sub_fu_449_grp_fu_626_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_626_p1 <= alpha;
        else 
            grp_fu_626_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_631_ce_assign_proc : process(grp_mac_fu_459_grp_fu_631_p_ce, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_ce, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_ce, ap_CS_fsm_state92, ap_CS_fsm_state109, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_631_ce <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_631_ce <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_fu_631_ce <= grp_mac_fu_459_grp_fu_631_p_ce;
        else 
            grp_fu_631_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_631_p0_assign_proc : process(reg_680, select_ln868_reg_1209, grp_mac_fu_459_grp_fu_631_p_din0, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_din0, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_din0, ap_CS_fsm_state92, ap_CS_fsm_state109, ap_CS_fsm_state153, ap_CS_fsm_state166, ap_CS_fsm_state170)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_631_p0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_631_p0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_fu_631_p0 <= grp_mac_fu_459_grp_fu_631_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state170)) then 
            grp_fu_631_p0 <= select_ln868_reg_1209;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state166)) then 
            grp_fu_631_p0 <= reg_680;
        else 
            grp_fu_631_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_631_p1_assign_proc : process(grp_mac_fu_459_grp_fu_631_p_din1, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_din1, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_din1, ap_CS_fsm_state92, ap_CS_fsm_state109, ap_CS_fsm_state153, ap_CS_fsm_state166, ap_CS_fsm_state170)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_631_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_631_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_631_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_631_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_fu_631_p1 <= grp_mac_fu_459_grp_fu_631_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state166))) then 
            grp_fu_631_p1 <= ap_const_lv32_3C23D70A;
        else 
            grp_fu_631_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_636_ce_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_ce, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_636_ce <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_ce;
        else 
            grp_fu_636_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_636_p0_assign_proc : process(reg_692, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_din0, ap_CS_fsm_state109, ap_CS_fsm_state170)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_636_p0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state170)) then 
            grp_fu_636_p0 <= reg_692;
        else 
            grp_fu_636_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_636_p1_assign_proc : process(rho, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_din1, ap_CS_fsm_state109, ap_CS_fsm_state170)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_fu_636_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_grp_fu_636_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state170)) then 
            grp_fu_636_p1 <= rho;
        else 
            grp_fu_636_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_640_ce_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_640_p_ce, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_640_ce <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_640_p_ce;
        else 
            grp_fu_640_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_640_p0_assign_proc : process(add_i_reg_1235, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_640_p_din0, ap_CS_fsm_state153, ap_CS_fsm_state184)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_640_p0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_640_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state184)) then 
            grp_fu_640_p0 <= add_i_reg_1235;
        else 
            grp_fu_640_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_646_ce_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_646_p_ce, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_646_ce <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_646_p_ce;
        else 
            grp_fu_646_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_646_p0_assign_proc : process(reg_692, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_646_p_din0, ap_CS_fsm_state153, ap_CS_fsm_state174)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_646_p0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_646_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            grp_fu_646_p0 <= reg_692;
        else 
            grp_fu_646_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_652_ce_assign_proc : process(grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_ce, ap_CS_fsm_state131)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_652_ce <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_ce;
        else 
            grp_fu_652_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_652_opcode_assign_proc : process(ap_CS_fsm_state186, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_opcode, ap_CS_fsm_state131, ap_CS_fsm_state168)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_652_opcode <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state186) or (ap_const_logic_1 = ap_CS_fsm_state168))) then 
            grp_fu_652_opcode <= ap_const_lv5_4;
        else 
            grp_fu_652_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_652_p0_assign_proc : process(reg_680, norm_x_reg_1202, ap_CS_fsm_state186, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_din0, ap_CS_fsm_state131, ap_CS_fsm_state168)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_652_p0 <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state186)) then 
            grp_fu_652_p0 <= reg_680;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state168)) then 
            grp_fu_652_p0 <= norm_x_reg_1202;
        else 
            grp_fu_652_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_652_p1_assign_proc : process(reg_686, eps_pri_reg_1245, ap_CS_fsm_state186, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_din1, ap_CS_fsm_state131, ap_CS_fsm_state168)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_652_p1 <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_652_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state186)) then 
            grp_fu_652_p1 <= eps_pri_reg_1245;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state168)) then 
            grp_fu_652_p1 <= reg_686;
        else 
            grp_fu_652_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_656_ce_assign_proc : process(grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_ce, ap_CS_fsm_state131)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_656_ce <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_ce;
        else 
            grp_fu_656_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_656_opcode_assign_proc : process(ap_CS_fsm_state186, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_opcode, ap_CS_fsm_state131)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_656_opcode <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state186)) then 
            grp_fu_656_opcode <= ap_const_lv5_4;
        else 
            grp_fu_656_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_656_p0_assign_proc : process(reg_686, ap_CS_fsm_state186, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_din0, ap_CS_fsm_state131)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_656_p0 <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state186)) then 
            grp_fu_656_p0 <= reg_686;
        else 
            grp_fu_656_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_656_p1_assign_proc : process(eps_dual_reg_1251, ap_CS_fsm_state186, grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_din1, ap_CS_fsm_state131)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_656_p1 <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_grp_fu_656_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state186)) then 
            grp_fu_656_p1 <= eps_dual_reg_1251;
        else 
            grp_fu_656_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_660_p1_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_r_norm_1_out, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_x_1_out, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_u_out, ap_CS_fsm_state154, ap_CS_fsm_state156, ap_CS_fsm_state174)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            grp_fu_660_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_r_norm_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            grp_fu_660_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_x_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state154)) then 
            grp_fu_660_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_u_out;
        else 
            grp_fu_660_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_665_p1_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_s_norm_1_out, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_z_1_out, ap_CS_fsm_state156, ap_CS_fsm_state174)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            grp_fu_665_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_s_norm_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            grp_fu_665_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_norm_z_1_out;
        else 
            grp_fu_665_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_670_ce_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_ce, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_670_ce <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_ce;
        else 
            grp_fu_670_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_670_p0_assign_proc : process(conv2_i_reg_1225, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_din0, ap_CS_fsm_state153, ap_CS_fsm_state176)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_670_p0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state176)) then 
            grp_fu_670_p0 <= conv2_i_reg_1225;
        else 
            grp_fu_670_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_670_p1_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_din1, ap_CS_fsm_state153, ap_CS_fsm_state176)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            grp_fu_670_p1 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_grp_fu_670_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state176)) then 
            grp_fu_670_p1 <= ap_const_lv64_3F3289502B575FFC;
        else 
            grp_fu_670_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_ap_start_reg;
    grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_start <= grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_ap_start_reg;
    grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_start <= grp_krnl_bp_Pipeline_l_load_input1_fu_398_ap_start_reg;
    grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_start <= grp_krnl_bp_Pipeline_l_load_input_fu_389_ap_start_reg;
    grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_start <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_ap_start_reg;
    grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_start <= grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_ap_start_reg;
    grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_start <= grp_krnl_bp_Pipeline_l_vec_sub_fu_449_ap_start_reg;
    grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_start <= grp_krnl_bp_Pipeline_l_write_bram_fu_519_ap_start_reg;
    grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_start <= grp_krnl_bp_Pipeline_l_write_mem_fu_619_ap_start_reg;
    grp_mac_fu_459_ap_start <= grp_mac_fu_459_ap_start_reg;
    grp_replicate_stream_fu_423_ap_start <= grp_replicate_stream_fu_423_ap_start_reg;

    grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_full_n_assign_proc : process(z_old_stream_full_n, ap_CS_fsm_state85, ap_CS_fsm_state111, ap_CS_fsm_state133, u_copy_1_stream_full_n, x_hat_copy_1_stream_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_full_n <= z_old_stream_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_full_n <= x_hat_copy_1_stream_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_full_n <= u_copy_1_stream_full_n;
        else 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_full_n <= z_old_stream_full_n;
        end if; 
    end process;


    grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_full_n_assign_proc : process(ap_CS_fsm_state85, ap_CS_fsm_state111, ap_CS_fsm_state133, u_copy_2_stream_full_n, x_hat_copy_2_stream_full_n, z_copy_1_stream_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_full_n <= z_copy_1_stream_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_full_n <= x_hat_copy_2_stream_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_full_n <= u_copy_2_stream_full_n;
        else 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_full_n <= z_copy_1_stream_full_n;
        end if; 
    end process;


    grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_full_n_assign_proc : process(z_copy_2_stream_full_n, ap_CS_fsm_state85, ap_CS_fsm_state111, ap_CS_fsm_state133, u_copy_3_stream_full_n, x_hat_copy_3_stream_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_full_n <= z_copy_2_stream_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_full_n <= x_hat_copy_3_stream_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_full_n <= u_copy_3_stream_full_n;
        else 
            grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_full_n <= z_copy_2_stream_full_n;
        end if; 
    end process;


    grp_replicate_stream_fu_423_krnl_bp_u_stream_dout_assign_proc : process(u_stream_dout, ap_CS_fsm_state85, x_hat_stream_dout, ap_CS_fsm_state111, z_stream_dout, ap_CS_fsm_state133)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_stream_dout <= z_stream_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_stream_dout <= x_hat_stream_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_stream_dout <= u_stream_dout;
        else 
            grp_replicate_stream_fu_423_krnl_bp_u_stream_dout <= z_stream_dout;
        end if; 
    end process;


    grp_replicate_stream_fu_423_krnl_bp_u_stream_empty_n_assign_proc : process(u_stream_empty_n, ap_CS_fsm_state85, x_hat_stream_empty_n, ap_CS_fsm_state111, z_stream_empty_n, ap_CS_fsm_state133)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_stream_empty_n <= z_stream_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_stream_empty_n <= x_hat_stream_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_replicate_stream_fu_423_krnl_bp_u_stream_empty_n <= u_stream_empty_n;
        else 
            grp_replicate_stream_fu_423_krnl_bp_u_stream_empty_n <= z_stream_empty_n;
        end if; 
    end process;


    grp_vec_add_fu_527_ap_ce_assign_proc : process(ap_CS_fsm_state114, ap_CS_fsm_state115, ap_CS_fsm_state116, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state119, ap_CS_fsm_state120, ap_CS_fsm_state121, ap_CS_fsm_state122, ap_CS_fsm_state123, ap_CS_fsm_state124, ap_CS_fsm_state125, ap_CS_fsm_state126, ap_CS_fsm_state127, ap_CS_fsm_state128, ap_CS_fsm_state129, ap_CS_fsm_state136, ap_CS_fsm_state137, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state142, ap_CS_fsm_state143, ap_CS_fsm_state144, ap_CS_fsm_state145, ap_CS_fsm_state146, ap_CS_fsm_state147, ap_CS_fsm_state148, ap_CS_fsm_state149, ap_CS_fsm_state150, ap_CS_fsm_state151)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state150) or (ap_const_logic_1 = ap_CS_fsm_state149) or (ap_const_logic_1 = ap_CS_fsm_state148) or (ap_const_logic_1 = ap_CS_fsm_state147) or (ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145) or (ap_const_logic_1 = ap_CS_fsm_state144) or (ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            grp_vec_add_fu_527_ap_ce <= ap_const_logic_1;
        else 
            grp_vec_add_fu_527_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_vec_add_fu_527_ap_start <= grp_vec_add_fu_527_ap_start_reg;

    grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_dout_assign_proc : process(ap_CS_fsm_state114, ap_CS_fsm_state115, ap_CS_fsm_state116, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state119, ap_CS_fsm_state120, ap_CS_fsm_state121, ap_CS_fsm_state136, ap_CS_fsm_state137, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state142, ap_CS_fsm_state143, u_copy_2_stream_dout, u_copy_3_stream_dout)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_dout <= u_copy_3_stream_dout;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_dout <= u_copy_2_stream_dout;
        else 
            grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_dout <= u_copy_3_stream_dout;
        end if; 
    end process;


    grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_empty_n_assign_proc : process(ap_CS_fsm_state114, ap_CS_fsm_state115, ap_CS_fsm_state116, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state119, ap_CS_fsm_state120, ap_CS_fsm_state121, ap_CS_fsm_state136, ap_CS_fsm_state137, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state142, ap_CS_fsm_state143, u_copy_2_stream_empty_n, u_copy_3_stream_empty_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_empty_n <= u_copy_3_stream_empty_n;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_empty_n <= u_copy_2_stream_empty_n;
        else 
            grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_empty_n <= u_copy_3_stream_empty_n;
        end if; 
    end process;


    grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_dout_assign_proc : process(ap_CS_fsm_state114, ap_CS_fsm_state115, ap_CS_fsm_state116, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state119, ap_CS_fsm_state120, ap_CS_fsm_state121, ap_CS_fsm_state136, ap_CS_fsm_state137, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state142, ap_CS_fsm_state143, x_hat_copy_1_stream_dout, x_hat_z_stream_dout)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_dout <= x_hat_z_stream_dout;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_dout <= x_hat_copy_1_stream_dout;
        else 
            grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_dout <= x_hat_z_stream_dout;
        end if; 
    end process;


    grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_empty_n_assign_proc : process(ap_CS_fsm_state114, ap_CS_fsm_state115, ap_CS_fsm_state116, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state119, ap_CS_fsm_state120, ap_CS_fsm_state121, ap_CS_fsm_state136, ap_CS_fsm_state137, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state142, ap_CS_fsm_state143, x_hat_copy_1_stream_empty_n, x_hat_z_stream_empty_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_empty_n <= x_hat_z_stream_empty_n;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_empty_n <= x_hat_copy_1_stream_empty_n;
        else 
            grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_empty_n <= x_hat_z_stream_empty_n;
        end if; 
    end process;


    grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_full_n_assign_proc : process(ap_CS_fsm_state122, ap_CS_fsm_state123, ap_CS_fsm_state124, ap_CS_fsm_state125, ap_CS_fsm_state126, ap_CS_fsm_state127, ap_CS_fsm_state128, ap_CS_fsm_state129, ap_CS_fsm_state144, ap_CS_fsm_state145, ap_CS_fsm_state146, ap_CS_fsm_state147, ap_CS_fsm_state148, ap_CS_fsm_state149, ap_CS_fsm_state150, ap_CS_fsm_state151, u_stream_full_n, x_hat_u_stream_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state150) or (ap_const_logic_1 = ap_CS_fsm_state149) or (ap_const_logic_1 = ap_CS_fsm_state148) or (ap_const_logic_1 = ap_CS_fsm_state147) or (ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145) or (ap_const_logic_1 = ap_CS_fsm_state144))) then 
            grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_full_n <= u_stream_full_n;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state122))) then 
            grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_full_n <= x_hat_u_stream_full_n;
        else 
            grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_full_n <= u_stream_full_n;
        end if; 
    end process;

    i_13_fu_987_p2 <= std_logic_vector(unsigned(i_8_fu_296) + unsigned(ap_const_lv32_1));
    icmp_ln1099_1_fu_907_p2 <= "1" when (trunc_ln1099_fu_880_p1 = ap_const_lv23_0) else "0";
    icmp_ln1099_2_fu_913_p2 <= "0" when (tmp_24_fu_887_p4 = ap_const_lv8_FF) else "1";
    icmp_ln1099_3_fu_919_p2 <= "1" when (trunc_ln1099_1_fu_897_p1 = ap_const_lv23_0) else "0";
    icmp_ln1099_4_fu_960_p2 <= "0" when (tmp_26_fu_929_p4 = ap_const_lv8_FF) else "1";
    icmp_ln1099_5_fu_966_p2 <= "1" when (trunc_ln1099_2_fu_939_p1 = ap_const_lv23_0) else "0";
    icmp_ln1099_6_fu_972_p2 <= "0" when (tmp_27_fu_946_p4 = ap_const_lv8_FF) else "1";
    icmp_ln1099_7_fu_978_p2 <= "1" when (trunc_ln1099_3_fu_956_p1 = ap_const_lv23_0) else "0";
    icmp_ln1099_fu_901_p2 <= "0" when (tmp_23_fu_870_p4 = ap_const_lv8_FF) else "1";
    icmp_ln224_1_fu_809_p2 <= "1" when (trunc_ln224_fu_781_p1 = ap_const_lv23_0) else "0";
    icmp_ln224_2_fu_821_p2 <= "0" when (tmp_21_fu_789_p4 = ap_const_lv8_FF) else "1";
    icmp_ln224_3_fu_827_p2 <= "1" when (trunc_ln224_1_fu_799_p1 = ap_const_lv23_0) else "0";
    icmp_ln224_fu_803_p2 <= "0" when (tmp_s_fu_771_p4 = ap_const_lv8_FF) else "1";
    icmp_ln967_fu_1055_p2 <= "1" when (signed(tmp_fu_1045_p4) < signed(ap_const_lv31_1)) else "0";

    mac_res_stream_din_assign_proc : process(grp_mac_fu_459_mac_res_stream_din, grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_din, grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_din, ap_CS_fsm_state92, ap_CS_fsm_state94, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            mac_res_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            mac_res_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            mac_res_stream_din <= grp_mac_fu_459_mac_res_stream_din;
        else 
            mac_res_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_din;
        end if; 
    end process;


    mac_res_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_read, grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_read, grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_mac_res_stream_read, ap_CS_fsm_state94, ap_CS_fsm_state97, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            mac_res_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_mac_res_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            mac_res_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            mac_res_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_read;
        else 
            mac_res_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    mac_res_stream_write_assign_proc : process(grp_mac_fu_459_mac_res_stream_write, grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_write, grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_write, ap_CS_fsm_state92, ap_CS_fsm_state94, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            mac_res_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_367_1_fu_477_mac_res_stream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            mac_res_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_1001_2_fu_471_mac_res_stream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            mac_res_stream_write <= grp_mac_fu_459_mac_res_stream_write;
        else 
            mac_res_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    mat_p_bram_address0_assign_proc : process(ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_address0, grp_mac_fu_459_mat_p_bram_address0, ap_CS_fsm_state92)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            mat_p_bram_address0 <= grp_mac_fu_459_mat_p_bram_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            mat_p_bram_address0 <= grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_address0;
        else 
            mat_p_bram_address0 <= "XXXXXX";
        end if; 
    end process;


    mat_p_bram_ce0_assign_proc : process(ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_ce0, grp_mac_fu_459_mat_p_bram_ce0, ap_CS_fsm_state92)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            mat_p_bram_ce0 <= grp_mac_fu_459_mat_p_bram_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            mat_p_bram_ce0 <= grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_ce0;
        else 
            mat_p_bram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_p_bram_we0_assign_proc : process(ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            mat_p_bram_we0 <= grp_krnl_bp_Pipeline_l_load_input_fu_389_mat_p_bram_we0;
        else 
            mat_p_bram_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond41_fu_1061_p2 <= (xor_ln1099_fu_1039_p2 and icmp_ln967_fu_1055_p2);
    or_ln1099_1_fu_997_p2 <= (icmp_ln1099_3_reg_1272 or icmp_ln1099_2_reg_1267);
    or_ln1099_2_fu_1013_p2 <= (icmp_ln1099_5_reg_1282 or icmp_ln1099_4_reg_1277);
    or_ln1099_3_fu_1017_p2 <= (icmp_ln1099_7_reg_1292 or icmp_ln1099_6_reg_1287);
    or_ln1099_fu_993_p2 <= (icmp_ln1099_reg_1257 or icmp_ln1099_1_reg_1262);
    or_ln224_1_fu_833_p2 <= (icmp_ln224_3_fu_827_p2 or icmp_ln224_2_fu_821_p2);
    or_ln224_fu_815_p2 <= (icmp_ln224_fu_803_p2 or icmp_ln224_1_fu_809_p2);

    q_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_q_stream_read, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            q_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_q_stream_read;
        else 
            q_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    q_stream_write_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_q_stream_write, ap_CS_fsm_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            q_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_q_stream_write;
        else 
            q_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln868_fu_851_p3 <= 
        reg_686 when (and_ln224_1_fu_845_p2(0) = '1') else 
        norm_x_reg_1202;
        sext_ln1127_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_1300),64));

        sext_ln19_1_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln19_1_reg_1149),64));

        sext_ln19_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_1143),64));


    stall_done_ext_assign_proc : process(ap_ext_blocking_n, ap_ext_blocking_n_reg)
    begin
        if (((ap_ext_blocking_n_reg = ap_const_logic_0) and (ap_ext_blocking_n = ap_const_logic_1))) then 
            stall_done_ext <= ap_const_logic_1;
        else 
            stall_done_ext <= ap_const_logic_0;
        end if; 
    end process;


    stall_done_int_assign_proc : process(ap_int_blocking_n, ap_int_blocking_n_reg)
    begin
        if (((ap_int_blocking_n_reg = ap_const_logic_0) and (ap_int_blocking_n = ap_const_logic_1))) then 
            stall_done_int <= ap_const_logic_1;
        else 
            stall_done_int <= ap_const_logic_0;
        end if; 
    end process;


    stall_done_str_assign_proc : process(ap_str_blocking_n, ap_str_blocking_n_reg)
    begin
        if (((ap_str_blocking_n_reg = ap_const_logic_0) and (ap_str_blocking_n = ap_const_logic_1))) then 
            stall_done_str <= ap_const_logic_1;
        else 
            stall_done_str <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_ext_assign_proc : process(ap_ext_blocking_n, ap_ext_blocking_n_reg)
    begin
        if (((ap_ext_blocking_n_reg = ap_const_logic_1) and (ap_ext_blocking_n = ap_const_logic_0))) then 
            stall_start_ext <= ap_const_logic_1;
        else 
            stall_start_ext <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_int_assign_proc : process(ap_int_blocking_n, ap_int_blocking_n_reg)
    begin
        if (((ap_int_blocking_n_reg = ap_const_logic_1) and (ap_int_blocking_n = ap_const_logic_0))) then 
            stall_start_int <= ap_const_logic_1;
        else 
            stall_start_int <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_str_assign_proc : process(ap_str_blocking_n, ap_str_blocking_n_reg)
    begin
        if (((ap_str_blocking_n_reg = ap_const_logic_1) and (ap_str_blocking_n = ap_const_logic_0))) then 
            stall_start_str <= ap_const_logic_1;
        else 
            stall_start_str <= ap_const_logic_0;
        end if; 
    end process;

    sub1_fu_752_p1 <= sub1_neg_fu_746_p2;
    sub1_neg_fu_746_p2 <= (sub1_to_int_fu_743_p1 xor ap_const_lv32_80000000);
    sub1_to_int_fu_743_p1 <= rho;
    tmp_21_fu_789_p4 <= bitcast_ln224_1_fu_785_p1(30 downto 23);
    tmp_23_fu_870_p4 <= bitcast_ln1099_fu_866_p1(30 downto 23);
    tmp_24_fu_887_p4 <= bitcast_ln1099_1_fu_884_p1(30 downto 23);
    tmp_26_fu_929_p4 <= bitcast_ln1099_2_fu_925_p1(30 downto 23);
    tmp_27_fu_946_p4 <= bitcast_ln1099_3_fu_943_p1(30 downto 23);
    tmp_fu_1045_p4 <= i_13_fu_987_p2(31 downto 1);
    tmp_s_fu_771_p4 <= bitcast_ln224_fu_768_p1(30 downto 23);
    trunc_ln1099_1_fu_897_p1 <= bitcast_ln1099_1_fu_884_p1(23 - 1 downto 0);
    trunc_ln1099_2_fu_939_p1 <= bitcast_ln1099_2_fu_925_p1(23 - 1 downto 0);
    trunc_ln1099_3_fu_956_p1 <= bitcast_ln1099_3_fu_943_p1(23 - 1 downto 0);
    trunc_ln1099_fu_880_p1 <= bitcast_ln1099_fu_866_p1(23 - 1 downto 0);
    trunc_ln224_1_fu_799_p1 <= bitcast_ln224_1_fu_785_p1(23 - 1 downto 0);
    trunc_ln224_fu_781_p1 <= bitcast_ln224_fu_768_p1(23 - 1 downto 0);

    u_copy_1_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub_fu_449_u_copy_1_stream_read, ap_CS_fsm_state90)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            u_copy_1_stream_read <= grp_krnl_bp_Pipeline_l_vec_sub_fu_449_u_copy_1_stream_read;
        else 
            u_copy_1_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    u_copy_1_stream_write_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_write, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            u_copy_1_stream_write <= grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_write;
        else 
            u_copy_1_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    u_copy_2_stream_read_assign_proc : process(grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_read, ap_CS_fsm_state114, ap_CS_fsm_state115, ap_CS_fsm_state116, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state119, ap_CS_fsm_state120, ap_CS_fsm_state121)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            u_copy_2_stream_read <= grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_read;
        else 
            u_copy_2_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    u_copy_2_stream_write_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_write, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            u_copy_2_stream_write <= grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_write;
        else 
            u_copy_2_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    u_copy_3_stream_read_assign_proc : process(grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_read, ap_CS_fsm_state136, ap_CS_fsm_state137, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state142, ap_CS_fsm_state143)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            u_copy_3_stream_read <= grp_vec_add_fu_527_krnl_bp_u_copy_2_stream_read;
        else 
            u_copy_3_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    u_copy_3_stream_write_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_write, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            u_copy_3_stream_write <= grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_write;
        else 
            u_copy_3_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    u_stream_din_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_u_stream_din, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_din, ap_CS_fsm_state144, ap_CS_fsm_state145, ap_CS_fsm_state146, ap_CS_fsm_state147, ap_CS_fsm_state148, ap_CS_fsm_state149, ap_CS_fsm_state150, ap_CS_fsm_state151, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_din, ap_CS_fsm_state76, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            u_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_din;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state150) or (ap_const_logic_1 = ap_CS_fsm_state149) or (ap_const_logic_1 = ap_CS_fsm_state148) or (ap_const_logic_1 = ap_CS_fsm_state147) or (ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145) or (ap_const_logic_1 = ap_CS_fsm_state144))) then 
            u_stream_din <= grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            u_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_u_stream_din;
        else 
            u_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_din;
        end if; 
    end process;


    u_stream_read_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_stream_read, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_read, grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_u_stream_read, ap_CS_fsm_state85, ap_CS_fsm_state153, ap_CS_fsm_state188)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state188)) then 
            u_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_843_1_fu_601_u_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            u_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            u_stream_read <= grp_replicate_stream_fu_423_krnl_bp_u_stream_read;
        else 
            u_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    u_stream_write_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_u_stream_write, grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_write, ap_CS_fsm_state144, ap_CS_fsm_state145, ap_CS_fsm_state146, ap_CS_fsm_state147, ap_CS_fsm_state148, ap_CS_fsm_state149, ap_CS_fsm_state150, ap_CS_fsm_state151, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_write, ap_CS_fsm_state76, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            u_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_u_stream_write;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state150) or (ap_const_logic_1 = ap_CS_fsm_state149) or (ap_const_logic_1 = ap_CS_fsm_state148) or (ap_const_logic_1 = ap_CS_fsm_state147) or (ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145) or (ap_const_logic_1 = ap_CS_fsm_state144))) then 
            u_stream_write <= grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            u_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_677_1_fu_405_u_stream_write;
        else 
            u_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    vec_q_bram_address0_assign_proc : process(ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_address0, grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_vec_q_bram_address0, ap_CS_fsm_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            vec_q_bram_address0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_vec_q_bram_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            vec_q_bram_address0 <= grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_address0;
        else 
            vec_q_bram_address0 <= "XXX";
        end if; 
    end process;


    vec_q_bram_ce0_assign_proc : process(ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_ce0, grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_vec_q_bram_ce0, ap_CS_fsm_state100)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            vec_q_bram_ce0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_380_2_fu_483_vec_q_bram_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            vec_q_bram_ce0 <= grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_ce0;
        else 
            vec_q_bram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vec_q_bram_we0_assign_proc : process(ap_CS_fsm_state74, grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            vec_q_bram_we0 <= grp_krnl_bp_Pipeline_l_load_input1_fu_398_vec_q_bram_we0;
        else 
            vec_q_bram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    x_bram_address0_assign_proc : process(ap_CS_fsm_state194, grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_address0, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_x_bram_address0, grp_krnl_bp_Pipeline_l_write_mem_fu_619_x_bram_address0, ap_CS_fsm_state113, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state194)) then 
            x_bram_address0 <= grp_krnl_bp_Pipeline_l_write_mem_fu_619_x_bram_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            x_bram_address0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_x_bram_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            x_bram_address0 <= grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_address0;
        else 
            x_bram_address0 <= "XXX";
        end if; 
    end process;


    x_bram_ce0_assign_proc : process(ap_CS_fsm_state194, grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_ce0, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_x_bram_ce0, grp_krnl_bp_Pipeline_l_write_mem_fu_619_x_bram_ce0, ap_CS_fsm_state113, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state194)) then 
            x_bram_ce0 <= grp_krnl_bp_Pipeline_l_write_mem_fu_619_x_bram_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            x_bram_ce0 <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_x_bram_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            x_bram_ce0 <= grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_ce0;
        else 
            x_bram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_bram_we0_assign_proc : process(grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_we0, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            x_bram_we0 <= grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_bram_we0;
        else 
            x_bram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_copy_1_stream_read_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_read, ap_CS_fsm_state114, ap_CS_fsm_state115, ap_CS_fsm_state116, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state119, ap_CS_fsm_state120, ap_CS_fsm_state121)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state114))) then 
            x_hat_copy_1_stream_read <= grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_read;
        else 
            x_hat_copy_1_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_copy_1_stream_write_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_write, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            x_hat_copy_1_stream_write <= grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_write;
        else 
            x_hat_copy_1_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_copy_2_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_copy_2_stream_read, ap_CS_fsm_state135)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
            x_hat_copy_2_stream_read <= grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_copy_2_stream_read;
        else 
            x_hat_copy_2_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_copy_2_stream_write_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_write, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            x_hat_copy_2_stream_write <= grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_write;
        else 
            x_hat_copy_2_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_copy_3_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_hat_copy_3_stream_read, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            x_hat_copy_3_stream_read <= grp_krnl_bp_Pipeline_l_write_bram_fu_519_x_hat_copy_3_stream_read;
        else 
            x_hat_copy_3_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_copy_3_stream_write_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_write, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            x_hat_copy_3_stream_write <= grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_write;
        else 
            x_hat_copy_3_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_stream_read_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_stream_read, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            x_hat_stream_read <= grp_replicate_stream_fu_423_krnl_bp_u_stream_read;
        else 
            x_hat_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_stream_write_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_hat_stream_write, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            x_hat_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_hat_stream_write;
        else 
            x_hat_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_u_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_l_shrinkage_fu_540_x_hat_u_stream_read, ap_CS_fsm_state131)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            x_hat_u_stream_read <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_x_hat_u_stream_read;
        else 
            x_hat_u_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_u_stream_write_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_write, ap_CS_fsm_state122, ap_CS_fsm_state123, ap_CS_fsm_state124, ap_CS_fsm_state125, ap_CS_fsm_state126, ap_CS_fsm_state127, ap_CS_fsm_state128, ap_CS_fsm_state129)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state122))) then 
            x_hat_u_stream_write <= grp_vec_add_fu_527_krnl_bp_x_hat_u_stream_write;
        else 
            x_hat_u_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_z_stream_read_assign_proc : process(grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_read, ap_CS_fsm_state136, ap_CS_fsm_state137, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state142, ap_CS_fsm_state143)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            x_hat_z_stream_read <= grp_vec_add_fu_527_krnl_bp_x_hat_copy_1_stream_read;
        else 
            x_hat_z_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    x_hat_z_stream_write_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_z_stream_write, ap_CS_fsm_state135)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
            x_hat_z_stream_write <= grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_x_hat_z_stream_write;
        else 
            x_hat_z_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    x_stream_din_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_x_stream_din, grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_din, ap_CS_fsm_state103, ap_CS_fsm_state106)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            x_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            x_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_x_stream_din;
        else 
            x_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_din;
        end if; 
    end process;


    x_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_read, grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_stream_read, ap_CS_fsm_state106, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            x_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_x_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            x_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_read;
        else 
            x_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    x_stream_write_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_x_stream_write, grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_write, ap_CS_fsm_state103, ap_CS_fsm_state106)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            x_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_514_1_fu_501_x_stream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            x_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_386_3_fu_491_x_stream_write;
        else 
            x_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln1099_fu_1039_p2 <= (ap_const_lv1_1 xor and_ln1099_4_fu_1033_p2);

    z_copy_1_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_z_copy_1_stream_read, ap_CS_fsm_state135)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
            z_copy_1_stream_read <= grp_krnl_bp_Pipeline_l_vec_sub4_fu_549_z_copy_1_stream_read;
        else 
            z_copy_1_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    z_copy_1_stream_write_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_write, ap_CS_fsm_state133)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            z_copy_1_stream_write <= grp_replicate_stream_fu_423_krnl_bp_u_copy_2_stream_write;
        else 
            z_copy_1_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    z_copy_2_stream_din_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_z_copy_2_stream_din, grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_din, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_din, ap_CS_fsm_state79, ap_CS_fsm_state133, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            z_copy_2_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            z_copy_2_stream_din <= grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            z_copy_2_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_z_copy_2_stream_din;
        else 
            z_copy_2_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_din;
        end if; 
    end process;


    z_copy_2_stream_read_assign_proc : process(ap_CS_fsm_state194, grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_copy_2_stream_read, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_read, grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_z_copy_2_stream_read, ap_CS_fsm_state90, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state194)) then 
            z_copy_2_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_843_16_fu_613_z_copy_2_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            z_copy_2_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            z_copy_2_stream_read <= grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_copy_2_stream_read;
        else 
            z_copy_2_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    z_copy_2_stream_write_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_z_copy_2_stream_write, grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_write, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_write, ap_CS_fsm_state79, ap_CS_fsm_state133, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            z_copy_2_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_copy_2_stream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            z_copy_2_stream_write <= grp_replicate_stream_fu_423_krnl_bp_u_copy_3_stream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            z_copy_2_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_677_12_fu_411_z_copy_2_stream_write;
        else 
            z_copy_2_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    z_old_stream_din_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_z_old_stream_din, grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_din, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_din, ap_CS_fsm_state82, ap_CS_fsm_state133, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            z_old_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            z_old_stream_din <= grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            z_old_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_z_old_stream_din;
        else 
            z_old_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_din;
        end if; 
    end process;


    z_old_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_z_old_stream_read, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_read, grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_z_old_stream_read, ap_CS_fsm_state109, ap_CS_fsm_state153, ap_CS_fsm_state191)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state191)) then 
            z_old_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_843_15_fu_607_z_old_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            z_old_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            z_old_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_526_2_fu_507_z_old_stream_read;
        else 
            z_old_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    z_old_stream_write_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_z_old_stream_write, grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_write, grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_write, ap_CS_fsm_state82, ap_CS_fsm_state133, ap_CS_fsm_state153)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state153)) then 
            z_old_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_1045_3_fu_559_z_old_stream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            z_old_stream_write <= grp_replicate_stream_fu_423_krnl_bp_u_copy_1_stream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            z_old_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_677_13_fu_417_z_old_stream_write;
        else 
            z_old_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    z_stream_read_assign_proc : process(grp_replicate_stream_fu_423_krnl_bp_u_stream_read, ap_CS_fsm_state133)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            z_stream_read <= grp_replicate_stream_fu_423_krnl_bp_u_stream_read;
        else 
            z_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    z_stream_write_assign_proc : process(grp_krnl_bp_Pipeline_l_shrinkage_fu_540_z_stream_write, ap_CS_fsm_state131)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            z_stream_write <= grp_krnl_bp_Pipeline_l_shrinkage_fu_540_z_stream_write;
        else 
            z_stream_write <= ap_const_logic_0;
        end if; 
    end process;


    z_u_stream_din_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_din, grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_u_stream_din, ap_CS_fsm_state87, ap_CS_fsm_state90)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            z_u_stream_din <= grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_u_stream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            z_u_stream_din <= grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_din;
        else 
            z_u_stream_din <= grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_u_stream_din;
        end if; 
    end process;


    z_u_stream_read_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_read, grp_mac_fu_459_z_u_stream_read, ap_CS_fsm_state87, ap_CS_fsm_state92)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            z_u_stream_read <= grp_mac_fu_459_z_u_stream_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            z_u_stream_read <= grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_read;
        else 
            z_u_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    z_u_stream_write_assign_proc : process(grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_write, grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_u_stream_write, ap_CS_fsm_state87, ap_CS_fsm_state90)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            z_u_stream_write <= grp_krnl_bp_Pipeline_l_vec_sub_fu_449_z_u_stream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            z_u_stream_write <= grp_krnl_bp_Pipeline_VITIS_LOOP_980_1_fu_443_z_u_stream_write;
        else 
            z_u_stream_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
