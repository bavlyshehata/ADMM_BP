// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_606_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        chunk,
        z_old_15_address0,
        z_old_15_ce0,
        z_old_15_we0,
        z_old_15_d0,
        z_old_14_address0,
        z_old_14_ce0,
        z_old_14_we0,
        z_old_14_d0,
        z_old_13_address0,
        z_old_13_ce0,
        z_old_13_we0,
        z_old_13_d0,
        z_old_12_address0,
        z_old_12_ce0,
        z_old_12_we0,
        z_old_12_d0,
        z_old_11_address0,
        z_old_11_ce0,
        z_old_11_we0,
        z_old_11_d0,
        z_old_10_address0,
        z_old_10_ce0,
        z_old_10_we0,
        z_old_10_d0,
        z_old_9_address0,
        z_old_9_ce0,
        z_old_9_we0,
        z_old_9_d0,
        z_old_8_address0,
        z_old_8_ce0,
        z_old_8_we0,
        z_old_8_d0,
        z_old_7_address0,
        z_old_7_ce0,
        z_old_7_we0,
        z_old_7_d0,
        z_old_6_address0,
        z_old_6_ce0,
        z_old_6_we0,
        z_old_6_d0,
        z_old_5_address0,
        z_old_5_ce0,
        z_old_5_we0,
        z_old_5_d0,
        z_old_4_address0,
        z_old_4_ce0,
        z_old_4_we0,
        z_old_4_d0,
        z_old_3_address0,
        z_old_3_ce0,
        z_old_3_we0,
        z_old_3_d0,
        z_old_2_address0,
        z_old_2_ce0,
        z_old_2_we0,
        z_old_2_d0,
        z_old_1_address0,
        z_old_1_ce0,
        z_old_1_we0,
        z_old_1_d0,
        z_old_address0,
        z_old_ce0,
        z_old_we0,
        z_old_d0,
        u_15_address0,
        u_15_ce0,
        u_15_we0,
        u_15_d0,
        u_14_address0,
        u_14_ce0,
        u_14_we0,
        u_14_d0,
        u_13_address0,
        u_13_ce0,
        u_13_we0,
        u_13_d0,
        u_12_address0,
        u_12_ce0,
        u_12_we0,
        u_12_d0,
        u_11_address0,
        u_11_ce0,
        u_11_we0,
        u_11_d0,
        u_10_address0,
        u_10_ce0,
        u_10_we0,
        u_10_d0,
        u_9_address0,
        u_9_ce0,
        u_9_we0,
        u_9_d0,
        u_8_address0,
        u_8_ce0,
        u_8_we0,
        u_8_d0,
        u_7_address0,
        u_7_ce0,
        u_7_we0,
        u_7_d0,
        u_6_address0,
        u_6_ce0,
        u_6_we0,
        u_6_d0,
        u_5_address0,
        u_5_ce0,
        u_5_we0,
        u_5_d0,
        u_4_address0,
        u_4_ce0,
        u_4_we0,
        u_4_d0,
        u_3_address0,
        u_3_ce0,
        u_3_we0,
        u_3_d0,
        u_2_address0,
        u_2_ce0,
        u_2_we0,
        u_2_d0,
        u_1_address0,
        u_1_ce0,
        u_1_we0,
        u_1_d0,
        u_address0,
        u_ce0,
        u_we0,
        u_d0,
        z_15_address0,
        z_15_ce0,
        z_15_we0,
        z_15_d0,
        z_14_address0,
        z_14_ce0,
        z_14_we0,
        z_14_d0,
        z_13_address0,
        z_13_ce0,
        z_13_we0,
        z_13_d0,
        z_12_address0,
        z_12_ce0,
        z_12_we0,
        z_12_d0,
        z_11_address0,
        z_11_ce0,
        z_11_we0,
        z_11_d0,
        z_10_address0,
        z_10_ce0,
        z_10_we0,
        z_10_d0,
        z_9_address0,
        z_9_ce0,
        z_9_we0,
        z_9_d0,
        z_8_address0,
        z_8_ce0,
        z_8_we0,
        z_8_d0,
        z_7_address0,
        z_7_ce0,
        z_7_we0,
        z_7_d0,
        z_6_address0,
        z_6_ce0,
        z_6_we0,
        z_6_d0,
        z_5_address0,
        z_5_ce0,
        z_5_we0,
        z_5_d0,
        z_4_address0,
        z_4_ce0,
        z_4_we0,
        z_4_d0,
        z_3_address0,
        z_3_ce0,
        z_3_we0,
        z_3_d0,
        z_2_address0,
        z_2_ce0,
        z_2_we0,
        z_2_d0,
        z_1_address0,
        z_1_ce0,
        z_1_we0,
        z_1_d0,
        z_address0,
        z_ce0,
        z_we0,
        z_d0,
        x_15_address0,
        x_15_ce0,
        x_15_we0,
        x_15_d0,
        x_14_address0,
        x_14_ce0,
        x_14_we0,
        x_14_d0,
        x_13_address0,
        x_13_ce0,
        x_13_we0,
        x_13_d0,
        x_12_address0,
        x_12_ce0,
        x_12_we0,
        x_12_d0,
        x_11_address0,
        x_11_ce0,
        x_11_we0,
        x_11_d0,
        x_10_address0,
        x_10_ce0,
        x_10_we0,
        x_10_d0,
        x_9_address0,
        x_9_ce0,
        x_9_we0,
        x_9_d0,
        x_8_address0,
        x_8_ce0,
        x_8_we0,
        x_8_d0,
        x_7_address0,
        x_7_ce0,
        x_7_we0,
        x_7_d0,
        x_6_address0,
        x_6_ce0,
        x_6_we0,
        x_6_d0,
        x_5_address0,
        x_5_ce0,
        x_5_we0,
        x_5_d0,
        x_4_address0,
        x_4_ce0,
        x_4_we0,
        x_4_d0,
        x_3_address0,
        x_3_ce0,
        x_3_we0,
        x_3_d0,
        x_2_address0,
        x_2_ce0,
        x_2_we0,
        x_2_d0,
        x_1_address0,
        x_1_ce0,
        x_1_we0,
        x_1_d0,
        x_address0,
        x_ce0,
        x_we0,
        x_d0
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] chunk;
output  [2:0] z_old_15_address0;
output   z_old_15_ce0;
output   z_old_15_we0;
output  [31:0] z_old_15_d0;
output  [2:0] z_old_14_address0;
output   z_old_14_ce0;
output   z_old_14_we0;
output  [31:0] z_old_14_d0;
output  [2:0] z_old_13_address0;
output   z_old_13_ce0;
output   z_old_13_we0;
output  [31:0] z_old_13_d0;
output  [2:0] z_old_12_address0;
output   z_old_12_ce0;
output   z_old_12_we0;
output  [31:0] z_old_12_d0;
output  [2:0] z_old_11_address0;
output   z_old_11_ce0;
output   z_old_11_we0;
output  [31:0] z_old_11_d0;
output  [2:0] z_old_10_address0;
output   z_old_10_ce0;
output   z_old_10_we0;
output  [31:0] z_old_10_d0;
output  [2:0] z_old_9_address0;
output   z_old_9_ce0;
output   z_old_9_we0;
output  [31:0] z_old_9_d0;
output  [2:0] z_old_8_address0;
output   z_old_8_ce0;
output   z_old_8_we0;
output  [31:0] z_old_8_d0;
output  [2:0] z_old_7_address0;
output   z_old_7_ce0;
output   z_old_7_we0;
output  [31:0] z_old_7_d0;
output  [2:0] z_old_6_address0;
output   z_old_6_ce0;
output   z_old_6_we0;
output  [31:0] z_old_6_d0;
output  [2:0] z_old_5_address0;
output   z_old_5_ce0;
output   z_old_5_we0;
output  [31:0] z_old_5_d0;
output  [2:0] z_old_4_address0;
output   z_old_4_ce0;
output   z_old_4_we0;
output  [31:0] z_old_4_d0;
output  [2:0] z_old_3_address0;
output   z_old_3_ce0;
output   z_old_3_we0;
output  [31:0] z_old_3_d0;
output  [2:0] z_old_2_address0;
output   z_old_2_ce0;
output   z_old_2_we0;
output  [31:0] z_old_2_d0;
output  [2:0] z_old_1_address0;
output   z_old_1_ce0;
output   z_old_1_we0;
output  [31:0] z_old_1_d0;
output  [2:0] z_old_address0;
output   z_old_ce0;
output   z_old_we0;
output  [31:0] z_old_d0;
output  [2:0] u_15_address0;
output   u_15_ce0;
output   u_15_we0;
output  [31:0] u_15_d0;
output  [2:0] u_14_address0;
output   u_14_ce0;
output   u_14_we0;
output  [31:0] u_14_d0;
output  [2:0] u_13_address0;
output   u_13_ce0;
output   u_13_we0;
output  [31:0] u_13_d0;
output  [2:0] u_12_address0;
output   u_12_ce0;
output   u_12_we0;
output  [31:0] u_12_d0;
output  [2:0] u_11_address0;
output   u_11_ce0;
output   u_11_we0;
output  [31:0] u_11_d0;
output  [2:0] u_10_address0;
output   u_10_ce0;
output   u_10_we0;
output  [31:0] u_10_d0;
output  [2:0] u_9_address0;
output   u_9_ce0;
output   u_9_we0;
output  [31:0] u_9_d0;
output  [2:0] u_8_address0;
output   u_8_ce0;
output   u_8_we0;
output  [31:0] u_8_d0;
output  [2:0] u_7_address0;
output   u_7_ce0;
output   u_7_we0;
output  [31:0] u_7_d0;
output  [2:0] u_6_address0;
output   u_6_ce0;
output   u_6_we0;
output  [31:0] u_6_d0;
output  [2:0] u_5_address0;
output   u_5_ce0;
output   u_5_we0;
output  [31:0] u_5_d0;
output  [2:0] u_4_address0;
output   u_4_ce0;
output   u_4_we0;
output  [31:0] u_4_d0;
output  [2:0] u_3_address0;
output   u_3_ce0;
output   u_3_we0;
output  [31:0] u_3_d0;
output  [2:0] u_2_address0;
output   u_2_ce0;
output   u_2_we0;
output  [31:0] u_2_d0;
output  [2:0] u_1_address0;
output   u_1_ce0;
output   u_1_we0;
output  [31:0] u_1_d0;
output  [2:0] u_address0;
output   u_ce0;
output   u_we0;
output  [31:0] u_d0;
output  [2:0] z_15_address0;
output   z_15_ce0;
output   z_15_we0;
output  [31:0] z_15_d0;
output  [2:0] z_14_address0;
output   z_14_ce0;
output   z_14_we0;
output  [31:0] z_14_d0;
output  [2:0] z_13_address0;
output   z_13_ce0;
output   z_13_we0;
output  [31:0] z_13_d0;
output  [2:0] z_12_address0;
output   z_12_ce0;
output   z_12_we0;
output  [31:0] z_12_d0;
output  [2:0] z_11_address0;
output   z_11_ce0;
output   z_11_we0;
output  [31:0] z_11_d0;
output  [2:0] z_10_address0;
output   z_10_ce0;
output   z_10_we0;
output  [31:0] z_10_d0;
output  [2:0] z_9_address0;
output   z_9_ce0;
output   z_9_we0;
output  [31:0] z_9_d0;
output  [2:0] z_8_address0;
output   z_8_ce0;
output   z_8_we0;
output  [31:0] z_8_d0;
output  [2:0] z_7_address0;
output   z_7_ce0;
output   z_7_we0;
output  [31:0] z_7_d0;
output  [2:0] z_6_address0;
output   z_6_ce0;
output   z_6_we0;
output  [31:0] z_6_d0;
output  [2:0] z_5_address0;
output   z_5_ce0;
output   z_5_we0;
output  [31:0] z_5_d0;
output  [2:0] z_4_address0;
output   z_4_ce0;
output   z_4_we0;
output  [31:0] z_4_d0;
output  [2:0] z_3_address0;
output   z_3_ce0;
output   z_3_we0;
output  [31:0] z_3_d0;
output  [2:0] z_2_address0;
output   z_2_ce0;
output   z_2_we0;
output  [31:0] z_2_d0;
output  [2:0] z_1_address0;
output   z_1_ce0;
output   z_1_we0;
output  [31:0] z_1_d0;
output  [2:0] z_address0;
output   z_ce0;
output   z_we0;
output  [31:0] z_d0;
output  [2:0] x_15_address0;
output   x_15_ce0;
output   x_15_we0;
output  [31:0] x_15_d0;
output  [2:0] x_14_address0;
output   x_14_ce0;
output   x_14_we0;
output  [31:0] x_14_d0;
output  [2:0] x_13_address0;
output   x_13_ce0;
output   x_13_we0;
output  [31:0] x_13_d0;
output  [2:0] x_12_address0;
output   x_12_ce0;
output   x_12_we0;
output  [31:0] x_12_d0;
output  [2:0] x_11_address0;
output   x_11_ce0;
output   x_11_we0;
output  [31:0] x_11_d0;
output  [2:0] x_10_address0;
output   x_10_ce0;
output   x_10_we0;
output  [31:0] x_10_d0;
output  [2:0] x_9_address0;
output   x_9_ce0;
output   x_9_we0;
output  [31:0] x_9_d0;
output  [2:0] x_8_address0;
output   x_8_ce0;
output   x_8_we0;
output  [31:0] x_8_d0;
output  [2:0] x_7_address0;
output   x_7_ce0;
output   x_7_we0;
output  [31:0] x_7_d0;
output  [2:0] x_6_address0;
output   x_6_ce0;
output   x_6_we0;
output  [31:0] x_6_d0;
output  [2:0] x_5_address0;
output   x_5_ce0;
output   x_5_we0;
output  [31:0] x_5_d0;
output  [2:0] x_4_address0;
output   x_4_ce0;
output   x_4_we0;
output  [31:0] x_4_d0;
output  [2:0] x_3_address0;
output   x_3_ce0;
output   x_3_we0;
output  [31:0] x_3_d0;
output  [2:0] x_2_address0;
output   x_2_ce0;
output   x_2_we0;
output  [31:0] x_2_d0;
output  [2:0] x_1_address0;
output   x_1_ce0;
output   x_1_we0;
output  [31:0] x_1_d0;
output  [2:0] x_address0;
output   x_ce0;
output   x_we0;
output  [31:0] x_d0;

reg ap_idle;
reg z_old_15_ce0;
reg z_old_15_we0;
reg z_old_14_ce0;
reg z_old_14_we0;
reg z_old_13_ce0;
reg z_old_13_we0;
reg z_old_12_ce0;
reg z_old_12_we0;
reg z_old_11_ce0;
reg z_old_11_we0;
reg z_old_10_ce0;
reg z_old_10_we0;
reg z_old_9_ce0;
reg z_old_9_we0;
reg z_old_8_ce0;
reg z_old_8_we0;
reg z_old_7_ce0;
reg z_old_7_we0;
reg z_old_6_ce0;
reg z_old_6_we0;
reg z_old_5_ce0;
reg z_old_5_we0;
reg z_old_4_ce0;
reg z_old_4_we0;
reg z_old_3_ce0;
reg z_old_3_we0;
reg z_old_2_ce0;
reg z_old_2_we0;
reg z_old_1_ce0;
reg z_old_1_we0;
reg z_old_ce0;
reg z_old_we0;
reg u_15_ce0;
reg u_15_we0;
reg u_14_ce0;
reg u_14_we0;
reg u_13_ce0;
reg u_13_we0;
reg u_12_ce0;
reg u_12_we0;
reg u_11_ce0;
reg u_11_we0;
reg u_10_ce0;
reg u_10_we0;
reg u_9_ce0;
reg u_9_we0;
reg u_8_ce0;
reg u_8_we0;
reg u_7_ce0;
reg u_7_we0;
reg u_6_ce0;
reg u_6_we0;
reg u_5_ce0;
reg u_5_we0;
reg u_4_ce0;
reg u_4_we0;
reg u_3_ce0;
reg u_3_we0;
reg u_2_ce0;
reg u_2_we0;
reg u_1_ce0;
reg u_1_we0;
reg u_ce0;
reg u_we0;
reg z_15_ce0;
reg z_15_we0;
reg z_14_ce0;
reg z_14_we0;
reg z_13_ce0;
reg z_13_we0;
reg z_12_ce0;
reg z_12_we0;
reg z_11_ce0;
reg z_11_we0;
reg z_10_ce0;
reg z_10_we0;
reg z_9_ce0;
reg z_9_we0;
reg z_8_ce0;
reg z_8_we0;
reg z_7_ce0;
reg z_7_we0;
reg z_6_ce0;
reg z_6_we0;
reg z_5_ce0;
reg z_5_we0;
reg z_4_ce0;
reg z_4_we0;
reg z_3_ce0;
reg z_3_we0;
reg z_2_ce0;
reg z_2_we0;
reg z_1_ce0;
reg z_1_we0;
reg z_ce0;
reg z_we0;
reg x_15_ce0;
reg x_15_we0;
reg x_14_ce0;
reg x_14_we0;
reg x_13_ce0;
reg x_13_we0;
reg x_12_ce0;
reg x_12_we0;
reg x_11_ce0;
reg x_11_we0;
reg x_10_ce0;
reg x_10_we0;
reg x_9_ce0;
reg x_9_we0;
reg x_8_ce0;
reg x_8_we0;
reg x_7_ce0;
reg x_7_we0;
reg x_6_ce0;
reg x_6_we0;
reg x_5_ce0;
reg x_5_we0;
reg x_4_ce0;
reg x_4_we0;
reg x_3_ce0;
reg x_3_we0;
reg x_2_ce0;
reg x_2_we0;
reg x_1_ce0;
reg x_1_we0;
reg x_ce0;
reg x_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln606_fu_1106_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln606_1_fu_1132_p1;
reg   [30:0] i_fu_188;
wire   [30:0] add_ln606_fu_1112_p2;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_i_6;
wire   [3:0] trunc_ln606_fu_1118_p1;
wire   [31:0] zext_ln606_fu_1102_p1;
wire   [2:0] lshr_ln_fu_1122_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 i_fu_188 = 31'd0;
#0 ap_done_reg = 1'b0;
end

krnl_bp_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln606_fu_1106_p2 == 1'd1)) begin
            i_fu_188 <= add_ln606_fu_1112_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_188 <= 31'd0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln606_fu_1106_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_6 = 31'd0;
    end else begin
        ap_sig_allocacmp_i_6 = i_fu_188;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_10_ce0 = 1'b1;
    end else begin
        u_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd10) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_10_we0 = 1'b1;
    end else begin
        u_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_11_ce0 = 1'b1;
    end else begin
        u_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd11) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_11_we0 = 1'b1;
    end else begin
        u_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_12_ce0 = 1'b1;
    end else begin
        u_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd12) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_12_we0 = 1'b1;
    end else begin
        u_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_13_ce0 = 1'b1;
    end else begin
        u_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd13) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_13_we0 = 1'b1;
    end else begin
        u_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_14_ce0 = 1'b1;
    end else begin
        u_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd14) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_14_we0 = 1'b1;
    end else begin
        u_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_15_ce0 = 1'b1;
    end else begin
        u_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd15) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_15_we0 = 1'b1;
    end else begin
        u_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_1_ce0 = 1'b1;
    end else begin
        u_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd1) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_1_we0 = 1'b1;
    end else begin
        u_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_2_ce0 = 1'b1;
    end else begin
        u_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd2) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_2_we0 = 1'b1;
    end else begin
        u_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_3_ce0 = 1'b1;
    end else begin
        u_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd3) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_3_we0 = 1'b1;
    end else begin
        u_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_4_ce0 = 1'b1;
    end else begin
        u_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd4) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_4_we0 = 1'b1;
    end else begin
        u_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_5_ce0 = 1'b1;
    end else begin
        u_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd5) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_5_we0 = 1'b1;
    end else begin
        u_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_6_ce0 = 1'b1;
    end else begin
        u_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd6) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_6_we0 = 1'b1;
    end else begin
        u_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_7_ce0 = 1'b1;
    end else begin
        u_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd7) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_7_we0 = 1'b1;
    end else begin
        u_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_8_ce0 = 1'b1;
    end else begin
        u_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd8) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_8_we0 = 1'b1;
    end else begin
        u_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_9_ce0 = 1'b1;
    end else begin
        u_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd9) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_9_we0 = 1'b1;
    end else begin
        u_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_ce0 = 1'b1;
    end else begin
        u_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd0) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        u_we0 = 1'b1;
    end else begin
        u_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_10_ce0 = 1'b1;
    end else begin
        x_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd10) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_10_we0 = 1'b1;
    end else begin
        x_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_11_ce0 = 1'b1;
    end else begin
        x_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd11) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_11_we0 = 1'b1;
    end else begin
        x_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_12_ce0 = 1'b1;
    end else begin
        x_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd12) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_12_we0 = 1'b1;
    end else begin
        x_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_13_ce0 = 1'b1;
    end else begin
        x_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd13) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_13_we0 = 1'b1;
    end else begin
        x_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_14_ce0 = 1'b1;
    end else begin
        x_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd14) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_14_we0 = 1'b1;
    end else begin
        x_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_15_ce0 = 1'b1;
    end else begin
        x_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd15) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_15_we0 = 1'b1;
    end else begin
        x_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_1_ce0 = 1'b1;
    end else begin
        x_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd1) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_1_we0 = 1'b1;
    end else begin
        x_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_2_ce0 = 1'b1;
    end else begin
        x_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd2) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_2_we0 = 1'b1;
    end else begin
        x_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_3_ce0 = 1'b1;
    end else begin
        x_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd3) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_3_we0 = 1'b1;
    end else begin
        x_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_4_ce0 = 1'b1;
    end else begin
        x_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd4) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_4_we0 = 1'b1;
    end else begin
        x_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_5_ce0 = 1'b1;
    end else begin
        x_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd5) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_5_we0 = 1'b1;
    end else begin
        x_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_6_ce0 = 1'b1;
    end else begin
        x_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd6) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_6_we0 = 1'b1;
    end else begin
        x_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_7_ce0 = 1'b1;
    end else begin
        x_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd7) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_7_we0 = 1'b1;
    end else begin
        x_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_8_ce0 = 1'b1;
    end else begin
        x_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd8) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_8_we0 = 1'b1;
    end else begin
        x_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_9_ce0 = 1'b1;
    end else begin
        x_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd9) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_9_we0 = 1'b1;
    end else begin
        x_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_ce0 = 1'b1;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd0) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_we0 = 1'b1;
    end else begin
        x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_10_ce0 = 1'b1;
    end else begin
        z_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd10) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_10_we0 = 1'b1;
    end else begin
        z_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_11_ce0 = 1'b1;
    end else begin
        z_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd11) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_11_we0 = 1'b1;
    end else begin
        z_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_12_ce0 = 1'b1;
    end else begin
        z_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd12) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_12_we0 = 1'b1;
    end else begin
        z_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_13_ce0 = 1'b1;
    end else begin
        z_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd13) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_13_we0 = 1'b1;
    end else begin
        z_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_14_ce0 = 1'b1;
    end else begin
        z_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd14) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_14_we0 = 1'b1;
    end else begin
        z_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_15_ce0 = 1'b1;
    end else begin
        z_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd15) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_15_we0 = 1'b1;
    end else begin
        z_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_1_ce0 = 1'b1;
    end else begin
        z_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd1) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_1_we0 = 1'b1;
    end else begin
        z_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_2_ce0 = 1'b1;
    end else begin
        z_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd2) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_2_we0 = 1'b1;
    end else begin
        z_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_3_ce0 = 1'b1;
    end else begin
        z_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd3) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_3_we0 = 1'b1;
    end else begin
        z_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_4_ce0 = 1'b1;
    end else begin
        z_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd4) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_4_we0 = 1'b1;
    end else begin
        z_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_5_ce0 = 1'b1;
    end else begin
        z_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd5) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_5_we0 = 1'b1;
    end else begin
        z_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_6_ce0 = 1'b1;
    end else begin
        z_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd6) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_6_we0 = 1'b1;
    end else begin
        z_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_7_ce0 = 1'b1;
    end else begin
        z_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd7) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_7_we0 = 1'b1;
    end else begin
        z_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_8_ce0 = 1'b1;
    end else begin
        z_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd8) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_8_we0 = 1'b1;
    end else begin
        z_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_9_ce0 = 1'b1;
    end else begin
        z_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd9) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_9_we0 = 1'b1;
    end else begin
        z_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_ce0 = 1'b1;
    end else begin
        z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_10_ce0 = 1'b1;
    end else begin
        z_old_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd10) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_10_we0 = 1'b1;
    end else begin
        z_old_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_11_ce0 = 1'b1;
    end else begin
        z_old_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd11) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_11_we0 = 1'b1;
    end else begin
        z_old_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_12_ce0 = 1'b1;
    end else begin
        z_old_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd12) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_12_we0 = 1'b1;
    end else begin
        z_old_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_13_ce0 = 1'b1;
    end else begin
        z_old_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd13) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_13_we0 = 1'b1;
    end else begin
        z_old_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_14_ce0 = 1'b1;
    end else begin
        z_old_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd14) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_14_we0 = 1'b1;
    end else begin
        z_old_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_15_ce0 = 1'b1;
    end else begin
        z_old_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd15) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_15_we0 = 1'b1;
    end else begin
        z_old_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_1_ce0 = 1'b1;
    end else begin
        z_old_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd1) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_1_we0 = 1'b1;
    end else begin
        z_old_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_2_ce0 = 1'b1;
    end else begin
        z_old_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd2) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_2_we0 = 1'b1;
    end else begin
        z_old_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_3_ce0 = 1'b1;
    end else begin
        z_old_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd3) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_3_we0 = 1'b1;
    end else begin
        z_old_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_4_ce0 = 1'b1;
    end else begin
        z_old_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd4) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_4_we0 = 1'b1;
    end else begin
        z_old_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_5_ce0 = 1'b1;
    end else begin
        z_old_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd5) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_5_we0 = 1'b1;
    end else begin
        z_old_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_6_ce0 = 1'b1;
    end else begin
        z_old_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd6) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_6_we0 = 1'b1;
    end else begin
        z_old_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_7_ce0 = 1'b1;
    end else begin
        z_old_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd7) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_7_we0 = 1'b1;
    end else begin
        z_old_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_8_ce0 = 1'b1;
    end else begin
        z_old_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd8) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_8_we0 = 1'b1;
    end else begin
        z_old_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_9_ce0 = 1'b1;
    end else begin
        z_old_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd9) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_9_we0 = 1'b1;
    end else begin
        z_old_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_ce0 = 1'b1;
    end else begin
        z_old_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd0) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_old_we0 = 1'b1;
    end else begin
        z_old_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln606_fu_1118_p1 == 4'd0) & (icmp_ln606_fu_1106_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_we0 = 1'b1;
    end else begin
        z_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln606_fu_1112_p2 = (ap_sig_allocacmp_i_6 + 31'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln606_fu_1106_p2 = (($signed(zext_ln606_fu_1102_p1) < $signed(chunk)) ? 1'b1 : 1'b0);

assign lshr_ln_fu_1122_p4 = {{ap_sig_allocacmp_i_6[6:4]}};

assign trunc_ln606_fu_1118_p1 = ap_sig_allocacmp_i_6[3:0];

assign u_10_address0 = zext_ln606_1_fu_1132_p1;

assign u_10_d0 = 32'd0;

assign u_11_address0 = zext_ln606_1_fu_1132_p1;

assign u_11_d0 = 32'd0;

assign u_12_address0 = zext_ln606_1_fu_1132_p1;

assign u_12_d0 = 32'd0;

assign u_13_address0 = zext_ln606_1_fu_1132_p1;

assign u_13_d0 = 32'd0;

assign u_14_address0 = zext_ln606_1_fu_1132_p1;

assign u_14_d0 = 32'd0;

assign u_15_address0 = zext_ln606_1_fu_1132_p1;

assign u_15_d0 = 32'd0;

assign u_1_address0 = zext_ln606_1_fu_1132_p1;

assign u_1_d0 = 32'd0;

assign u_2_address0 = zext_ln606_1_fu_1132_p1;

assign u_2_d0 = 32'd0;

assign u_3_address0 = zext_ln606_1_fu_1132_p1;

assign u_3_d0 = 32'd0;

assign u_4_address0 = zext_ln606_1_fu_1132_p1;

assign u_4_d0 = 32'd0;

assign u_5_address0 = zext_ln606_1_fu_1132_p1;

assign u_5_d0 = 32'd0;

assign u_6_address0 = zext_ln606_1_fu_1132_p1;

assign u_6_d0 = 32'd0;

assign u_7_address0 = zext_ln606_1_fu_1132_p1;

assign u_7_d0 = 32'd0;

assign u_8_address0 = zext_ln606_1_fu_1132_p1;

assign u_8_d0 = 32'd0;

assign u_9_address0 = zext_ln606_1_fu_1132_p1;

assign u_9_d0 = 32'd0;

assign u_address0 = zext_ln606_1_fu_1132_p1;

assign u_d0 = 32'd0;

assign x_10_address0 = zext_ln606_1_fu_1132_p1;

assign x_10_d0 = 32'd0;

assign x_11_address0 = zext_ln606_1_fu_1132_p1;

assign x_11_d0 = 32'd0;

assign x_12_address0 = zext_ln606_1_fu_1132_p1;

assign x_12_d0 = 32'd0;

assign x_13_address0 = zext_ln606_1_fu_1132_p1;

assign x_13_d0 = 32'd0;

assign x_14_address0 = zext_ln606_1_fu_1132_p1;

assign x_14_d0 = 32'd0;

assign x_15_address0 = zext_ln606_1_fu_1132_p1;

assign x_15_d0 = 32'd0;

assign x_1_address0 = zext_ln606_1_fu_1132_p1;

assign x_1_d0 = 32'd0;

assign x_2_address0 = zext_ln606_1_fu_1132_p1;

assign x_2_d0 = 32'd0;

assign x_3_address0 = zext_ln606_1_fu_1132_p1;

assign x_3_d0 = 32'd0;

assign x_4_address0 = zext_ln606_1_fu_1132_p1;

assign x_4_d0 = 32'd0;

assign x_5_address0 = zext_ln606_1_fu_1132_p1;

assign x_5_d0 = 32'd0;

assign x_6_address0 = zext_ln606_1_fu_1132_p1;

assign x_6_d0 = 32'd0;

assign x_7_address0 = zext_ln606_1_fu_1132_p1;

assign x_7_d0 = 32'd0;

assign x_8_address0 = zext_ln606_1_fu_1132_p1;

assign x_8_d0 = 32'd0;

assign x_9_address0 = zext_ln606_1_fu_1132_p1;

assign x_9_d0 = 32'd0;

assign x_address0 = zext_ln606_1_fu_1132_p1;

assign x_d0 = 32'd0;

assign z_10_address0 = zext_ln606_1_fu_1132_p1;

assign z_10_d0 = 32'd0;

assign z_11_address0 = zext_ln606_1_fu_1132_p1;

assign z_11_d0 = 32'd0;

assign z_12_address0 = zext_ln606_1_fu_1132_p1;

assign z_12_d0 = 32'd0;

assign z_13_address0 = zext_ln606_1_fu_1132_p1;

assign z_13_d0 = 32'd0;

assign z_14_address0 = zext_ln606_1_fu_1132_p1;

assign z_14_d0 = 32'd0;

assign z_15_address0 = zext_ln606_1_fu_1132_p1;

assign z_15_d0 = 32'd0;

assign z_1_address0 = zext_ln606_1_fu_1132_p1;

assign z_1_d0 = 32'd0;

assign z_2_address0 = zext_ln606_1_fu_1132_p1;

assign z_2_d0 = 32'd0;

assign z_3_address0 = zext_ln606_1_fu_1132_p1;

assign z_3_d0 = 32'd0;

assign z_4_address0 = zext_ln606_1_fu_1132_p1;

assign z_4_d0 = 32'd0;

assign z_5_address0 = zext_ln606_1_fu_1132_p1;

assign z_5_d0 = 32'd0;

assign z_6_address0 = zext_ln606_1_fu_1132_p1;

assign z_6_d0 = 32'd0;

assign z_7_address0 = zext_ln606_1_fu_1132_p1;

assign z_7_d0 = 32'd0;

assign z_8_address0 = zext_ln606_1_fu_1132_p1;

assign z_8_d0 = 32'd0;

assign z_9_address0 = zext_ln606_1_fu_1132_p1;

assign z_9_d0 = 32'd0;

assign z_address0 = zext_ln606_1_fu_1132_p1;

assign z_d0 = 32'd0;

assign z_old_10_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_10_d0 = 32'd0;

assign z_old_11_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_11_d0 = 32'd0;

assign z_old_12_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_12_d0 = 32'd0;

assign z_old_13_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_13_d0 = 32'd0;

assign z_old_14_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_14_d0 = 32'd0;

assign z_old_15_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_15_d0 = 32'd0;

assign z_old_1_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_1_d0 = 32'd0;

assign z_old_2_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_2_d0 = 32'd0;

assign z_old_3_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_3_d0 = 32'd0;

assign z_old_4_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_4_d0 = 32'd0;

assign z_old_5_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_5_d0 = 32'd0;

assign z_old_6_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_6_d0 = 32'd0;

assign z_old_7_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_7_d0 = 32'd0;

assign z_old_8_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_8_d0 = 32'd0;

assign z_old_9_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_9_d0 = 32'd0;

assign z_old_address0 = zext_ln606_1_fu_1132_p1;

assign z_old_d0 = 32'd0;

assign zext_ln606_1_fu_1132_p1 = lshr_ln_fu_1122_p4;

assign zext_ln606_fu_1102_p1 = ap_sig_allocacmp_i_6;

endmodule //krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_606_2
