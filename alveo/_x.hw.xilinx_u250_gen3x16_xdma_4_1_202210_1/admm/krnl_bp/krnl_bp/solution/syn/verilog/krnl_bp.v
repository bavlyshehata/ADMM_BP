// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="krnl_bp_krnl_bp,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.692486,HLS_SYN_LAT=1158,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=21740,HLS_SYN_LUT=29317,HLS_VERSION=2022_2}" *)

module krnl_bp (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 163'd1;
parameter    ap_ST_fsm_state2 = 163'd2;
parameter    ap_ST_fsm_state3 = 163'd4;
parameter    ap_ST_fsm_state4 = 163'd8;
parameter    ap_ST_fsm_state5 = 163'd16;
parameter    ap_ST_fsm_state6 = 163'd32;
parameter    ap_ST_fsm_state7 = 163'd64;
parameter    ap_ST_fsm_state8 = 163'd128;
parameter    ap_ST_fsm_state9 = 163'd256;
parameter    ap_ST_fsm_state10 = 163'd512;
parameter    ap_ST_fsm_state11 = 163'd1024;
parameter    ap_ST_fsm_state12 = 163'd2048;
parameter    ap_ST_fsm_state13 = 163'd4096;
parameter    ap_ST_fsm_state14 = 163'd8192;
parameter    ap_ST_fsm_state15 = 163'd16384;
parameter    ap_ST_fsm_state16 = 163'd32768;
parameter    ap_ST_fsm_state17 = 163'd65536;
parameter    ap_ST_fsm_state18 = 163'd131072;
parameter    ap_ST_fsm_state19 = 163'd262144;
parameter    ap_ST_fsm_state20 = 163'd524288;
parameter    ap_ST_fsm_state21 = 163'd1048576;
parameter    ap_ST_fsm_state22 = 163'd2097152;
parameter    ap_ST_fsm_state23 = 163'd4194304;
parameter    ap_ST_fsm_state24 = 163'd8388608;
parameter    ap_ST_fsm_state25 = 163'd16777216;
parameter    ap_ST_fsm_state26 = 163'd33554432;
parameter    ap_ST_fsm_state27 = 163'd67108864;
parameter    ap_ST_fsm_state28 = 163'd134217728;
parameter    ap_ST_fsm_state29 = 163'd268435456;
parameter    ap_ST_fsm_state30 = 163'd536870912;
parameter    ap_ST_fsm_state31 = 163'd1073741824;
parameter    ap_ST_fsm_state32 = 163'd2147483648;
parameter    ap_ST_fsm_state33 = 163'd4294967296;
parameter    ap_ST_fsm_state34 = 163'd8589934592;
parameter    ap_ST_fsm_state35 = 163'd17179869184;
parameter    ap_ST_fsm_state36 = 163'd34359738368;
parameter    ap_ST_fsm_state37 = 163'd68719476736;
parameter    ap_ST_fsm_state38 = 163'd137438953472;
parameter    ap_ST_fsm_state39 = 163'd274877906944;
parameter    ap_ST_fsm_state40 = 163'd549755813888;
parameter    ap_ST_fsm_state41 = 163'd1099511627776;
parameter    ap_ST_fsm_state42 = 163'd2199023255552;
parameter    ap_ST_fsm_state43 = 163'd4398046511104;
parameter    ap_ST_fsm_state44 = 163'd8796093022208;
parameter    ap_ST_fsm_state45 = 163'd17592186044416;
parameter    ap_ST_fsm_state46 = 163'd35184372088832;
parameter    ap_ST_fsm_state47 = 163'd70368744177664;
parameter    ap_ST_fsm_state48 = 163'd140737488355328;
parameter    ap_ST_fsm_state49 = 163'd281474976710656;
parameter    ap_ST_fsm_state50 = 163'd562949953421312;
parameter    ap_ST_fsm_state51 = 163'd1125899906842624;
parameter    ap_ST_fsm_state52 = 163'd2251799813685248;
parameter    ap_ST_fsm_state53 = 163'd4503599627370496;
parameter    ap_ST_fsm_state54 = 163'd9007199254740992;
parameter    ap_ST_fsm_state55 = 163'd18014398509481984;
parameter    ap_ST_fsm_state56 = 163'd36028797018963968;
parameter    ap_ST_fsm_state57 = 163'd72057594037927936;
parameter    ap_ST_fsm_state58 = 163'd144115188075855872;
parameter    ap_ST_fsm_state59 = 163'd288230376151711744;
parameter    ap_ST_fsm_state60 = 163'd576460752303423488;
parameter    ap_ST_fsm_state61 = 163'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 163'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 163'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 163'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 163'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 163'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 163'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 163'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 163'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 163'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 163'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 163'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 163'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 163'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 163'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 163'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 163'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 163'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 163'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 163'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 163'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 163'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 163'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 163'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 163'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 163'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 163'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 163'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 163'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 163'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 163'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 163'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 163'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 163'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 163'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 163'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 163'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 163'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 163'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 163'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 163'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 163'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 163'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 163'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 163'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 163'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 163'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 163'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 163'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 163'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 163'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 163'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 163'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 163'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 163'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 163'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 163'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 163'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 163'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 163'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 163'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 163'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 163'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 163'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 163'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 163'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 163'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 163'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 163'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 163'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 163'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 163'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 163'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 163'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 163'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 163'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 163'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 163'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 163'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 163'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 163'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 163'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 163'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 163'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 163'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 163'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 163'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 163'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 163'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 163'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 163'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 163'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 163'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 163'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 163'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 163'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 163'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 163'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 163'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 163'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 163'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 163'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 163'd5846006549323611672814739330865132078623730171904;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 256;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 256;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (256 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (256 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [162:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] mat_p;
wire   [63:0] vec_q;
wire   [63:0] out_r;
wire   [31:0] rho;
wire   [31:0] alpha;
reg   [5:0] mat_p_bram_address0;
reg    mat_p_bram_ce0;
reg    mat_p_bram_we0;
wire   [31:0] mat_p_bram_q0;
reg    mat_p_bram_ce1;
wire   [31:0] mat_p_bram_q1;
reg   [2:0] vec_q_bram_address0;
reg    vec_q_bram_ce0;
reg    vec_q_bram_we0;
wire   [31:0] vec_q_bram_q0;
reg   [2:0] x_bram_address0;
reg    x_bram_ce0;
reg    x_bram_we0;
wire   [31:0] x_bram_q0;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    gmem1_blk_n_AR;
reg    gmem1_blk_n_R;
wire    ap_CS_fsm_state72;
reg    gmem2_blk_n_AW;
wire    ap_CS_fsm_state94;
reg    gmem2_blk_n_W;
wire    ap_CS_fsm_state95;
reg    gmem2_blk_n_B;
wire    ap_CS_fsm_state163;
reg   [57:0] trunc_ln_reg_438;
reg   [58:0] trunc_ln15_1_reg_444;
reg   [58:0] trunc_ln4_reg_449;
reg   [255:0] gmem1_addr_read_reg_465;
wire    ap_CS_fsm_state74;
wire   [31:0] grp_fu_363_p2;
reg   [31:0] reg_alpha_reg_481;
wire    ap_CS_fsm_state83;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_start;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_done;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_idle;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_ready;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWVALID;
wire   [63:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWADDR;
wire   [0:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWID;
wire   [31:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWLEN;
wire   [2:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWBURST;
wire   [1:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWPROT;
wire   [3:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWQOS;
wire   [3:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWREGION;
wire   [0:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWUSER;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WVALID;
wire   [511:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WDATA;
wire   [63:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WSTRB;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WLAST;
wire   [0:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WID;
wire   [0:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WUSER;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARVALID;
wire   [63:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARADDR;
wire   [0:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARID;
wire   [31:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARLEN;
wire   [2:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARBURST;
wire   [1:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARPROT;
wire   [3:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARQOS;
wire   [3:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARREGION;
wire   [0:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARUSER;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_RREADY;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_BREADY;
wire   [5:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_address0;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_ce0;
wire    grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_we0;
wire   [31:0] grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_d0;
wire    grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_start;
wire    grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_done;
wire    grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_idle;
wire    grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_ready;
wire   [2:0] grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_address0;
wire    grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_ce0;
wire    grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_we0;
wire   [31:0] grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_d0;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_start;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_done;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_idle;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_ready;
wire   [31:0] grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_u_stream_din;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_u_stream_write;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_start;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_done;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_idle;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_ready;
wire   [31:0] grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_z_copy_2_stream_din;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_z_copy_2_stream_write;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_start;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_done;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_idle;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_ready;
wire   [31:0] grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_z_old_stream_din;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_z_old_stream_write;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_ap_start;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_ap_done;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_ap_idle;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_ap_ready;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_read;
wire   [31:0] grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_din;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_write;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_read;
wire   [31:0] grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_din;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_write;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_z_u_stream_read;
wire   [31:0] grp_krnl_bp_Pipeline_l_main_fu_287_z_u_stream_din;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_z_u_stream_write;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_mac_res_stream_read;
wire   [31:0] grp_krnl_bp_Pipeline_l_main_fu_287_mac_res_stream_din;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_mac_res_stream_write;
wire   [5:0] grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_address0;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_ce0;
wire   [5:0] grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_address1;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_ce1;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_read;
wire   [31:0] grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_din;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_write;
wire   [2:0] grp_krnl_bp_Pipeline_l_main_fu_287_vec_q_bram_address0;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_vec_q_bram_ce0;
wire   [2:0] grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_address0;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_ce0;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_we0;
wire   [31:0] grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_d0;
wire   [31:0] grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_din0;
wire   [31:0] grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_din1;
wire   [1:0] grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_opcode;
wire    grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_ce;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_start;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_done;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_idle;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_ready;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_u_stream_read;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_start;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_done;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_idle;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_ready;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_z_old_stream_read;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_start;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_done;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_idle;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_ready;
wire    grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_z_copy_2_stream_read;
wire    grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_start;
wire    grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_done;
wire    grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_idle;
wire    grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_ready;
wire   [255:0] grp_krnl_bp_Pipeline_l_write_mem_fu_356_shiftreg_out;
wire    grp_krnl_bp_Pipeline_l_write_mem_fu_356_shiftreg_out_ap_vld;
wire   [2:0] grp_krnl_bp_Pipeline_l_write_mem_fu_356_x_bram_address0;
wire    grp_krnl_bp_Pipeline_l_write_mem_fu_356_x_bram_ce0;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
reg   [63:0] gmem0_ARADDR;
reg   [31:0] gmem0_ARLEN;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [511:0] gmem0_RDATA;
wire   [8:0] gmem0_RFIFONUM;
wire    gmem0_BVALID;
wire    gmem1_AWREADY;
wire    gmem1_WREADY;
reg    gmem1_ARVALID;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
reg    gmem1_RREADY;
wire   [255:0] gmem1_RDATA;
wire   [8:0] gmem1_RFIFONUM;
wire    gmem1_BVALID;
reg    gmem2_AWVALID;
wire    gmem2_AWREADY;
reg    gmem2_WVALID;
wire    gmem2_WREADY;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
wire   [255:0] gmem2_RDATA;
wire   [8:0] gmem2_RFIFONUM;
wire    gmem2_BVALID;
reg    gmem2_BREADY;
reg    grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_start_reg;
wire    ap_CS_fsm_state73;
reg    grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_start_reg;
reg   [162:0] ap_NS_fsm;
wire    ap_NS_fsm_state73;
reg    grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_start_reg;
wire    ap_CS_fsm_state75;
reg   [31:0] u_stream_din;
wire    u_stream_full_n;
reg    u_stream_write;
wire    ap_CS_fsm_state76;
reg    grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_start_reg;
wire    ap_CS_fsm_state78;
reg   [31:0] z_copy_2_stream_din;
wire    z_copy_2_stream_full_n;
reg    z_copy_2_stream_write;
wire    ap_CS_fsm_state79;
reg    grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_start_reg;
wire    ap_CS_fsm_state81;
reg   [31:0] z_old_stream_din;
wire    z_old_stream_full_n;
reg    z_old_stream_write;
wire    ap_CS_fsm_state82;
reg    grp_krnl_bp_Pipeline_l_main_fu_287_ap_start_reg;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire   [31:0] u_stream_dout;
wire    u_stream_empty_n;
reg    u_stream_read;
wire   [31:0] z_copy_2_stream_dout;
wire    z_copy_2_stream_empty_n;
reg    z_copy_2_stream_read;
wire   [31:0] z_u_stream_dout;
wire    z_u_stream_empty_n;
reg    z_u_stream_read;
wire    z_u_stream_full_n;
reg    z_u_stream_write;
wire   [31:0] mac_res_stream_dout;
wire    mac_res_stream_empty_n;
reg    mac_res_stream_read;
wire    mac_res_stream_full_n;
reg    mac_res_stream_write;
wire   [31:0] z_old_stream_dout;
wire    z_old_stream_empty_n;
reg    z_old_stream_read;
reg    grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_start_reg;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
reg    grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_start_reg;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
reg    grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_start_reg;
wire    ap_CS_fsm_state93;
reg    grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_start_reg;
wire  signed [63:0] sext_ln15_fu_398_p1;
wire   [63:0] sext_ln15_1_fu_408_p1;
wire   [63:0] sext_ln475_fu_418_p1;
reg    ap_block_state2_io;
reg    ap_block_state94_on_subcall_done;
reg    ap_block_state1;
reg    ap_block_state74_on_subcall_done;
reg   [31:0] grp_fu_363_p0;
reg   [31:0] grp_fu_363_p1;
wire    ap_CS_fsm_state77;
reg   [1:0] grp_fu_363_opcode;
reg    grp_fu_363_ce;
wire    ap_CS_fsm_state80;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
reg    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
reg    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
reg    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
reg    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
reg    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
reg    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
reg    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
reg    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
reg    ap_ST_fsm_state94_blk;
reg    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire    ap_ST_fsm_state137_blk;
wire    ap_ST_fsm_state138_blk;
wire    ap_ST_fsm_state139_blk;
wire    ap_ST_fsm_state140_blk;
wire    ap_ST_fsm_state141_blk;
wire    ap_ST_fsm_state142_blk;
wire    ap_ST_fsm_state143_blk;
wire    ap_ST_fsm_state144_blk;
wire    ap_ST_fsm_state145_blk;
wire    ap_ST_fsm_state146_blk;
wire    ap_ST_fsm_state147_blk;
wire    ap_ST_fsm_state148_blk;
wire    ap_ST_fsm_state149_blk;
wire    ap_ST_fsm_state150_blk;
wire    ap_ST_fsm_state151_blk;
wire    ap_ST_fsm_state152_blk;
wire    ap_ST_fsm_state153_blk;
wire    ap_ST_fsm_state154_blk;
wire    ap_ST_fsm_state155_blk;
wire    ap_ST_fsm_state156_blk;
wire    ap_ST_fsm_state157_blk;
wire    ap_ST_fsm_state158_blk;
wire    ap_ST_fsm_state159_blk;
wire    ap_ST_fsm_state160_blk;
wire    ap_ST_fsm_state161_blk;
wire    ap_ST_fsm_state162_blk;
reg    ap_ST_fsm_state163_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 163'd1;
#0 grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_start_reg = 1'b0;
#0 grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_start_reg = 1'b0;
#0 grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_start_reg = 1'b0;
#0 grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_start_reg = 1'b0;
#0 grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_start_reg = 1'b0;
#0 grp_krnl_bp_Pipeline_l_main_fu_287_ap_start_reg = 1'b0;
#0 grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_start_reg = 1'b0;
#0 grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_start_reg = 1'b0;
#0 grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_start_reg = 1'b0;
#0 grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_start_reg = 1'b0;
end

krnl_bp_mat_p_bram_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mat_p_bram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mat_p_bram_address0),
    .ce0(mat_p_bram_ce0),
    .we0(mat_p_bram_we0),
    .d0(grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_d0),
    .q0(mat_p_bram_q0),
    .address1(grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_address1),
    .ce1(mat_p_bram_ce1),
    .q1(mat_p_bram_q1)
);

krnl_bp_vec_q_bram_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
vec_q_bram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(vec_q_bram_address0),
    .ce0(vec_q_bram_ce0),
    .we0(vec_q_bram_we0),
    .d0(grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_d0),
    .q0(vec_q_bram_q0)
);

krnl_bp_vec_q_bram_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
x_bram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_bram_address0),
    .ce0(x_bram_ce0),
    .we0(x_bram_we0),
    .d0(grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_d0),
    .q0(x_bram_q0)
);

krnl_bp_krnl_bp_Pipeline_l_load_input grp_krnl_bp_Pipeline_l_load_input_fu_253(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_ready),
    .m_axi_gmem0_AWVALID(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(1'b0),
    .m_axi_gmem0_AWADDR(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(1'b0),
    .m_axi_gmem0_WDATA(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(gmem0_RDATA),
    .m_axi_gmem0_RLAST(1'b0),
    .m_axi_gmem0_RID(1'd0),
    .m_axi_gmem0_RFIFONUM(gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(1'd0),
    .m_axi_gmem0_RRESP(2'd0),
    .m_axi_gmem0_BVALID(1'b0),
    .m_axi_gmem0_BREADY(grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .sext_ln15(trunc_ln_reg_438),
    .mat_p_bram_address0(grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_address0),
    .mat_p_bram_ce0(grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_ce0),
    .mat_p_bram_we0(grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_we0),
    .mat_p_bram_d0(grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_d0)
);

krnl_bp_krnl_bp_Pipeline_l_load_input1 grp_krnl_bp_Pipeline_l_load_input1_fu_262(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_ready),
    .gmem1_load(gmem1_addr_read_reg_465),
    .vec_q_bram_address0(grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_address0),
    .vec_q_bram_ce0(grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_ce0),
    .vec_q_bram_we0(grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_we0),
    .vec_q_bram_d0(grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_d0)
);

krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_236_1 grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_ready),
    .u_stream_din(grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_u_stream_din),
    .u_stream_full_n(u_stream_full_n),
    .u_stream_write(grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_u_stream_write)
);

krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_236_12 grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_ready),
    .z_copy_2_stream_din(grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_z_copy_2_stream_din),
    .z_copy_2_stream_full_n(z_copy_2_stream_full_n),
    .z_copy_2_stream_write(grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_z_copy_2_stream_write)
);

krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_236_13 grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_ready),
    .z_old_stream_din(grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_z_old_stream_din),
    .z_old_stream_full_n(z_old_stream_full_n),
    .z_old_stream_write(grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_z_old_stream_write)
);

krnl_bp_krnl_bp_Pipeline_l_main grp_krnl_bp_Pipeline_l_main_fu_287(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_l_main_fu_287_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_l_main_fu_287_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_l_main_fu_287_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_l_main_fu_287_ap_ready),
    .alpha(alpha),
    .reg_alpha(reg_alpha_reg_481),
    .rho(rho),
    .u_stream_dout(u_stream_dout),
    .u_stream_empty_n(u_stream_empty_n),
    .u_stream_read(grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_read),
    .u_stream_din(grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_din),
    .u_stream_full_n(u_stream_full_n),
    .u_stream_write(grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_write),
    .z_copy_2_stream_dout(z_copy_2_stream_dout),
    .z_copy_2_stream_empty_n(z_copy_2_stream_empty_n),
    .z_copy_2_stream_read(grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_read),
    .z_copy_2_stream_din(grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_din),
    .z_copy_2_stream_full_n(z_copy_2_stream_full_n),
    .z_copy_2_stream_write(grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_write),
    .z_u_stream_dout(z_u_stream_dout),
    .z_u_stream_empty_n(z_u_stream_empty_n),
    .z_u_stream_read(grp_krnl_bp_Pipeline_l_main_fu_287_z_u_stream_read),
    .z_u_stream_din(grp_krnl_bp_Pipeline_l_main_fu_287_z_u_stream_din),
    .z_u_stream_full_n(z_u_stream_full_n),
    .z_u_stream_write(grp_krnl_bp_Pipeline_l_main_fu_287_z_u_stream_write),
    .mac_res_stream_dout(mac_res_stream_dout),
    .mac_res_stream_empty_n(mac_res_stream_empty_n),
    .mac_res_stream_read(grp_krnl_bp_Pipeline_l_main_fu_287_mac_res_stream_read),
    .mac_res_stream_din(grp_krnl_bp_Pipeline_l_main_fu_287_mac_res_stream_din),
    .mac_res_stream_full_n(mac_res_stream_full_n),
    .mac_res_stream_write(grp_krnl_bp_Pipeline_l_main_fu_287_mac_res_stream_write),
    .mat_p_bram_address0(grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_address0),
    .mat_p_bram_ce0(grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_ce0),
    .mat_p_bram_q0(mat_p_bram_q0),
    .mat_p_bram_address1(grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_address1),
    .mat_p_bram_ce1(grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_ce1),
    .mat_p_bram_q1(mat_p_bram_q1),
    .z_old_stream_dout(z_old_stream_dout),
    .z_old_stream_empty_n(z_old_stream_empty_n),
    .z_old_stream_read(grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_read),
    .z_old_stream_din(grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_din),
    .z_old_stream_full_n(z_old_stream_full_n),
    .z_old_stream_write(grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_write),
    .vec_q_bram_address0(grp_krnl_bp_Pipeline_l_main_fu_287_vec_q_bram_address0),
    .vec_q_bram_ce0(grp_krnl_bp_Pipeline_l_main_fu_287_vec_q_bram_ce0),
    .vec_q_bram_q0(vec_q_bram_q0),
    .x_bram_address0(grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_address0),
    .x_bram_ce0(grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_ce0),
    .x_bram_we0(grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_we0),
    .x_bram_d0(grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_d0),
    .grp_fu_363_p_din0(grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_din0),
    .grp_fu_363_p_din1(grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_din1),
    .grp_fu_363_p_opcode(grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_opcode),
    .grp_fu_363_p_dout0(grp_fu_363_p2),
    .grp_fu_363_p_ce(grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_ce)
);

krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_229_1 grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_ready),
    .u_stream_dout(u_stream_dout),
    .u_stream_empty_n(u_stream_empty_n),
    .u_stream_read(grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_u_stream_read)
);

krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_229_14 grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_ready),
    .z_old_stream_dout(z_old_stream_dout),
    .z_old_stream_empty_n(z_old_stream_empty_n),
    .z_old_stream_read(grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_z_old_stream_read)
);

krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_229_15 grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_ready),
    .z_copy_2_stream_dout(z_copy_2_stream_dout),
    .z_copy_2_stream_empty_n(z_copy_2_stream_empty_n),
    .z_copy_2_stream_read(grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_z_copy_2_stream_read)
);

krnl_bp_krnl_bp_Pipeline_l_write_mem grp_krnl_bp_Pipeline_l_write_mem_fu_356(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_start),
    .ap_done(grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_done),
    .ap_idle(grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_idle),
    .ap_ready(grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_ready),
    .shiftreg_out(grp_krnl_bp_Pipeline_l_write_mem_fu_356_shiftreg_out),
    .shiftreg_out_ap_vld(grp_krnl_bp_Pipeline_l_write_mem_fu_356_shiftreg_out_ap_vld),
    .x_bram_address0(grp_krnl_bp_Pipeline_l_write_mem_fu_356_x_bram_address0),
    .x_bram_ce0(grp_krnl_bp_Pipeline_l_write_mem_fu_356_x_bram_ce0),
    .x_bram_q0(x_bram_q0)
);

krnl_bp_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .mat_p(mat_p),
    .vec_q(vec_q),
    .out_r(out_r),
    .rho(rho),
    .alpha(alpha),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

krnl_bp_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_ARADDR),
    .I_ARLEN(gmem0_ARLEN),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RFIFONUM(gmem0_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(512'd0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0)
);

krnl_bp_gmem1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 256 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem1_ARVALID),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(sext_ln15_1_fu_408_p1),
    .I_ARLEN(32'd1),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(gmem1_RREADY),
    .I_RDATA(gmem1_RDATA),
    .I_RFIFONUM(gmem1_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(256'd0),
    .I_WSTRB(32'd0),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(1'b0)
);

krnl_bp_gmem2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 256 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem2_RDATA),
    .I_RFIFONUM(gmem2_RFIFONUM),
    .I_AWVALID(gmem2_AWVALID),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(sext_ln475_fu_418_p1),
    .I_AWLEN(32'd1),
    .I_WVALID(gmem2_WVALID),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(grp_krnl_bp_Pipeline_l_write_mem_fu_356_shiftreg_out),
    .I_WSTRB(32'd4294967295),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(gmem2_BREADY)
);

krnl_bp_faddfsub_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_7_full_dsp_1_U63(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_363_p0),
    .din1(grp_fu_363_p1),
    .opcode(grp_fu_363_opcode),
    .ce(grp_fu_363_ce),
    .dout(grp_fu_363_p2)
);

krnl_bp_fifo_w32_d36_A_x mac_res_stream_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_krnl_bp_Pipeline_l_main_fu_287_mac_res_stream_din),
    .if_full_n(mac_res_stream_full_n),
    .if_write(mac_res_stream_write),
    .if_dout(mac_res_stream_dout),
    .if_empty_n(mac_res_stream_empty_n),
    .if_read(mac_res_stream_read)
);

krnl_bp_fifo_w32_d36_A_x u_stream_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(u_stream_din),
    .if_full_n(u_stream_full_n),
    .if_write(u_stream_write),
    .if_dout(u_stream_dout),
    .if_empty_n(u_stream_empty_n),
    .if_read(u_stream_read)
);

krnl_bp_fifo_w32_d36_A_x z_copy_2_stream_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(z_copy_2_stream_din),
    .if_full_n(z_copy_2_stream_full_n),
    .if_write(z_copy_2_stream_write),
    .if_dout(z_copy_2_stream_dout),
    .if_empty_n(z_copy_2_stream_empty_n),
    .if_read(z_copy_2_stream_read)
);

krnl_bp_fifo_w32_d36_A_x z_old_stream_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(z_old_stream_din),
    .if_full_n(z_old_stream_full_n),
    .if_write(z_old_stream_write),
    .if_dout(z_old_stream_dout),
    .if_empty_n(z_old_stream_empty_n),
    .if_read(z_old_stream_read)
);

krnl_bp_fifo_w32_d36_A_x z_u_stream_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_krnl_bp_Pipeline_l_main_fu_287_z_u_stream_din),
    .if_full_n(z_u_stream_full_n),
    .if_write(z_u_stream_write),
    .if_dout(z_u_stream_dout),
    .if_empty_n(z_u_stream_empty_n),
    .if_read(z_u_stream_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((gmem2_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state163))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state90)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state93)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state78)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state81)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state75)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state73) & (1'b1 == ap_CS_fsm_state72))) begin
            grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_l_main_fu_287_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state84)) begin
            grp_krnl_bp_Pipeline_l_main_fu_287_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_l_main_fu_287_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_l_main_fu_287_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state93)) begin
            grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_start_reg <= 1'b1;
        end else if ((grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_ready == 1'b1)) begin
            grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        gmem1_addr_read_reg_465 <= gmem1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        reg_alpha_reg_481 <= grp_fu_363_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln15_1_reg_444 <= {{vec_q[63:5]}};
        trunc_ln4_reg_449 <= {{out_r[63:5]}};
        trunc_ln_reg_438 <= {{mat_p[63:6]}};
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state137_blk = 1'b0;

assign ap_ST_fsm_state138_blk = 1'b0;

assign ap_ST_fsm_state139_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state140_blk = 1'b0;

assign ap_ST_fsm_state141_blk = 1'b0;

assign ap_ST_fsm_state142_blk = 1'b0;

assign ap_ST_fsm_state143_blk = 1'b0;

assign ap_ST_fsm_state144_blk = 1'b0;

assign ap_ST_fsm_state145_blk = 1'b0;

assign ap_ST_fsm_state146_blk = 1'b0;

assign ap_ST_fsm_state147_blk = 1'b0;

assign ap_ST_fsm_state148_blk = 1'b0;

assign ap_ST_fsm_state149_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state150_blk = 1'b0;

assign ap_ST_fsm_state151_blk = 1'b0;

assign ap_ST_fsm_state152_blk = 1'b0;

assign ap_ST_fsm_state153_blk = 1'b0;

assign ap_ST_fsm_state154_blk = 1'b0;

assign ap_ST_fsm_state155_blk = 1'b0;

assign ap_ST_fsm_state156_blk = 1'b0;

assign ap_ST_fsm_state157_blk = 1'b0;

assign ap_ST_fsm_state158_blk = 1'b0;

assign ap_ST_fsm_state159_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state160_blk = 1'b0;

assign ap_ST_fsm_state161_blk = 1'b0;

assign ap_ST_fsm_state162_blk = 1'b0;

always @ (*) begin
    if ((gmem2_BVALID == 1'b0)) begin
        ap_ST_fsm_state163_blk = 1'b1;
    end else begin
        ap_ST_fsm_state163_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2_io)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

always @ (*) begin
    if ((gmem1_RVALID == 1'b0)) begin
        ap_ST_fsm_state72_blk = 1'b1;
    end else begin
        ap_ST_fsm_state72_blk = 1'b0;
    end
end

assign ap_ST_fsm_state73_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state74_on_subcall_done)) begin
        ap_ST_fsm_state74_blk = 1'b1;
    end else begin
        ap_ST_fsm_state74_blk = 1'b0;
    end
end

assign ap_ST_fsm_state75_blk = 1'b0;

always @ (*) begin
    if ((grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_done == 1'b0)) begin
        ap_ST_fsm_state76_blk = 1'b1;
    end else begin
        ap_ST_fsm_state76_blk = 1'b0;
    end
end

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

always @ (*) begin
    if ((grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_done == 1'b0)) begin
        ap_ST_fsm_state79_blk = 1'b1;
    end else begin
        ap_ST_fsm_state79_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

always @ (*) begin
    if ((grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_done == 1'b0)) begin
        ap_ST_fsm_state82_blk = 1'b1;
    end else begin
        ap_ST_fsm_state82_blk = 1'b0;
    end
end

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

always @ (*) begin
    if ((grp_krnl_bp_Pipeline_l_main_fu_287_ap_done == 1'b0)) begin
        ap_ST_fsm_state85_blk = 1'b1;
    end else begin
        ap_ST_fsm_state85_blk = 1'b0;
    end
end

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

always @ (*) begin
    if ((grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_done == 1'b0)) begin
        ap_ST_fsm_state88_blk = 1'b1;
    end else begin
        ap_ST_fsm_state88_blk = 1'b0;
    end
end

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

always @ (*) begin
    if ((grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_done == 1'b0)) begin
        ap_ST_fsm_state91_blk = 1'b1;
    end else begin
        ap_ST_fsm_state91_blk = 1'b0;
    end
end

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

always @ (*) begin
    if (((gmem2_AWREADY == 1'b0) | (1'b1 == ap_block_state94_on_subcall_done))) begin
        ap_ST_fsm_state94_blk = 1'b1;
    end else begin
        ap_ST_fsm_state94_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem2_WREADY == 1'b0)) begin
        ap_ST_fsm_state95_blk = 1'b1;
    end else begin
        ap_ST_fsm_state95_blk = 1'b0;
    end
end

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((gmem2_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state163))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((gmem2_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state163))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        gmem0_ARADDR = sext_ln15_fu_398_p1;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state74))) begin
        gmem0_ARADDR = grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARADDR;
    end else begin
        gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        gmem0_ARLEN = 32'd4;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state74))) begin
        gmem0_ARLEN = grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARLEN;
    end else begin
        gmem0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        gmem0_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state74))) begin
        gmem0_ARVALID = grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_ARVALID;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state74))) begin
        gmem0_RREADY = grp_krnl_bp_Pipeline_l_load_input_fu_253_m_axi_gmem0_RREADY;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        gmem1_ARVALID = 1'b1;
    end else begin
        gmem1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
        gmem1_RREADY = 1'b1;
    end else begin
        gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        gmem1_blk_n_AR = m_axi_gmem1_ARREADY;
    end else begin
        gmem1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        gmem1_blk_n_R = m_axi_gmem1_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((~((gmem2_AWREADY == 1'b0) | (1'b1 == ap_block_state94_on_subcall_done)) & (1'b1 == ap_CS_fsm_state94))) begin
        gmem2_AWVALID = 1'b1;
    end else begin
        gmem2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem2_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state163))) begin
        gmem2_BREADY = 1'b1;
    end else begin
        gmem2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((gmem2_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state95))) begin
        gmem2_WVALID = 1'b1;
    end else begin
        gmem2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        gmem2_blk_n_AW = m_axi_gmem2_AWREADY;
    end else begin
        gmem2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        gmem2_blk_n_B = m_axi_gmem2_BVALID;
    end else begin
        gmem2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        gmem2_blk_n_W = m_axi_gmem2_WREADY;
    end else begin
        gmem2_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_363_ce = grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state77) | ((grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state82)) | ((grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state79)))) begin
        grp_fu_363_ce = 1'b1;
    end else begin
        grp_fu_363_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_363_opcode = grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_363_opcode = 2'd1;
    end else begin
        grp_fu_363_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_363_p0 = grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_363_p0 = 32'd1065353216;
    end else begin
        grp_fu_363_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_363_p1 = grp_krnl_bp_Pipeline_l_main_fu_287_grp_fu_363_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_363_p1 = alpha;
    end else begin
        grp_fu_363_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        mac_res_stream_read = grp_krnl_bp_Pipeline_l_main_fu_287_mac_res_stream_read;
    end else begin
        mac_res_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        mac_res_stream_write = grp_krnl_bp_Pipeline_l_main_fu_287_mac_res_stream_write;
    end else begin
        mac_res_stream_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        mat_p_bram_address0 = grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_address0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        mat_p_bram_address0 = grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_address0;
    end else begin
        mat_p_bram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        mat_p_bram_ce0 = grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_ce0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        mat_p_bram_ce0 = grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_ce0;
    end else begin
        mat_p_bram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        mat_p_bram_ce1 = grp_krnl_bp_Pipeline_l_main_fu_287_mat_p_bram_ce1;
    end else begin
        mat_p_bram_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        mat_p_bram_we0 = grp_krnl_bp_Pipeline_l_load_input_fu_253_mat_p_bram_we0;
    end else begin
        mat_p_bram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        u_stream_din = grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_din;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        u_stream_din = grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_u_stream_din;
    end else begin
        u_stream_din = grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        u_stream_read = grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_u_stream_read;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        u_stream_read = grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_read;
    end else begin
        u_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        u_stream_write = grp_krnl_bp_Pipeline_l_main_fu_287_u_stream_write;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        u_stream_write = grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_u_stream_write;
    end else begin
        u_stream_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        vec_q_bram_address0 = grp_krnl_bp_Pipeline_l_main_fu_287_vec_q_bram_address0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        vec_q_bram_address0 = grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_address0;
    end else begin
        vec_q_bram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        vec_q_bram_ce0 = grp_krnl_bp_Pipeline_l_main_fu_287_vec_q_bram_ce0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        vec_q_bram_ce0 = grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_ce0;
    end else begin
        vec_q_bram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        vec_q_bram_we0 = grp_krnl_bp_Pipeline_l_load_input1_fu_262_vec_q_bram_we0;
    end else begin
        vec_q_bram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        x_bram_address0 = grp_krnl_bp_Pipeline_l_write_mem_fu_356_x_bram_address0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        x_bram_address0 = grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_address0;
    end else begin
        x_bram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        x_bram_ce0 = grp_krnl_bp_Pipeline_l_write_mem_fu_356_x_bram_ce0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        x_bram_ce0 = grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_ce0;
    end else begin
        x_bram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        x_bram_we0 = grp_krnl_bp_Pipeline_l_main_fu_287_x_bram_we0;
    end else begin
        x_bram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        z_copy_2_stream_din = grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_din;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        z_copy_2_stream_din = grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_z_copy_2_stream_din;
    end else begin
        z_copy_2_stream_din = grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        z_copy_2_stream_read = grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_z_copy_2_stream_read;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        z_copy_2_stream_read = grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_read;
    end else begin
        z_copy_2_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        z_copy_2_stream_write = grp_krnl_bp_Pipeline_l_main_fu_287_z_copy_2_stream_write;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        z_copy_2_stream_write = grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_z_copy_2_stream_write;
    end else begin
        z_copy_2_stream_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        z_old_stream_din = grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_din;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        z_old_stream_din = grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_z_old_stream_din;
    end else begin
        z_old_stream_din = grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        z_old_stream_read = grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_z_old_stream_read;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        z_old_stream_read = grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_read;
    end else begin
        z_old_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        z_old_stream_write = grp_krnl_bp_Pipeline_l_main_fu_287_z_old_stream_write;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        z_old_stream_write = grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_z_old_stream_write;
    end else begin
        z_old_stream_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        z_u_stream_read = grp_krnl_bp_Pipeline_l_main_fu_287_z_u_stream_read;
    end else begin
        z_u_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        z_u_stream_write = grp_krnl_bp_Pipeline_l_main_fu_287_z_u_stream_write;
    end else begin
        z_u_stream_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((gmem1_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (1'b0 == ap_block_state74_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            if (((grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            if (((grp_krnl_bp_Pipeline_l_main_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            if (((grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state91))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            if ((~((gmem2_AWREADY == 1'b0) | (1'b1 == ap_block_state94_on_subcall_done)) & (1'b1 == ap_CS_fsm_state94))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state95 : begin
            if (((gmem2_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state95))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            if (((gmem2_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state163))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state163;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_NS_fsm_state73 = ap_NS_fsm[32'd72];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = ((gmem1_ARREADY == 1'b0) | (gmem0_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state74_on_subcall_done = ((grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_done == 1'b0) | (grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state94_on_subcall_done = ((grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_done == 1'b0) | (grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_done == 1'b0));
end

assign grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_start = grp_krnl_bp_Pipeline_VITIS_LOOP_229_14_fu_344_ap_start_reg;

assign grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_start = grp_krnl_bp_Pipeline_VITIS_LOOP_229_15_fu_350_ap_start_reg;

assign grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_start = grp_krnl_bp_Pipeline_VITIS_LOOP_229_1_fu_338_ap_start_reg;

assign grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_start = grp_krnl_bp_Pipeline_VITIS_LOOP_236_12_fu_275_ap_start_reg;

assign grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_start = grp_krnl_bp_Pipeline_VITIS_LOOP_236_13_fu_281_ap_start_reg;

assign grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_start = grp_krnl_bp_Pipeline_VITIS_LOOP_236_1_fu_269_ap_start_reg;

assign grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_start = grp_krnl_bp_Pipeline_l_load_input1_fu_262_ap_start_reg;

assign grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_start = grp_krnl_bp_Pipeline_l_load_input_fu_253_ap_start_reg;

assign grp_krnl_bp_Pipeline_l_main_fu_287_ap_start = grp_krnl_bp_Pipeline_l_main_fu_287_ap_start_reg;

assign grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_start = grp_krnl_bp_Pipeline_l_write_mem_fu_356_ap_start_reg;

assign sext_ln15_1_fu_408_p1 = $signed(trunc_ln15_1_reg_444);

assign sext_ln15_fu_398_p1 = $signed(trunc_ln_reg_438);

assign sext_ln475_fu_418_p1 = $signed(trunc_ln4_reg_449);

endmodule //krnl_bp
