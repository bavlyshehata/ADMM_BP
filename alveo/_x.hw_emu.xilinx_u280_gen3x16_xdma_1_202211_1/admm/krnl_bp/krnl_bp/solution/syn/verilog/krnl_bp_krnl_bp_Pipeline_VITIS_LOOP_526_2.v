// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_526_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_stream_dout,
        x_stream_empty_n,
        x_stream_read,
        z_old_stream_dout,
        z_old_stream_empty_n,
        z_old_stream_read,
        x_hat_stream_din,
        x_hat_stream_full_n,
        x_hat_stream_write,
        alpha,
        reg_alpha,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n,
        grp_fu_631_p_din0,
        grp_fu_631_p_din1,
        grp_fu_631_p_dout0,
        grp_fu_631_p_ce,
        grp_fu_636_p_din0,
        grp_fu_636_p_din1,
        grp_fu_636_p_dout0,
        grp_fu_636_p_ce,
        grp_fu_626_p_din0,
        grp_fu_626_p_din1,
        grp_fu_626_p_opcode,
        grp_fu_626_p_dout0,
        grp_fu_626_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x_stream_dout;
input   x_stream_empty_n;
output   x_stream_read;
input  [31:0] z_old_stream_dout;
input   z_old_stream_empty_n;
output   z_old_stream_read;
output  [31:0] x_hat_stream_din;
input   x_hat_stream_full_n;
output   x_hat_stream_write;
input  [31:0] alpha;
input  [31:0] reg_alpha;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;
output  [31:0] grp_fu_631_p_din0;
output  [31:0] grp_fu_631_p_din1;
input  [31:0] grp_fu_631_p_dout0;
output   grp_fu_631_p_ce;
output  [31:0] grp_fu_636_p_din0;
output  [31:0] grp_fu_636_p_din1;
input  [31:0] grp_fu_636_p_dout0;
output   grp_fu_636_p_ce;
output  [31:0] grp_fu_626_p_din0;
output  [31:0] grp_fu_626_p_din1;
output  [0:0] grp_fu_626_p_opcode;
input  [31:0] grp_fu_626_p_dout0;
output   grp_fu_626_p_ce;

reg ap_idle;
reg x_stream_read;
reg z_old_stream_read;
reg[31:0] x_hat_stream_din;
reg x_hat_stream_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] tmp_1_nbreadreq_fu_62_p3;
wire   [0:0] tmp_2_nbreadreq_fu_70_p3;
reg    ap_predicate_op38_read_state2;
reg    ap_predicate_op39_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
reg   [0:0] tmp_2_reg_172;
reg   [0:0] tmp_2_reg_172_pp0_iter12_reg;
reg   [0:0] tmp_1_reg_168;
reg   [0:0] tmp_1_reg_168_pp0_iter12_reg;
reg    ap_predicate_op40_write_state3;
reg    ap_predicate_op43_write_state3;
reg    ap_block_state3_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln526_fu_118_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    x_stream_blk_n;
wire    ap_block_pp0_stage0;
reg    z_old_stream_blk_n;
reg    x_hat_stream_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_1_reg_168_pp0_iter2_reg;
reg   [0:0] tmp_1_reg_168_pp0_iter3_reg;
reg   [0:0] tmp_1_reg_168_pp0_iter4_reg;
reg   [0:0] tmp_1_reg_168_pp0_iter5_reg;
reg   [0:0] tmp_1_reg_168_pp0_iter6_reg;
reg   [0:0] tmp_1_reg_168_pp0_iter7_reg;
reg   [0:0] tmp_1_reg_168_pp0_iter8_reg;
reg   [0:0] tmp_1_reg_168_pp0_iter9_reg;
reg   [0:0] tmp_1_reg_168_pp0_iter10_reg;
reg   [0:0] tmp_1_reg_168_pp0_iter11_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter2_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter3_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter4_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter5_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter6_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter7_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter8_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter9_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter10_reg;
reg   [0:0] tmp_2_reg_172_pp0_iter11_reg;
reg   [31:0] x_stream_read_reg_176;
reg   [31:0] z_old_stream_read_reg_181;
wire   [31:0] x_val_fu_139_p1;
wire   [31:0] z_val_fu_143_p1;
reg   [31:0] mul_i_reg_196;
reg   [31:0] mul26_i_reg_201;
reg   [31:0] result_reg_206;
reg   [3:0] ii_fu_46;
wire   [3:0] ii_13_fu_124_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_ii_12;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] bitcast_ln532_fu_135_p1;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_98_ce;
reg    grp_fu_102_ce;
reg    grp_fu_106_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_done_reg = 1'b0;
end

krnl_bp_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln526_fu_118_p2 == 1'd0))) begin
            ii_fu_46 <= ii_13_fu_124_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            ii_fu_46 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        tmp_1_reg_168_pp0_iter10_reg <= tmp_1_reg_168_pp0_iter9_reg;
        tmp_1_reg_168_pp0_iter11_reg <= tmp_1_reg_168_pp0_iter10_reg;
        tmp_1_reg_168_pp0_iter12_reg <= tmp_1_reg_168_pp0_iter11_reg;
        tmp_1_reg_168_pp0_iter2_reg <= tmp_1_reg_168;
        tmp_1_reg_168_pp0_iter3_reg <= tmp_1_reg_168_pp0_iter2_reg;
        tmp_1_reg_168_pp0_iter4_reg <= tmp_1_reg_168_pp0_iter3_reg;
        tmp_1_reg_168_pp0_iter5_reg <= tmp_1_reg_168_pp0_iter4_reg;
        tmp_1_reg_168_pp0_iter6_reg <= tmp_1_reg_168_pp0_iter5_reg;
        tmp_1_reg_168_pp0_iter7_reg <= tmp_1_reg_168_pp0_iter6_reg;
        tmp_1_reg_168_pp0_iter8_reg <= tmp_1_reg_168_pp0_iter7_reg;
        tmp_1_reg_168_pp0_iter9_reg <= tmp_1_reg_168_pp0_iter8_reg;
        tmp_2_reg_172_pp0_iter10_reg <= tmp_2_reg_172_pp0_iter9_reg;
        tmp_2_reg_172_pp0_iter11_reg <= tmp_2_reg_172_pp0_iter10_reg;
        tmp_2_reg_172_pp0_iter12_reg <= tmp_2_reg_172_pp0_iter11_reg;
        tmp_2_reg_172_pp0_iter2_reg <= tmp_2_reg_172;
        tmp_2_reg_172_pp0_iter3_reg <= tmp_2_reg_172_pp0_iter2_reg;
        tmp_2_reg_172_pp0_iter4_reg <= tmp_2_reg_172_pp0_iter3_reg;
        tmp_2_reg_172_pp0_iter5_reg <= tmp_2_reg_172_pp0_iter4_reg;
        tmp_2_reg_172_pp0_iter6_reg <= tmp_2_reg_172_pp0_iter5_reg;
        tmp_2_reg_172_pp0_iter7_reg <= tmp_2_reg_172_pp0_iter6_reg;
        tmp_2_reg_172_pp0_iter8_reg <= tmp_2_reg_172_pp0_iter7_reg;
        tmp_2_reg_172_pp0_iter9_reg <= tmp_2_reg_172_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        tmp_1_reg_168 <= tmp_1_nbreadreq_fu_62_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_reg_172_pp0_iter4_reg == 1'd1) & (tmp_1_reg_168_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul26_i_reg_201 <= grp_fu_636_p_dout0;
        mul_i_reg_196 <= grp_fu_631_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_reg_172_pp0_iter11_reg == 1'd1) & (tmp_1_reg_168_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        result_reg_206 <= grp_fu_626_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_62_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_2_reg_172 <= tmp_2_nbreadreq_fu_70_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op38_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_stream_read_reg_176 <= x_stream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op39_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z_old_stream_read_reg_181 <= z_old_stream_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln526_fu_118_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_ii_12 = 4'd0;
    end else begin
        ap_sig_allocacmp_ii_12 = ii_fu_46;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_102_ce = 1'b1;
    end else begin
        grp_fu_102_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_106_ce = 1'b1;
    end else begin
        grp_fu_106_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_98_ce = 1'b1;
    end else begin
        grp_fu_98_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op43_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op40_write_state3 == 1'b1)))) begin
        x_hat_stream_blk_n = x_hat_stream_full_n;
    end else begin
        x_hat_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((ap_predicate_op43_write_state3 == 1'b1)) begin
            x_hat_stream_din = bitcast_ln532_fu_135_p1;
        end else if ((ap_predicate_op40_write_state3 == 1'b1)) begin
            x_hat_stream_din = 32'd0;
        end else begin
            x_hat_stream_din = 'bx;
        end
    end else begin
        x_hat_stream_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op43_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op40_write_state3 == 1'b1)))) begin
        x_hat_stream_write = 1'b1;
    end else begin
        x_hat_stream_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op38_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_stream_blk_n = x_stream_empty_n;
    end else begin
        x_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op38_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_stream_read = 1'b1;
    end else begin
        x_stream_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op39_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        z_old_stream_blk_n = z_old_stream_empty_n;
    end else begin
        z_old_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op39_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z_old_stream_read = 1'b1;
    end else begin
        z_old_stream_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op39_read_state2 == 1'b1) & (z_old_stream_empty_n == 1'b0)) | ((ap_predicate_op38_read_state2 == 1'b1) & (x_stream_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (((ap_predicate_op43_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)) | ((ap_predicate_op40_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op39_read_state2 == 1'b1) & (z_old_stream_empty_n == 1'b0)) | ((ap_predicate_op38_read_state2 == 1'b1) & (x_stream_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (((ap_predicate_op43_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)) | ((ap_predicate_op40_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op39_read_state2 == 1'b1) & (z_old_stream_empty_n == 1'b0)) | ((ap_predicate_op38_read_state2 == 1'b1) & (x_stream_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (((ap_predicate_op43_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)) | ((ap_predicate_op40_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op39_read_state2 == 1'b1) & (z_old_stream_empty_n == 1'b0)) | ((ap_predicate_op38_read_state2 == 1'b1) & (x_stream_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (((ap_predicate_op43_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)) | ((ap_predicate_op40_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)))));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op39_read_state2 == 1'b1) & (z_old_stream_empty_n == 1'b0)) | ((ap_predicate_op38_read_state2 == 1'b1) & (x_stream_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter13 = (((ap_predicate_op43_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)) | ((ap_predicate_op40_write_state3 == 1'b1) & (x_hat_stream_full_n == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_n = (1'b1 & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op38_read_state2 = ((tmp_2_nbreadreq_fu_70_p3 == 1'd1) & (tmp_1_nbreadreq_fu_62_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op39_read_state2 = ((tmp_2_nbreadreq_fu_70_p3 == 1'd1) & (tmp_1_nbreadreq_fu_62_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op40_write_state3 = ((tmp_1_reg_168_pp0_iter12_reg == 1'd0) | (tmp_2_reg_172_pp0_iter12_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op43_write_state3 = ((tmp_1_reg_168_pp0_iter12_reg == 1'd1) & (tmp_2_reg_172_pp0_iter12_reg == 1'd1));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign bitcast_ln532_fu_135_p1 = result_reg_206;

assign grp_fu_626_p_ce = grp_fu_98_ce;

assign grp_fu_626_p_din0 = mul_i_reg_196;

assign grp_fu_626_p_din1 = mul26_i_reg_201;

assign grp_fu_626_p_opcode = 2'd0;

assign grp_fu_631_p_ce = grp_fu_102_ce;

assign grp_fu_631_p_din0 = x_val_fu_139_p1;

assign grp_fu_631_p_din1 = alpha;

assign grp_fu_636_p_ce = grp_fu_106_ce;

assign grp_fu_636_p_din0 = reg_alpha;

assign grp_fu_636_p_din1 = z_val_fu_143_p1;

assign icmp_ln526_fu_118_p2 = ((ap_sig_allocacmp_ii_12 == 4'd8) ? 1'b1 : 1'b0);

assign ii_13_fu_124_p2 = (ap_sig_allocacmp_ii_12 + 4'd1);

assign tmp_1_nbreadreq_fu_62_p3 = x_stream_empty_n;

assign tmp_2_nbreadreq_fu_70_p3 = z_old_stream_empty_n;

assign x_val_fu_139_p1 = x_stream_read_reg_176;

assign z_val_fu_143_p1 = z_old_stream_read_reg_181;

endmodule //krnl_bp_krnl_bp_Pipeline_VITIS_LOOP_526_2
